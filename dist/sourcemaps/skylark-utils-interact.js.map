{"version":3,"sources":["skylark-utils-interact.js"],"names":["factory","globals","absolute","relative","base","stack","split","parts","pop","i","length","push","join","define","require","isAmd","amd","isCmd","exports","map","id","deps","dep","hasOwnProperty","Error","module","args","forEach","apply","window","skylarkjs","skylark","langx","interact","maybeAddPx","name","value","cssNumber","dasherize","classRE","classReCache","RegExp","className","node","klass","svg","undefined","baseVal","defaultDisplay","nodeName","element","display","elementDisplay","document","createElement","body","appendChild","getComputedStyle","getPropertyValue","parentNode","removeChild","show","elm","styler","css","this","isInvisible","hide","addClass","names","cls","isString","re","match","property","arguments","computedStyle","style","camelCase","isArrayLike","props","call","prop","removeProperty","key","cssText","hasClass","removeClass","replace","trim","toggleClass","when","self","Array","prototype","every","column-count","columns","font-weight","line-height","opacity","z-index","zoom","mixin","autocssfix","cssHooks","ensureNodes","nodes","copyByClone","cloneNode","flatten","chkName","toLowerCase","after","placing","refNode","parent","nextSibling","insertBefore","append","before","contents","contentDocument","childNodes","tag","setAttribute","createFragment","html","singleTagRE","test","$1","fragmentRE","containers","container","innerHTML","dom","slice","clone","deep","isIE","nodeType","each","getAttribs","attr","setAttrib","getAttrib","contains","child","isChildOf","createTextNode","text","doc","empty","hasChildNodes","firstChild","isNumber","directly","documentElement","isDoc","DOCUMENT_NODE","ownerDoc","ownerDocument","ownerWindow","defaultView","parentWindow","prepend","offsetParent","rootNodeRE","overlay","params","overlayDiv","position","top","left","width","height","zIndex","remove","e","console","warn","oldNode","replaceChild","throb","timer","time","callback","throbber","textNode","clearTimeout","update","nodeValue","end","setTimeout","traverse","fn","len","reverse","children","wrapper","wrapperNode","wrapperInner","unwrap","noder","navigator","userAgent","div","table","tableBody","tableRow","tr","tbody","thead","tfoot","td","th","*","isWindow","normalizeCssEvent","css3EventPrefix","normalizeCssProperty","cssProps","normalizeStyleProperty","cssStyles","browser","vendorPrefix","vendorPrefixRE","css3PropPrefix","css3StylePrefix","vendorPrefixesRE","testEl","matchesSelector","webkitMatchesSelector","mozMatchesSelector","oMatchesSelector","testStyle","matched","lowerFirst","cssPropName","location","support","velm","createInputPseudo","type","elem","createButtonPseudo","ancestor","selector","root","rootIsSelector","matches","ancestors","ret","local","filter","byId","getElementById","closest","descendants","querySelectorAll","matchError","query","descendant","querySelector","find","findAll","first","lastChild","last","previousSibling","nativeMatchesSelector","inArray","isPlainObject","check","adjacent","nextSiblings","previousSiblings","siblings","parser","rawMatch","separator","combinator","combinatorChildren","tagName","attributeKey","attributeOperator","attributeQuote","attributeValue","pseudoMarker","pseudoClass","pseudoQuote","pseudoClassQuotedValue","pseudoClassValue","separatorIndex","parsed","expressions","combinatorIndex","currentSeparator","reversed","reverseCombinator","currentParsed","reUnescape","classList","classes","regexp","escapeRegExp","pseudos","indexOf","attributes","operator","cache","reverseCache","parse","expression","isReversed","Slick","currentCache","raw","exp","j","cexp","from","to","string","rinputs","rheader","parseSelector","button","checked","idx","$","disabled","enabled","eq","even","focus","activeElement","href","tabindex","gt","has","sel","header","hidden","input","lt","not","odd","selected","visible","offsetWidth","item","isArrayFilter","radio","checkbox","file","password","image","submit","reset","divide","cond","nativeSelector","customPseudos","JSON","stringify","part","toUpperCase","arrayFilte","pseudo","getAttribute","hasAttribute","currentExpression","simpleExpCounter","filterSingle","matchs","uniq","concat","combine","bit","node1","op","prev","next","divided","single","currentBit","founds","found","currentItems","finder","removeAttribute","aria","attrName","_attributeData","store","deserializeValue","_store","confirm","_getData","camelName","capitalRE","_setData","data","dataAttrName","cleanData","removeData","pluck","propMap","removeAttr","removeProp","txt","textContent","val","multiple","selectedOptions","option","datax","readonly","for","class","maxlength","cellspacing","cellpadding","rowspan","colspan","usemap","frameborder","contenteditable","scrollbarWidth","cachedScrollbarWidth","w1","w2","innerDiv","clientWidth","borderExtents","s","px","borderLeftWidth","borderTopWidth","right","borderRightWidth","bottom","borderBottomWidth","boundingPosition","coords","getBoundingClientRect","parentOffset","mex","marginExtents","pbex","relativePosition","boundingRect","size","clientHeight","clientSize","dimension","isBorderBox","bex","pex","paddingExtents","contentRect","cs","getDocumentSize","max","Math","scrollWidth","scrollHeight","offsetHeight","marginLeft","marginTop","marginRight","marginBottom","marginRect","obj","relativeRect","me","marginSize","paddingLeft","paddingTop","paddingRight","paddingBottom","pagePosition","pageXOffset","pageYOffset","pageRect","round","offset","scrollIntoView","align","getOffset","rootElm","x","y","offsetLeft","offsetTop","parentWidth","parentHeight","parentElm","pos","scrollLeft","scrollTop","hasScrollLeft","scrollTo","scrollY","hasScrollTop","scrollX","innerWidth","innerHeight","isDocument","geom","toPixel","compatible","event","source","isDefaultPrevented","eventMethods","predicate","sourceMethod","returnTrue","returnFalse","segs","ns","sort","createProxy","src","proxy","originalEvent","ignoreProperties","off","events","$this","isFunction","handler","findHandler","unregister","on","one","ready","register","stop","all","keyCode","preventDefault","stopPropagation","trigger","evented","Event","createEvent","_args","dispatchEvent","readyRE","readyState","defer","addEventListener","shortcuts","registry","run","shortcut","n","metaKey","ctrlKey","ctrl","alt","altKey","shift","shiftKey","charCode","target","add","pattern","shortcutKeys","shortcutKey","setting","charCodeAt","keyCodeLookup","regKey","eventer","uid","stopImmediatePropagation","getEventCtor","NativeEvents","EventCtors","compositionstart","compositionend","compositionupdate","beforecopy","beforecut","beforepaste","copy","cut","paste","drag","dragend","dragenter","dragexit","dragleave","dragover","dragstart","drop","abort","change","error","selectionchange","blur","focusin","focusout","keydown","keypress","keyup","message","click","contextmenu","dblclick","mousedown","mouseup","mousemove","mouseover","mouseout","mouseenter","mouseleave","textInput","touchstart","touchmove","touchend","load","resize","select","scroll","unload","wheel","bubbles","cancelable","namespace","ctor","safeMixin","specialEvents","focusinSupported","hover","realEvent","handlers","EventBindings","init","_target","_event","_bindings","options","bindings","binding","_listener","domEvt","isDefined","isImmediatePropagationStopped","currentTarget","liveFired","related","relatedTarget","result","matcherFor","matcher","removing","removeEventListener","EventsHandler","_handler","specialEvent","bindingEvent","bindType","bindEventName","listener","backspace","comma","delete","down","enter","escape","home","page_down","page_up","period","space","tab","up","create","keys","special","_place","choices","layoutNode","aroundNodeCoords","win","view","String","best","some","choice","corner","overflow","spaceAvailable","w","L","R","M","charAt","h","T","B","res","aroundCorner","bb","startXpos","min","startYpos","startX","startY","endX","endY","at","corners","padding","c","around","anchor","positions","leftToRight","aroundNodePos","domGeometry","anchorBorder","getBorderExtents","anchorChildBorder","t","l","b","r","nodeBorder","nodeChildBorder","sawPosAbsolute","domStyle","parentPos","pcs","bottomYCoord","rightXCoord","kernel","deprecated","array","ltr","movable","updateWithTouchData","changedTouches","downButton","start","originalPos","handleEl","handle","auto","constraints","startedCallback","started","movingCallback","moving","stoppedCallback","stopped","cursor","docSize","screenX","screenY","move","deltaX","deltaY","minX","maxX","minY","maxY","mover","animate","properties","duration","ease","delay","endEvent","wrappedCallback","cssValues","cssProperties","transforms","that","fired","easing","complete","fx","speeds","normal","eace","animationName","animationDuration","animationTiming","animationEnd","supportedTransforms","transitionEnd","transform","transitionProperty","transitionDuration","transitionDelay","transitionTiming","cssReset","debounce","clientLeft","scrollToTop","speed","scale","scrollFrom","parseInt","runEvery","freq","interval","setInterval","clearInterval","toggle","fadeTo","fadeIn","fadeOut","fadeToggle","ceasing","allback","slideDown","visibility","slideUp","queue","slideToggle","animationDelay","fast","slow","wrapper_map","func","context","wrapper_selector","wrapper_selector_until","util","wrapper_every_act","wrapper_every_act_firstArgFunc","oldValueFunc","arg1","funcArg","wrapper_some_chk","wrapper_name_value","newValue","wrapper_value","isQ","rquickExpr","isArray","isObject","NodeList","compact","klassName","exec","wrapper_node_operation","argType","arg","object","el","get","toArray","is","isHtmlNode","excludes","parents","parentsUntil","pushStack","elms","prevObject","replaceWith","newContent","wrap","structure","index","wrapAll","wrappingElement","wrapInner","prevAll","nextAll","detach","fnOver","fnOut","Dimension","m","margin","cb","mb","appendTo","prependTo","insertAfter","replaceAll","original","elems","insert","toogle","andSelf","addBack","place","addContent","content","template","substitute","replaceClass","newClass","oldClass","resizable","defaultOptions","touchActionNone","direction","border","grabber","startSize","currentSize","resizer","classPrefix","data-resize-handler","resizing","resizingCallback","startDim","rectDim","startPos","unselect","draggable","Draggable","droppable","Droppable","dnd","DndManager","Evented","inherit","prepare","dragSource","dragHandle","p","draggingOffsetX","pageX","draggingOffsetY","pageY","ghost","transfer","dragging","draggingClass","draggingGhost","draggingTransfer","dataTransfer","setData","setDragImage","effectAllowed","e1","over","dropped","manager","eventName","hoverClass","activeClass","acceptable","_params","e2","overElm","dropEffect","dropzone","droppedCallback","enterdCount","types","items","webkitGetAsEntry","getAsEntry","webentry","then","files","pastezone","pastedCallback","pasted","clipboardData","getAsFile","picker","selectFiles","pickedFiles","maxFileSize","splice","fileSelected","directory","picked","fileInput","onchange","entries","webkitEntries","webkitdirectory","upload","initDataSettings","o","chunkedUpload","initXHRData","formData","multipart","paramName","headers","contentRange","FormData","blob","uploadName","encodeURI","contentType","getUploadedBytes","jqXHR","range","getResponseHeader","upperBytesPos","BitrateTimer","timestamp","Date","now","getTime","loaded","bitrate","getBitrate","timeDiff","testOnly","uploadedBytes","fs","ub","mcs","maxChunkSize","blobSlice","dfd","Deferred","promise","i18n","_getXHRPromise","currentLoaded","_progress","chunkSize","ajax","done","textStatus","progress","lengthComputable","total","resolveWith","fail","errorThrown","rejectWith","xoptions","singleFileUploads","limitMultiFileUploads","limitMultiFileUploadSize","limitMultiFileUploadSizeOverhead","sequentialUploads","limitConcurrentUploads","recalculateProgress","progressInterval","bitrateInterval","autoUpload","messages","toString","form","serializeArray","fileupload","process","processData","Blob","webkitSlice","mozSlice","Xhr","request","url","_bitrateTimer","jqXhr","entry","path","d","onError","reject","isFile","relativePath","resolve","isDirectory","dirReader","createReader","readEntries","filer","readFile","reader","FileReader","onload","evt","onerror","code","alert","asArrayBuffer","readAsArrayBuffer","asDataUrl","readAsDataURL","asText","readAsText","writeFile","msSaveBlob","dataURItoBlob","a","URL","createObjectURL","CustomEvent","_delegator","domNode","HTMLElement","VisualElement","batch","action","partial","delegate","widgets","defineWidgetClass","delegateEventSplitter","Widget","cid","uniqueId","_ensureElement","$el","render","_removeElement","unlistenTo","setElement","undelegateEvents","_setElement","delegateEvents","method","undelegate","_createElement","attrs","_setAttributes","sortable","connectWith","placeholder","placeholderClass","$container","$items","preparing","ended","placeholders","overing","forcePlaceholderSize","outerHeight","sorter","enable","disable","destory","main"],"mappings":"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","file":"../skylark-utils-interact.js","sourcesContent":["define('skylark-utils/skylark',[\"skylark-langx/skylark\"], function(skylark) {\r\n    return skylark;\r\n});\r\n\ndefine('skylark-utils/langx',[\r\n    \"skylark-langx/langx\"\r\n], function(langx) {\r\n    return langx;\r\n});\r\n\ndefine('skylark-utils-interact/interact',[\r\n    \"skylark-utils/skylark\",\r\n    \"skylark-utils/langx\"\r\n], function(skylark, langx) {\r\n\t\r\n\tvar interact = skylark.interact = {\r\n\t};\r\n\r\n\treturn interact;\r\n});\r\n\r\n\ndefine('skylark-utils/styler',[\r\n    \"./skylark\",\r\n    \"./langx\"\r\n], function(skylark, langx) {\r\n    var every = Array.prototype.every,\r\n        forEach = Array.prototype.forEach,\r\n        camelCase = langx.camelCase,\r\n        dasherize = langx.dasherize;\r\n\r\n    function maybeAddPx(name, value) {\r\n        return (typeof value == \"number\" && !cssNumber[dasherize(name)]) ? value + \"px\" : value\r\n    }\r\n\r\n    var cssNumber = {\r\n            'column-count': 1,\r\n            'columns': 1,\r\n            'font-weight': 1,\r\n            'line-height': 1,\r\n            'opacity': 1,\r\n            'z-index': 1,\r\n            'zoom': 1\r\n        },\r\n        classReCache = {\r\n\r\n        };\r\n\r\n    function classRE(name) {\r\n        return name in classReCache ?\r\n            classReCache[name] : (classReCache[name] = new RegExp('(^|\\\\s)' + name + '(\\\\s|$)'));\r\n    }\r\n\r\n    // access className property while respecting SVGAnimatedString\r\n    function className(node, value) {\r\n        var klass = node.className || '',\r\n            svg = klass && klass.baseVal !== undefined\r\n\r\n        if (value === undefined) return svg ? klass.baseVal : klass\r\n        svg ? (klass.baseVal = value) : (node.className = value)\r\n    }\r\n\r\n\r\n    var elementDisplay = {};\r\n\r\n    function defaultDisplay(nodeName) {\r\n        var element, display\r\n        if (!elementDisplay[nodeName]) {\r\n            element = document.createElement(nodeName)\r\n            document.body.appendChild(element)\r\n            display = getComputedStyle(element, '').getPropertyValue(\"display\")\r\n            element.parentNode.removeChild(element)\r\n            display == \"none\" && (display = \"block\")\r\n            elementDisplay[nodeName] = display\r\n        }\r\n        return elementDisplay[nodeName]\r\n    }\r\n\r\n    function show(elm) {\r\n        styler.css(elm, \"display\", \"\");\r\n        if (styler.css(elm, \"display\") == \"none\") {\r\n            styler.css(elm, \"display\", defaultDisplay(elm.nodeName));\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function isInvisible(elm) {\r\n        return styler.css(elm, \"display\") == \"none\" || styler.css(elm, \"opacity\") == 0;\r\n    }\r\n\r\n    function hide(elm) {\r\n        styler.css(elm, \"display\", \"none\");\r\n        return this;\r\n    }\r\n\r\n    function addClass(elm, name) {\r\n        if (!name) return this\r\n        var cls = className(elm),\r\n            names;\r\n        if (langx.isString(name)) {\r\n            names = name.split(/\\s+/g);\r\n        } else {\r\n            names = name;\r\n        }\r\n        names.forEach(function(klass) {\r\n            var re = classRE(klass);\r\n            if (!cls.match(re)) {\r\n                cls += (cls ? \" \" : \"\") + klass;\r\n            }\r\n        });\r\n\r\n        className(elm, cls);\r\n\r\n        return this;\r\n    }\r\n\r\n    function css(elm, property, value) {\r\n        if (arguments.length < 3) {\r\n            var computedStyle,\r\n                computedStyle = getComputedStyle(elm, '')\r\n            if (langx.isString(property)) {\r\n                return elm.style[camelCase(property)] || computedStyle.getPropertyValue(property)\r\n            } else if (langx.isArrayLike(property)) {\r\n                var props = {}\r\n                forEach.call(property, function(prop) {\r\n                    props[prop] = (elm.style[camelCase(prop)] || computedStyle.getPropertyValue(prop))\r\n                })\r\n                return props\r\n            }\r\n        }\r\n\r\n        var css = '';\r\n        if (typeof(property) == 'string') {\r\n            if (!value && value !== 0) {\r\n                elm.style.removeProperty(dasherize(property));\r\n            } else {\r\n                css = dasherize(property) + \":\" + maybeAddPx(property, value)\r\n            }\r\n        } else {\r\n            for (key in property) {\r\n                if (property[key] === undefined) {\r\n                    continue;\r\n                }\r\n                if (!property[key] && property[key] !== 0) {\r\n                    elm.style.removeProperty(dasherize(key));\r\n                } else {\r\n                    css += dasherize(key) + ':' + maybeAddPx(key, property[key]) + ';'\r\n                }\r\n            }\r\n        }\r\n\r\n        elm.style.cssText += ';' + css;\r\n        return this;\r\n    }\r\n\r\n\r\n    function hasClass(elm, name) {\r\n        var re = classRE(name);\r\n        return elm.className && elm.className.match(re);\r\n    }\r\n\r\n    function removeClass(elm, name) {\r\n        if (name) {\r\n            var cls = className(elm),\r\n                names;\r\n\r\n            if (langx.isString(name)) {\r\n                names = name.split(/\\s+/g);\r\n            } else {\r\n                names = name;\r\n            }\r\n\r\n            names.forEach(function(klass) {\r\n                var re = classRE(klass);\r\n                if (cls.match(re)) {\r\n                    cls = cls.replace(re, \" \");\r\n                }\r\n            });\r\n\r\n            className(elm, cls.trim());\r\n        } else {\r\n            className(elm,\"\");\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    function toggleClass(elm, name, when) {\r\n        var self = this;\r\n        name.split(/\\s+/g).forEach(function(klass) {\r\n            if (when === undefined) {\r\n                when = !self.hasClass(elm, klass);\r\n            }\r\n            if (when) {\r\n                self.addClass(elm, klass);\r\n            } else {\r\n                self.removeClass(elm, klass)\r\n            }\r\n        });\r\n\r\n        return self;\r\n    }\r\n\r\n    var styler = function() {\r\n        return styler;\r\n    };\r\n\r\n    langx.mixin(styler, {\r\n        autocssfix: false,\r\n        cssHooks : {\r\n\r\n        },\r\n        \r\n        addClass: addClass,\r\n        className: className,\r\n        css: css,\r\n        hasClass: hasClass,\r\n        hide: hide,\r\n        isInvisible: isInvisible,\r\n        removeClass: removeClass,\r\n        show: show,\r\n        toggleClass: toggleClass\r\n    });\r\n\r\n    return skylark.styler = styler;\r\n});\r\n\ndefine('skylark-utils/noder',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./styler\"\r\n], function(skylark, langx, styler) {\r\n    var isIE = !!navigator.userAgent.match(/Trident/g) || !!navigator.userAgent.match(/MSIE/g),\r\n        fragmentRE = /^\\s*<(\\w+|!)[^>]*>/,\r\n        singleTagRE = /^<(\\w+)\\s*\\/?>(?:<\\/\\1>|)$/,\r\n        div = document.createElement(\"div\"),\r\n        table = document.createElement('table'),\r\n        tableBody = document.createElement('tbody'),\r\n        tableRow = document.createElement('tr'),\r\n        containers = {\r\n            'tr': tableBody,\r\n            'tbody': table,\r\n            'thead': table,\r\n            'tfoot': table,\r\n            'td': tableRow,\r\n            'th': tableRow,\r\n            '*': div\r\n        },\r\n        rootNodeRE = /^(?:body|html)$/i,\r\n        map = Array.prototype.map,\r\n        slice = Array.prototype.slice;\r\n\r\n    function ensureNodes(nodes, copyByClone) {\r\n        if (!langx.isArrayLike(nodes)) {\r\n            nodes = [nodes];\r\n        }\r\n        if (copyByClone) {\r\n            nodes = map.call(nodes, function(node) {\r\n                return node.cloneNode(true);\r\n            });\r\n        }\r\n        return langx.flatten(nodes);\r\n    }\r\n\r\n    function nodeName(elm, chkName) {\r\n        var name = elm.nodeName && elm.nodeName.toLowerCase();\r\n        if (chkName !== undefined) {\r\n            return name === chkName.toLowerCase();\r\n        }\r\n        return name;\r\n    };\r\n\r\n    function after(node, placing, copyByClone) {\r\n        var refNode = node,\r\n            parent = refNode.parentNode;\r\n        if (parent) {\r\n            var nodes = ensureNodes(placing, copyByClone),\r\n                refNode = refNode.nextSibling;\r\n\r\n            for (var i = 0; i < nodes.length; i++) {\r\n                if (refNode) {\r\n                    parent.insertBefore(nodes[i], refNode);\r\n                } else {\r\n                    parent.appendChild(nodes[i]);\r\n                }\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function append(node, placing, copyByClone) {\r\n        var parentNode = node,\r\n            nodes = ensureNodes(placing, copyByClone);\r\n        for (var i = 0; i < nodes.length; i++) {\r\n            parentNode.appendChild(nodes[i]);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function before(node, placing, copyByClone) {\r\n        var refNode = node,\r\n            parent = refNode.parentNode;\r\n        if (parent) {\r\n            var nodes = ensureNodes(placing, copyByClone);\r\n            for (var i = 0; i < nodes.length; i++) {\r\n                parent.insertBefore(nodes[i], refNode);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function contents(elm) {\r\n        if (nodeName(elm, \"iframe\")) {\r\n            return elm.contentDocument;\r\n        }\r\n        return elm.childNodes;\r\n    }\r\n\r\n    function createElement(tag, props,parent) {\r\n        var node = document.createElement(tag);\r\n        if (props) {\r\n            for (var name in props) {\r\n                node.setAttribute(name, props[name]);\r\n            }\r\n        }\r\n        if (parent) {\r\n            append(parent,node);\r\n        }\r\n        return node;\r\n    }\r\n\r\n    function createFragment(html) {\r\n        // A special case optimization for a single tag\r\n        html = langx.trim(html);\r\n        if (singleTagRE.test(html)) {\r\n            return [createElement(RegExp.$1)];\r\n        }\r\n\r\n        var name = fragmentRE.test(html) && RegExp.$1\r\n        if (!(name in containers)) {\r\n            name = \"*\"\r\n        }\r\n        var container = containers[name];\r\n        container.innerHTML = \"\" + html;\r\n        dom = slice.call(container.childNodes);\r\n\r\n        dom.forEach(function(node) {\r\n            container.removeChild(node);\r\n        })\r\n\r\n        return dom;\r\n    }\r\n\r\n    function clone(node, deep) {\r\n        var self = this,\r\n            clone;\r\n\r\n        // TODO: Add feature detection here in the future\r\n        if (!isIE || node.nodeType !== 1 || deep) {\r\n            return node.cloneNode(deep);\r\n        }\r\n\r\n        // Make a HTML5 safe shallow copy\r\n        if (!deep) {\r\n            clone = document.createElement(node.nodeName);\r\n\r\n            // Copy attribs\r\n            each(self.getAttribs(node), function(attr) {\r\n                self.setAttrib(clone, attr.nodeName, self.getAttrib(node, attr.nodeName));\r\n            });\r\n\r\n            return clone;\r\n        }\r\n    }\r\n\r\n    function contains(node, child) {\r\n        return isChildOf(child, node);\r\n    }\r\n\r\n    function createTextNode(text) {\r\n        return document.createTextNode(text);\r\n    }\r\n\r\n    function doc() {\r\n        return document;\r\n    }\r\n\r\n    function empty(node) {\r\n        while (node.hasChildNodes()) {\r\n            var child = node.firstChild;\r\n            node.removeChild(child);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function html(node, html) {\r\n        if (html === undefined) {\r\n            return node.innerHTML;\r\n        } else {\r\n            this.empty(node);\r\n            html = html || \"\";\r\n            if (langx.isString(html) || langx.isNumber(html)) {\r\n                node.innerHTML = html;\r\n            } else if (langx.isArrayLike(html)) {\r\n                for (var i = 0; i < html.length; i++) {\r\n                    node.appendChild(html[i]);\r\n                }\r\n            } else {\r\n                node.appendChild(html);\r\n            }\r\n        }\r\n    }\r\n\r\n    function isChildOf(node, parent,directly) {\r\n        if (directly) {\r\n            return node.parentNode === parent;\r\n        }\r\n        if (document.documentElement.contains) {\r\n            return parent.contains(node);\r\n        }\r\n        while (node) {\r\n            if (parent === node) {\r\n                return true;\r\n            }\r\n\r\n            node = node.parentNode;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    function isDoc(node) {\r\n        return node != null && node.nodeType == node.DOCUMENT_NODE\r\n    }\r\n\r\n    function ownerDoc(elm) {\r\n        if (!elm) {\r\n            return document;\r\n        }\r\n\r\n        if (elm.nodeType == 9) {\r\n            return elm;\r\n        }\r\n\r\n        return elm.ownerDocument;\r\n    }\r\n\r\n    function ownerWindow(elm) {\r\n        var doc = ownerDoc(elm);\r\n        return  doc.defaultView || doc.parentWindow;\r\n    } \r\n\r\n\r\n    function prepend(node, placing, copyByClone) {\r\n        var parentNode = node,\r\n            refNode = parentNode.firstChild,\r\n            nodes = ensureNodes(placing, copyByClone);\r\n        for (var i = 0; i < nodes.length; i++) {\r\n            if (refNode) {\r\n                parentNode.insertBefore(nodes[i], refNode);\r\n            } else {\r\n                parentNode.appendChild(nodes[i]);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n\r\n    function offsetParent(elm) {\r\n        var parent = elm.offsetParent || document.body;\r\n        while (parent && !rootNodeRE.test(parent.nodeName) && styler.css(parent, \"position\") == \"static\") {\r\n            parent = parent.offsetParent;\r\n        }\r\n        return parent;\r\n    }\r\n\r\n    function overlay(elm, params) {\r\n        var overlayDiv = createElement(\"div\", params);\r\n        styler.css(overlayDiv, {\r\n            position: \"absolute\",\r\n            top: 0,\r\n            left: 0,\r\n            width: \"100%\",\r\n            height: \"100%\",\r\n            zIndex: 0x7FFFFFFF,\r\n            opacity: 0.7\r\n        });\r\n        elm.appendChild(overlayDiv);\r\n        return overlayDiv;\r\n\r\n    }\r\n\r\n\r\n\r\n    function remove(node) {\r\n        if (node && node.parentNode) {\r\n            try {\r\n               node.parentNode.removeChild(node);\r\n            } catch (e) {\r\n                console.warn(\"The node is already removed\",e);\r\n            }\r\n         }\r\n        return this;\r\n    }\r\n\r\n    function replace(node, oldNode) {\r\n        oldNode.parentNode.replaceChild(node, oldNode);\r\n        return this;\r\n    }\r\n\r\n    function throb(elm, params) {\r\n        params = params || {};\r\n        var self = this,\r\n            text = params.text,\r\n            style = params.style,\r\n            time = params.time,\r\n            callback = params.callback,\r\n            timer,\r\n            throbber = this.createElement(\"div\", {\r\n                className: params.className || \"throbber\",\r\n                style: style\r\n            }),\r\n            _overlay = overlay(throbber, {\r\n                className: 'overlay fade'\r\n            }),\r\n            throb = this.createElement(\"div\", {\r\n                className: \"throb\"\r\n            }),\r\n            textNode = this.createTextNode(text || \"\"),\r\n            remove = function() {\r\n                if (timer) {\r\n                    clearTimeout(timer);\r\n                    timer = null;\r\n                }\r\n                if (throbber) {\r\n                    self.remove(throbber);\r\n                    throbber = null;\r\n                }\r\n            },\r\n            update = function(params) {\r\n                if (params && params.text && throbber) {\r\n                    textNode.nodeValue = params.text;\r\n                }\r\n            };\r\n        throb.appendChild(textNode);\r\n        throbber.appendChild(throb);\r\n        elm.appendChild(throbber);\r\n        var end = function() {\r\n            remove();\r\n            if (callback) callback();\r\n        };\r\n        if (time) {\r\n            timer = setTimeout(end, time);\r\n        }\r\n\r\n        return {\r\n            remove: remove,\r\n            update: update\r\n        };\r\n    }\r\n\r\n    function traverse(node, fn) {\r\n        fn(node)\r\n        for (var i = 0, len = node.childNodes.length; i < len; i++) {\r\n            traverse(node.childNodes[i], fn);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function reverse(node) {\r\n        var firstChild = node.firstChild;\r\n        for (var i = node.children.length - 1; i > 0; i--) {\r\n            if (i > 0) {\r\n                var child = node.children[i];\r\n                node.insertBefore(child, firstChild);\r\n            }\r\n        }\r\n    }\r\n\r\n    function wrapper(node, wrapperNode) {\r\n        if (langx.isString(wrapperNode)) {\r\n            wrapperNode = this.createFragment(wrapperNode).firstChild;\r\n        }\r\n        node.parentNode.insertBefore(wrapperNode, node);\r\n        wrapperNode.appendChild(node);\r\n    }\r\n\r\n    function wrapperInner(node, wrapperNode) {\r\n        var childNodes = slice.call(node.childNodes);\r\n        node.appendChild(wrapperNode);\r\n        for (var i = 0; i < childNodes.length; i++) {\r\n            wrapperNode.appendChild(childNodes[i]);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function unwrap(node) {\r\n        var child, parent = node.parentNode;\r\n        if (parent) {\r\n            if (this.isDoc(parent.parentNode)) return;\r\n            parent.parentNode.insertBefore(node, parent);\r\n        }\r\n    }\r\n\r\n    function noder() {\r\n        return noder;\r\n    }\r\n\r\n    langx.mixin(noder, {\r\n        body : function() {\r\n            return document.body;\r\n        },\r\n\r\n        clone: clone,\r\n        contents: contents,\r\n\r\n        createElement: createElement,\r\n\r\n        createFragment: createFragment,\r\n\r\n        contains: contains,\r\n\r\n        createTextNode: createTextNode,\r\n\r\n        doc: doc,\r\n\r\n        empty: empty,\r\n\r\n        html: html,\r\n\r\n        isChildOf: isChildOf,\r\n\r\n        isDoc: isDoc,\r\n\r\n        isWindow : langx.isWindow,\r\n\r\n        offsetParent : offsetParent,\r\n        \r\n        ownerDoc: ownerDoc,\r\n\r\n        ownerWindow : ownerWindow,\r\n\r\n        after: after,\r\n\r\n        before: before,\r\n\r\n        prepend: prepend,\r\n\r\n        append: append,\r\n\r\n        remove: remove,\r\n\r\n        replace: replace,\r\n\r\n        throb: throb,\r\n\r\n        traverse: traverse,\r\n\r\n        reverse: reverse,\r\n\r\n        wrapper: wrapper,\r\n\r\n        wrapperInner: wrapperInner,\r\n\r\n        unwrap: unwrap\r\n    });\r\n\r\n    return skylark.noder = noder;\r\n});\r\n\ndefine('skylark-utils/browser',[\r\n    \"./skylark\",\r\n    \"./langx\"\r\n], function(skylark,langx) {\r\n    var checkedCssProperties = {\r\n        \"transitionproperty\": \"TransitionProperty\",\r\n    };\r\n\r\n    var css3PropPrefix = \"\",\r\n        css3StylePrefix = \"\",\r\n        css3EventPrefix = \"\",\r\n\r\n        cssStyles = {},\r\n        cssProps = {},\r\n\r\n        vendorPrefix,\r\n        vendorPrefixRE,\r\n        vendorPrefixesRE = /^(Webkit|webkit|O|Moz|moz|ms)(.*)$/,\r\n\r\n        document = window.document,\r\n        testEl = document.createElement(\"div\"),\r\n\r\n        matchesSelector = testEl.webkitMatchesSelector ||\r\n        testEl.mozMatchesSelector ||\r\n        testEl.oMatchesSelector ||\r\n        testEl.matchesSelector,\r\n\r\n        testStyle = testEl.style;\r\n\r\n    for (var name in testStyle) {\r\n        var matched = name.match(vendorPrefixRE || vendorPrefixesRE);\r\n        if (matched) {\r\n            if (!vendorPrefixRE) {\r\n                vendorPrefix = matched[1];\r\n                vendorPrefixRE = new RegExp(\"^(\" + vendorPrefix + \")(.*)$\");\r\n\r\n                css3StylePrefix = vendorPrefix;\r\n                css3PropPrefix = '-' + vendorPrefix.toLowerCase() + '-';\r\n                css3EventPrefix = vendorPrefix.toLowerCase();\r\n            }\r\n\r\n            cssStyles[langx.lowerFirst(matched[2])] = name;\r\n            var cssPropName = langx.dasherize(matched[2]);\r\n            cssProps[cssPropName] = css3PropPrefix + cssPropName;\r\n\r\n        }\r\n    }\r\n\r\n\r\n    function normalizeCssEvent(name) {\r\n        return css3EventPrefix ? css3EventPrefix + name : name.toLowerCase();\r\n    }\r\n\r\n    function normalizeCssProperty(name) {\r\n        return cssProps[name] || name;\r\n    }\r\n\r\n    function normalizeStyleProperty(name) {\r\n        return cssStyles[name] || name;\r\n    }\r\n\r\n    function browser() {\r\n        return browser;\r\n    }\r\n\r\n    langx.mixin(browser, {\r\n        css3PropPrefix: css3PropPrefix,\r\n\r\n        normalizeStyleProperty: normalizeStyleProperty,\r\n\r\n        normalizeCssProperty: normalizeCssProperty,\r\n\r\n        normalizeCssEvent: normalizeCssEvent,\r\n\r\n        matchesSelector: matchesSelector,\r\n\r\n        location: function() {\r\n            return window.location;\r\n        },\r\n\r\n        support : {}\r\n\r\n    });\r\n\r\n    testEl = null;\r\n\r\n    return skylark.browser = browser;\r\n});\r\n\ndefine('skylark-utils/finder',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./browser\",\r\n    \"./noder\"\r\n], function(skylark, langx, browser, noder, velm) {\r\n    var local = {},\r\n        filter = Array.prototype.filter,\r\n        slice = Array.prototype.slice,\r\n        nativeMatchesSelector = browser.matchesSelector;\r\n\r\n    /*\r\n    ---\r\n    name: Slick.Parser\r\n    description: Standalone CSS3 Selector parser\r\n    provides: Slick.Parser\r\n    ...\r\n    */\r\n    ;\r\n    (function() {\r\n\r\n        var parsed,\r\n            separatorIndex,\r\n            combinatorIndex,\r\n            reversed,\r\n            cache = {},\r\n            reverseCache = {},\r\n            reUnescape = /\\\\/g;\r\n\r\n        var parse = function(expression, isReversed) {\r\n            if (expression == null) return null;\r\n            if (expression.Slick === true) return expression;\r\n            expression = ('' + expression).replace(/^\\s+|\\s+$/g, '');\r\n            reversed = !!isReversed;\r\n            var currentCache = (reversed) ? reverseCache : cache;\r\n            if (currentCache[expression]) return currentCache[expression];\r\n            parsed = {\r\n                Slick: true,\r\n                expressions: [],\r\n                raw: expression,\r\n                reverse: function() {\r\n                    return parse(this.raw, true);\r\n                }\r\n            };\r\n            separatorIndex = -1;\r\n            while (expression != (expression = expression.replace(regexp, parser)));\r\n            parsed.length = parsed.expressions.length;\r\n            return currentCache[parsed.raw] = (reversed) ? reverse(parsed) : parsed;\r\n        };\r\n\r\n        var reverseCombinator = function(combinator) {\r\n            if (combinator === '!') return ' ';\r\n            else if (combinator === ' ') return '!';\r\n            else if ((/^!/).test(combinator)) return combinator.replace(/^!/, '');\r\n            else return '!' + combinator;\r\n        };\r\n\r\n        var reverse = function(expression) {\r\n            var expressions = expression.expressions;\r\n            for (var i = 0; i < expressions.length; i++) {\r\n                var exp = expressions[i];\r\n                var last = {\r\n                    parts: [],\r\n                    tag: '*',\r\n                    combinator: reverseCombinator(exp[0].combinator)\r\n                };\r\n\r\n                for (var j = 0; j < exp.length; j++) {\r\n                    var cexp = exp[j];\r\n                    if (!cexp.reverseCombinator) cexp.reverseCombinator = ' ';\r\n                    cexp.combinator = cexp.reverseCombinator;\r\n                    delete cexp.reverseCombinator;\r\n                }\r\n\r\n                exp.reverse().push(last);\r\n            }\r\n            return expression;\r\n        };\r\n\r\n        var escapeRegExp = (function() {\r\n            // Credit: XRegExp 0.6.1 (c) 2007-2008 Steven Levithan <http://stevenlevithan.com/regex/xregexp/> MIT License\r\n            var from = /(?=[\\-\\[\\]{}()*+?.\\\\\\^$|,#\\s])/g,\r\n                to = '\\\\';\r\n            return function(string) {\r\n                return string.replace(from, to)\r\n            }\r\n        }())\r\n\r\n        var regexp = new RegExp(\r\n            \"^(?:\\\\s*(,)\\\\s*|\\\\s*(<combinator>+)\\\\s*|(\\\\s+)|(<unicode>+|\\\\*)|\\\\#(<unicode>+)|\\\\.(<unicode>+)|\\\\[\\\\s*(<unicode1>+)(?:\\\\s*([*^$!~|]?=)(?:\\\\s*(?:([\\\"']?)(.*?)\\\\9)))?\\\\s*\\\\](?!\\\\])|(:+)(<unicode>+)(?:\\\\((?:(?:([\\\"'])([^\\\\13]*)\\\\13)|((?:\\\\([^)]+\\\\)|[^()]*)+))\\\\))?)\"\r\n            .replace(/<combinator>/, '[' + escapeRegExp(\">+~`!@$%^&={}\\\\;</\") + ']')\r\n            .replace(/<unicode>/g, '(?:[\\\\w\\\\u00a1-\\\\uFFFF-]|\\\\\\\\[^\\\\s0-9a-f])')\r\n            .replace(/<unicode1>/g, '(?:[:\\\\w\\\\u00a1-\\\\uFFFF-]|\\\\\\\\[^\\\\s0-9a-f])')\r\n        );\r\n\r\n        function parser(\r\n            rawMatch,\r\n\r\n            separator,\r\n            combinator,\r\n            combinatorChildren,\r\n\r\n            tagName,\r\n            id,\r\n            className,\r\n\r\n            attributeKey,\r\n            attributeOperator,\r\n            attributeQuote,\r\n            attributeValue,\r\n\r\n            pseudoMarker,\r\n            pseudoClass,\r\n            pseudoQuote,\r\n            pseudoClassQuotedValue,\r\n            pseudoClassValue\r\n        ) {\r\n            if (separator || separatorIndex === -1) {\r\n                parsed.expressions[++separatorIndex] = [];\r\n                combinatorIndex = -1;\r\n                if (separator) return '';\r\n            }\r\n\r\n            if (combinator || combinatorChildren || combinatorIndex === -1) {\r\n                combinator = combinator || ' ';\r\n                var currentSeparator = parsed.expressions[separatorIndex];\r\n                if (reversed && currentSeparator[combinatorIndex])\r\n                    currentSeparator[combinatorIndex].reverseCombinator = reverseCombinator(combinator);\r\n                currentSeparator[++combinatorIndex] = {\r\n                    combinator: combinator,\r\n                    tag: '*'\r\n                };\r\n            }\r\n\r\n            var currentParsed = parsed.expressions[separatorIndex][combinatorIndex];\r\n\r\n            if (tagName) {\r\n                currentParsed.tag = tagName.replace(reUnescape, '');\r\n\r\n            } else if (id) {\r\n                currentParsed.id = id.replace(reUnescape, '');\r\n\r\n            } else if (className) {\r\n                className = className.replace(reUnescape, '');\r\n\r\n                if (!currentParsed.classList) currentParsed.classList = [];\r\n                if (!currentParsed.classes) currentParsed.classes = [];\r\n                currentParsed.classList.push(className);\r\n                currentParsed.classes.push({\r\n                    value: className,\r\n                    regexp: new RegExp('(^|\\\\s)' + escapeRegExp(className) + '(\\\\s|$)')\r\n                });\r\n\r\n            } else if (pseudoClass) {\r\n                pseudoClassValue = pseudoClassValue || pseudoClassQuotedValue;\r\n                pseudoClassValue = pseudoClassValue ? pseudoClassValue.replace(reUnescape, '') : null;\r\n\r\n                if (!currentParsed.pseudos) currentParsed.pseudos = [];\r\n                currentParsed.pseudos.push({\r\n                    key: pseudoClass.replace(reUnescape, ''),\r\n                    value: pseudoClassValue,\r\n                    type: pseudoMarker.length == 1 ? 'class' : 'element'\r\n                });\r\n\r\n            } else if (attributeKey) {\r\n                attributeKey = attributeKey.replace(reUnescape, '');\r\n                attributeValue = (attributeValue || '').replace(reUnescape, '');\r\n\r\n                var test, regexp;\r\n\r\n                switch (attributeOperator) {\r\n                    case '^=':\r\n                        regexp = new RegExp('^' + escapeRegExp(attributeValue));\r\n                        break;\r\n                    case '$=':\r\n                        regexp = new RegExp(escapeRegExp(attributeValue) + '$');\r\n                        break;\r\n                    case '~=':\r\n                        regexp = new RegExp('(^|\\\\s)' + escapeRegExp(attributeValue) + '(\\\\s|$)');\r\n                        break;\r\n                    case '|=':\r\n                        regexp = new RegExp('^' + escapeRegExp(attributeValue) + '(-|$)');\r\n                        break;\r\n                    case '=':\r\n                        test = function(value) {\r\n                            return attributeValue == value;\r\n                        };\r\n                        break;\r\n                    case '*=':\r\n                        test = function(value) {\r\n                            return value && value.indexOf(attributeValue) > -1;\r\n                        };\r\n                        break;\r\n                    case '!=':\r\n                        test = function(value) {\r\n                            return attributeValue != value;\r\n                        };\r\n                        break;\r\n                    default:\r\n                        test = function(value) {\r\n                            return !!value;\r\n                        };\r\n                }\r\n\r\n                if (attributeValue == '' && (/^[*$^]=$/).test(attributeOperator)) test = function() {\r\n                    return false;\r\n                };\r\n\r\n                if (!test) test = function(value) {\r\n                    return value && regexp.test(value);\r\n                };\r\n\r\n                if (!currentParsed.attributes) currentParsed.attributes = [];\r\n                currentParsed.attributes.push({\r\n                    key: attributeKey,\r\n                    operator: attributeOperator,\r\n                    value: attributeValue,\r\n                    test: test\r\n                });\r\n\r\n            }\r\n\r\n            return '';\r\n        };\r\n\r\n        // Slick NS\r\n\r\n        var Slick = (this.Slick || {});\r\n\r\n        Slick.parse = function(expression) {\r\n            return parse(expression);\r\n        };\r\n\r\n        Slick.escapeRegExp = escapeRegExp;\r\n\r\n        if (!this.Slick) this.Slick = Slick;\r\n\r\n    }).apply(local);\r\n\r\n\r\n    var simpleClassSelectorRE = /^\\.([\\w-]*)$/,\r\n        simpleIdSelectorRE = /^#([\\w-]*)$/,\r\n        rinputs = /^(?:input|select|textarea|button)$/i,\r\n        rheader = /^h\\d$/i,\r\n        slice = Array.prototype.slice;\r\n\r\n\r\n    local.parseSelector = local.Slick.parse;\r\n\r\n\r\n    var pseudos = local.pseudos = {\r\n        // custom pseudos\r\n        \"button\": function( elem ) {\r\n            var name = elem.nodeName.toLowerCase();\r\n            return name === \"input\" && elem.type === \"button\" || name === \"button\";\r\n        },\r\n\r\n        'checked': function(elm) {\r\n            return !!elm.checked;\r\n        },\r\n\r\n        'contains': function(elm, idx, nodes, text) {\r\n            if ($(this).text().indexOf(text) > -1) return this\r\n        },\r\n\r\n        'disabled': function(elm) {\r\n            return !!elm.disabled;\r\n        },\r\n\r\n        'enabled': function(elm) {\r\n            return !elm.disabled;\r\n        },\r\n\r\n        'eq': function(elm, idx, nodes, value) {\r\n            return (idx == value);\r\n        },\r\n\r\n        'even' : function(elm, idx, nodes, value) {\r\n            return (idx % 2) === 0;\r\n        },\r\n\r\n        'focus': function(elm) {\r\n            return document.activeElement === elm && (elm.href || elm.type || elm.tabindex);\r\n        },\r\n\r\n        'first': function(elm, idx) {\r\n            return (idx === 0);\r\n        },\r\n\r\n        'gt': function(elm, idx, nodes, value) {\r\n            return (idx > value);\r\n        },\r\n\r\n        'has': function(elm, idx, nodes, sel) {\r\n            return find(elm, sel);\r\n        },\r\n\r\n        // Element/input types\r\n        \"header\": function( elem ) {\r\n            return rheader.test( elem.nodeName );\r\n        },\r\n\r\n        'hidden': function(elm) {\r\n            return !local.pseudos[\"visible\"](elm);\r\n        },\r\n\r\n        \"input\": function( elem ) {\r\n            return rinputs.test( elem.nodeName );\r\n        },\r\n\r\n        'last': function(elm, idx, nodes) {\r\n            return (idx === nodes.length - 1);\r\n        },\r\n\r\n        'lt': function(elm, idx, nodes, value) {\r\n            return (idx < value);\r\n        },\r\n\r\n        'not': function(elm, idx, nodes, sel) {\r\n            return !matches(elm, sel);\r\n        },\r\n\r\n        'odd' : function(elm, idx, nodes, value) {\r\n            return (idx % 2) === 1;\r\n        },\r\n\r\n        'parent': function(elm) {\r\n            return !!elm.parentNode;\r\n        },\r\n\r\n        'selected': function(elm) {\r\n            return !!elm.selected;\r\n        },\r\n\r\n        'text': function(elm){\r\n            return elm.type === \"text\";\r\n        },\r\n\r\n        'visible': function(elm) {\r\n            return elm.offsetWidth && elm.offsetWidth\r\n        }\r\n    };\r\n\r\n    [\"first\",\"eq\",\"last\"].forEach(function(item){\r\n        pseudos[item].isArrayFilter = true;\r\n    });\r\n\r\n\r\n\r\n    pseudos[\"nth\"] = pseudos[\"eq\"];\r\n\r\n    function createInputPseudo( type ) {\r\n        return function( elem ) {\r\n            var name = elem.nodeName.toLowerCase();\r\n            return name === \"input\" && elem.type === type;\r\n        };\r\n    }\r\n\r\n    function createButtonPseudo( type ) {\r\n        return function( elem ) {\r\n            var name = elem.nodeName.toLowerCase();\r\n            return (name === \"input\" || name === \"button\") && elem.type === type;\r\n        };\r\n    }\r\n\r\n    // Add button/input type pseudos\r\n    for ( i in { radio: true, checkbox: true, file: true, password: true, image: true } ) {\r\n        pseudos[ i ] = createInputPseudo( i );\r\n    }\r\n    for ( i in { submit: true, reset: true } ) {\r\n        pseudos[ i ] = createButtonPseudo( i );\r\n    }\r\n\r\n\r\n    local.divide = function(cond) {\r\n        var nativeSelector = \"\",\r\n            customPseudos = [],\r\n            tag,\r\n            id,\r\n            classes,\r\n            attributes,\r\n            pseudos;\r\n\r\n\r\n        if (id = cond.id) {\r\n            nativeSelector += (\"#\" + id);\r\n        }\r\n        if (classes = cond.classes) {\r\n            for (var i = classes.length; i--;) {\r\n                nativeSelector += (\".\" + classes[i].value);\r\n            }\r\n        }\r\n        if (attributes = cond.attributes) {\r\n            for (var i = 0; i < attributes.length; i++) {\r\n                if (attributes[i].operator) {\r\n                    nativeSelector += (\"[\" + attributes[i].key + attributes[i].operator + JSON.stringify(attributes[i].value)  +\"]\");\r\n                } else {\r\n                    nativeSelector += (\"[\" + attributes[i].key + \"]\");\r\n                }\r\n            }\r\n        }\r\n        if (pseudos = cond.pseudos) {\r\n            for (i = pseudos.length; i--;) {\r\n                part = pseudos[i];\r\n                if (this.pseudos[part.key]) {\r\n                    customPseudos.push(part);\r\n                } else {\r\n                    if (part.value !== undefined) {\r\n                        nativeSelector += (\":\" + part.key + \"(\" + JSON.stringify(part))\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (tag = cond.tag) {\r\n            nativeSelector = tag.toUpperCase() + nativeSelector;\r\n        }\r\n\r\n        if (!nativeSelector) {\r\n            nativeSelector = \"*\";\r\n        }\r\n\r\n        return {\r\n            nativeSelector: nativeSelector,\r\n            customPseudos: customPseudos\r\n        }\r\n\r\n    };\r\n\r\n    local.check = function(node, cond, idx, nodes,arrayFilte) {\r\n        var tag,\r\n            id,\r\n            classes,\r\n            attributes,\r\n            pseudos,\r\n\r\n            i, part, cls, pseudo;\r\n\r\n        if (!arrayFilte) {\r\n            if (tag = cond.tag) {\r\n                var nodeName = node.nodeName.toUpperCase();\r\n                if (tag == '*') {\r\n                    if (nodeName < '@') return false; // Fix for comment nodes and closed nodes\r\n                } else {\r\n                    if (nodeName != (tag || \"\").toUpperCase()) return false;\r\n                }\r\n            }\r\n\r\n            if (id = cond.id) {\r\n                if (node.getAttribute('id') != id) {\r\n                    return false;\r\n                }\r\n            }\r\n\r\n\r\n            if (classes = cond.classes) {\r\n                for (i = classes.length; i--;) {\r\n                    cls = node.getAttribute('class');\r\n                    if (!(cls && classes[i].regexp.test(cls))) return false;\r\n                }\r\n            }\r\n\r\n            if (attributes = cond.attributes) {\r\n                 for (i = attributes.length; i--;) {\r\n                    part = attributes[i];\r\n                    if (part.operator ? !part.test(node.getAttribute(part.key)) : !node.hasAttribute(part.key)) return false;\r\n                }\r\n            }\r\n\r\n        }\r\n        if (pseudos = cond.pseudos) {\r\n            for (i = pseudos.length; i--;) {\r\n                part = pseudos[i];\r\n                if (pseudo = this.pseudos[part.key]) {\r\n                    if ((arrayFilte && pseudo.isArrayFilter) || (!arrayFilte && !pseudo.isArrayFilter)) {\r\n                        if (!pseudo(node, idx, nodes, part.value)) {\r\n                            return false;\r\n                        }\r\n                    }\r\n                } else {\r\n                    if (!arrayFilte && !nativeMatchesSelector.call(node, part.key)) {\r\n                        return false;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    local.match = function(node, selector) {\r\n\r\n        var parsed ;\r\n\r\n        if (langx.isString(selector)) {\r\n            parsed = local.Slick.parse(selector);\r\n        } else {\r\n            parsed = selector;            \r\n        }\r\n        \r\n        if (!parsed) {\r\n            return true;\r\n        }\r\n\r\n        // simple (single) selectors\r\n        var expressions = parsed.expressions,\r\n            simpleExpCounter = 0,\r\n            i,\r\n            currentExpression;\r\n        for (i = 0;\r\n            (currentExpression = expressions[i]); i++) {\r\n            if (currentExpression.length == 1) {\r\n                var exp = currentExpression[0];\r\n                if (this.check(node,exp)) {\r\n                    return true;\r\n                }\r\n                simpleExpCounter++;\r\n            }\r\n        }\r\n\r\n        if (simpleExpCounter == parsed.length) {\r\n            return false;\r\n        }\r\n\r\n        var nodes = this.query(document, parsed),\r\n            item;\r\n        for (i = 0; item = nodes[i++];) {\r\n            if (item === node) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n\r\n\r\n    local.filterSingle = function(nodes, exp){\r\n        var matchs = filter.call(nodes, function(node, idx) {\r\n            return local.check(node, exp, idx, nodes,false);\r\n        });    \r\n\r\n        matchs = filter.call(matchs, function(node, idx) {\r\n            return local.check(node, exp, idx, matchs,true);\r\n        }); \r\n        return matchs;\r\n    };\r\n\r\n    local.filter = function(nodes, selector) {\r\n        var parsed;\r\n\r\n        if (langx.isString(selector)) {\r\n            parsed = local.Slick.parse(selector);\r\n        } else {\r\n            return local.filterSingle(nodes,selector);           \r\n        }\r\n\r\n        // simple (single) selectors\r\n        var expressions = parsed.expressions,\r\n            i,\r\n            currentExpression,\r\n            ret = [];\r\n        for (i = 0;\r\n            (currentExpression = expressions[i]); i++) {\r\n            if (currentExpression.length == 1) {\r\n                var exp = currentExpression[0];\r\n\r\n                var matchs = local.filterSingle(nodes,exp);  \r\n\r\n                ret = langx.uniq(ret.concat(matchs));\r\n            } else {\r\n                throw new Error(\"not supported selector:\" + selector);\r\n            }\r\n        }\r\n\r\n        return ret;\r\n \r\n    };    \r\n\r\n    local.combine = function(elm, bit) {\r\n        var op = bit.combinator,\r\n            cond = bit,\r\n            node1,\r\n            nodes = [];\r\n\r\n        switch (op) {\r\n            case '>': // direct children\r\n                nodes = children(elm, cond);\r\n                break;\r\n            case '+': // next sibling\r\n                node1 = nextSibling(elm, cond, true);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '^': // first child\r\n                node1 = firstChild(elm, cond, true);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '~': // next siblings\r\n                nodes = nextSiblings(elm, cond);\r\n                break;\r\n            case '++': // next sibling and previous sibling\r\n                var prev = previousSibling(elm, cond, true),\r\n                    next = nextSibling(elm, cond, true);\r\n                if (prev) {\r\n                    nodes.push(prev);\r\n                }\r\n                if (next) {\r\n                    nodes.push(next);\r\n                }\r\n                break;\r\n            case '~~': // next siblings and previous siblings\r\n                nodes = siblings(elm, cond);\r\n                break;\r\n            case '!': // all parent nodes up to document\r\n                nodes = ancestors(elm, cond);\r\n                break;\r\n            case '!>': // direct parent (one level)\r\n                node1 = parent(elm, cond);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '!+': // previous sibling\r\n                nodes = previousSibling(elm, cond, true);\r\n                break;\r\n            case '!^': // last child\r\n                node1 = lastChild(elm, cond, true);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '!~': // previous siblings\r\n                nodes = previousSiblings(elm, cond);\r\n                break;\r\n            default:\r\n                var divided = this.divide(bit);\r\n                nodes = slice.call(elm.querySelectorAll(divided.nativeSelector));\r\n                if (divided.customPseudos) {\r\n                    for (var i = divided.customPseudos.length - 1; i >= 0; i--) {\r\n                        nodes = filter.call(nodes, function(item, idx) {\r\n                            return local.check(item, {\r\n                                pseudos: [divided.customPseudos[i]]\r\n                            }, idx, nodes,false)\r\n                        });\r\n\r\n                        nodes = filter.call(nodes, function(item, idx) {\r\n                            return local.check(item, {\r\n                                pseudos: [divided.customPseudos[i]]\r\n                            }, idx, nodes,true)\r\n                        });                        \r\n                    }\r\n                }\r\n                break;\r\n\r\n        }\r\n        return nodes;\r\n    }\r\n\r\n    local.query = function(node, selector, single) {\r\n\r\n\r\n        var parsed = this.Slick.parse(selector);\r\n\r\n        var\r\n            founds = [],\r\n            currentExpression, currentBit,\r\n            expressions = parsed.expressions;\r\n\r\n        for (var i = 0;\r\n            (currentExpression = expressions[i]); i++) {\r\n            var currentItems = [node],\r\n                found;\r\n            for (var j = 0;\r\n                (currentBit = currentExpression[j]); j++) {\r\n                found = langx.map(currentItems, function(item, i) {\r\n                    return local.combine(item, currentBit)\r\n                });\r\n                if (found) {\r\n                    currentItems = found;\r\n                }\r\n            }\r\n            if (found) {\r\n                founds = founds.concat(found);\r\n            }\r\n        }\r\n\r\n        return founds;\r\n    }\r\n\r\n\r\n    function ancestor(node, selector, root) {\r\n        var rootIsSelector = root && langx.isString(root);\r\n        while (node = node.parentNode) {\r\n            if (matches(node, selector)) {\r\n                return node;\r\n            }\r\n            if (root) {\r\n                if (rootIsSelector) {\r\n                    if (matches(node,root)) {\r\n                        break;\r\n                    }\r\n                } else if (node == root) {\r\n                    break;\r\n                }\r\n            } \r\n        }\r\n        return null;\r\n    }\r\n\r\n    function ancestors(node, selector,root) {\r\n        var ret = [],\r\n            rootIsSelector = root && langx.isString(root);\r\n        while ((node = node.parentNode) && (node.nodeType !== 9)) {\r\n            ret.push(node);\r\n            if (root) {\r\n                if (rootIsSelector) {\r\n                    if (matches(node,root)) {\r\n                        break;\r\n                    }\r\n                } else if (node == root) {\r\n                    break;\r\n                }\r\n            } \r\n\r\n        }\r\n\r\n        if (selector) {\r\n            ret = local.filter(ret,selector);\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    function byId(id, doc) {\r\n        doc = doc || noder.doc();\r\n        return doc.getElementById(id);\r\n    }\r\n\r\n    function children(node, selector) {\r\n        var childNodes = node.childNodes,\r\n            ret = [];\r\n        for (var i = 0; i < childNodes.length; i++) {\r\n            var node = childNodes[i];\r\n            if (node.nodeType == 1) {\r\n                ret.push(node);\r\n            }\r\n        }\r\n        if (selector) {\r\n            ret = local.filter(ret,selector);\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    function closest(node, selector) {\r\n        while (node && !(matches(node, selector))) {\r\n            node = node.parentNode;\r\n        }\r\n\r\n        return node;\r\n    }\r\n\r\n    function descendants(elm, selector) {\r\n        // Selector\r\n        try {\r\n            return slice.call(elm.querySelectorAll(selector));\r\n        } catch (matchError) {\r\n            //console.log(matchError);\r\n        }\r\n        return local.query(elm, selector);\r\n    }\r\n\r\n    function descendant(elm, selector) {\r\n        // Selector\r\n        try {\r\n            return elm.querySelector(selector);\r\n        } catch (matchError) {\r\n            //console.log(matchError);\r\n        }\r\n        var nodes = local.query(elm, selector);\r\n        if (nodes.length > 0) {\r\n            return nodes[0];\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    function find(elm,selector) {\r\n        if (!selector) {\r\n            selector = elm;\r\n            elm = document.body;\r\n        }\r\n        if (matches(elm,selector)) {\r\n            return elm;\r\n        } else {\r\n            return descendant(elm, selector);\r\n        }\r\n    }\r\n\r\n    function findAll(elm,selector) {\r\n        if (!selector) {\r\n            selector = elm;\r\n            elm = document.body;\r\n        }\r\n        return descendants(elm, selector);\r\n    }\r\n\r\n    function firstChild(elm, selector, first) {\r\n        var childNodes = elm.childNodes,\r\n            node = childNodes[0];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (first) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    function lastChild(elm, selector, last) {\r\n        var childNodes = elm.childNodes,\r\n            node = childNodes[childNodes.length - 1];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (last) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.previousSibling;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    function matches(elm, selector) {\r\n        if (!selector || !elm || elm.nodeType !== 1) {\r\n            return false\r\n        }\r\n\r\n        if (langx.isString(selector)) {\r\n            try {\r\n                return nativeMatchesSelector.call(elm, selector.replace(/\\[([^=]+)=\\s*([^'\"\\]]+?)\\s*\\]/g, '[$1=\"$2\"]'));\r\n            } catch (matchError) {\r\n                //console.log(matchError);\r\n            }\r\n            return local.match(elm, selector);\r\n        } else if (langx.isArrayLike(selector)) {\r\n            return langx.inArray(elm,selector) > -1;\r\n        } else if (langx.isPlainObject(selector)){    \r\n            return local.check(elm, selector);\r\n        } else {\r\n            return elm === selector;\r\n        }\r\n\r\n    }\r\n\r\n    function nextSibling(elm, selector, adjacent) {\r\n        var node = elm.nextSibling;\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (adjacent) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    function nextSiblings(elm, selector) {\r\n        var node = elm.nextSibling,\r\n            ret = [];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    ret.push(node);\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n        return ret;\r\n    }\r\n\r\n\r\n    function parent(elm, selector) {\r\n        var node = elm.parentNode;\r\n        if (node && (!selector || matches(node, selector))) {\r\n            return node;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    function previousSibling(elm, selector, adjacent) {\r\n        var node = elm.previousSibling;\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (adjacent) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.previousSibling;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    function previousSiblings(elm, selector) {\r\n        var node = elm.previousSibling,\r\n            ret = [];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    ret.push(node);\r\n                }\r\n            }\r\n            node = node.previousSibling;\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    function siblings(elm, selector) {\r\n        var node = elm.parentNode.firstChild,\r\n            ret = [];\r\n        while (node) {\r\n            if (node.nodeType == 1 && node !== elm) {\r\n                if (!selector || matches(node, selector)) {\r\n                    ret.push(node);\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    var finder = function() {\r\n        return finder;\r\n    };\r\n\r\n    langx.mixin(finder, {\r\n\r\n        ancestor: ancestor,\r\n\r\n        ancestors: ancestors,\r\n\r\n        byId: byId,\r\n\r\n        children: children,\r\n\r\n        closest: closest,\r\n\r\n        descendant: descendant,\r\n\r\n        descendants: descendants,\r\n\r\n        find: find,\r\n\r\n        findAll: findAll,\r\n\r\n        firstChild: firstChild,\r\n\r\n        lastChild: lastChild,\r\n\r\n        matches: matches,\r\n\r\n        nextSibling: nextSibling,\r\n\r\n        nextSiblings: nextSiblings,\r\n\r\n        parent: parent,\r\n\r\n        previousSibling: previousSibling,\r\n\r\n        previousSiblings: previousSiblings,\r\n\r\n        pseudos: local.pseudos,\r\n\r\n        siblings: siblings\r\n    });\r\n\r\n    return skylark.finder = finder;\r\n});\r\n\ndefine('skylark-utils/datax',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./finder\"\r\n], function(skylark, langx, finder) {\r\n    var map = Array.prototype.map,\r\n        filter = Array.prototype.filter,\r\n        camelCase = langx.camelCase,\r\n        deserializeValue = langx.deserializeValue,\r\n\r\n        capitalRE = /([A-Z])/g,\r\n        propMap = {\r\n            'tabindex': 'tabIndex',\r\n            'readonly': 'readOnly',\r\n            'for': 'htmlFor',\r\n            'class': 'className',\r\n            'maxlength': 'maxLength',\r\n            'cellspacing': 'cellSpacing',\r\n            'cellpadding': 'cellPadding',\r\n            'rowspan': 'rowSpan',\r\n            'colspan': 'colSpan',\r\n            'usemap': 'useMap',\r\n            'frameborder': 'frameBorder',\r\n            'contenteditable': 'contentEditable'\r\n        };\r\n\r\n    function setAttribute(elm, name, value) {\r\n        if (value == null) {\r\n            elm.removeAttribute(name);\r\n        } else {\r\n            elm.setAttribute(name, value);\r\n        }\r\n    }\r\n\r\n    function aria(elm,name,value) {\r\n        return this.attr(elm, \"aria-\"+name, value);\r\n    }\r\n\r\n    function attr(elm, name, value) {\r\n        if (value === undefined) {\r\n            if (typeof name === \"object\") {\r\n                for (var attrName in name) {\r\n                    attr(elm, attrName, name[attrName]);\r\n                }\r\n                return this;\r\n            } else {\r\n                if (elm.hasAttribute && elm.hasAttribute(name)) {\r\n                    return elm.getAttribute(name);\r\n                }\r\n            }\r\n        } else {\r\n            elm.setAttribute(name, value);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    // Read all \"data-*\" attributes from a node\r\n    function _attributeData(elm) {\r\n        var store = {}\r\n        langx.each(elm.attributes || [], function(i, attr) {\r\n            if (attr.name.indexOf('data-') == 0) {\r\n                store[camelCase(attr.name.replace('data-', ''))] = deserializeValue(attr.value);\r\n            }\r\n        })\r\n        return store;\r\n    }\r\n\r\n    function _store(elm, confirm) {\r\n        var store = elm[\"_$_store\"];\r\n        if (!store && confirm) {\r\n            store = elm[\"_$_store\"] = _attributeData(elm);\r\n        }\r\n        return store;\r\n    }\r\n\r\n    function _getData(elm, name) {\r\n        if (name === undefined) {\r\n            return _store(elm, true);\r\n        } else {\r\n            var store = _store(elm);\r\n            if (store) {\r\n                if (name in store) {\r\n                    return store[name];\r\n                }\r\n                var camelName = camelCase(name);\r\n                if (camelName in store) {\r\n                    return store[camelName];\r\n                }\r\n            }\r\n            var attrName = 'data-' + name.replace(capitalRE, \"-$1\").toLowerCase()\r\n            return attr(elm, attrName);\r\n        }\r\n\r\n    }\r\n\r\n    function _setData(elm, name, value) {\r\n        var store = _store(elm, true);\r\n        store[camelCase(name)] = value;\r\n    }\r\n\r\n\r\n    function data(elm, name, value) {\r\n\r\n        if (value === undefined) {\r\n            if (typeof name === \"object\") {\r\n                for (var dataAttrName in name) {\r\n                    _setData(elm, dataAttrName, name[dataAttrName]);\r\n                }\r\n                return this;\r\n            } else {\r\n                return _getData(elm, name);\r\n            }\r\n        } else {\r\n            _setData(elm, name, value);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function cleanData(elm) {\r\n        if (elm[\"_$_store\"]) {\r\n            delete elm[\"_$_store\"];\r\n        }\r\n    }\r\n\r\n    function removeData(elm, names) {\r\n        if (langx.isString(names)) {\r\n            names = names.split(/\\s+/);\r\n        }\r\n        var store = _store(elm, true);\r\n        names.forEach(function(name) {\r\n            delete store[name];\r\n        });\r\n        return this;\r\n    }\r\n\r\n    function pluck(nodes, property) {\r\n        return map.call(nodes, function(elm) {\r\n            return elm[property];\r\n        });\r\n    }\r\n\r\n    function prop(elm, name, value) {\r\n        name = propMap[name] || name;\r\n        if (value === undefined) {\r\n            return elm[name];\r\n        } else {\r\n            elm[name] = value;\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function removeAttr(elm, name) {\r\n        name.split(' ').forEach(function(attr) {\r\n            setAttribute(elm, attr);\r\n        });\r\n        return this;\r\n    }\r\n\r\n    function removeProp(elm, name) {\r\n        name.split(' ').forEach(function(prop) {\r\n            delete elm[prop];\r\n        });\r\n        return this;\r\n    }\r\n\r\n    function text(elm, txt) {\r\n        if (txt === undefined) {\r\n            return elm.textContent;\r\n        } else {\r\n            elm.textContent = txt == null ? '' : '' + txt;\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function val(elm, value) {\r\n        if (value === undefined) {\r\n            if (elm.multiple) {\r\n                // select multiple values\r\n                var selectedOptions = filter.call(finder.find(elm, \"option\"), (function(option) {\r\n                    return option.selected;\r\n                }));\r\n                return pluck(selectedOptions, \"value\");\r\n            } else {\r\n                return elm.value;\r\n            }\r\n        } else {\r\n            elm.value = value;\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function datax() {\r\n        return datax;\r\n    }\r\n\r\n    langx.mixin(datax, {\r\n        aria: aria,\r\n        \r\n        attr: attr,\r\n\r\n        cleanData : cleanData,\r\n        \r\n        data: data,\r\n\r\n        pluck: pluck,\r\n\r\n        prop: prop,\r\n\r\n        removeAttr: removeAttr,\r\n\r\n        removeData: removeData,\r\n\r\n        removeProp: removeProp,\r\n\r\n        text: text,\r\n\r\n        val: val\r\n    });\r\n\r\n    return skylark.datax = datax;\r\n});\r\n\ndefine('skylark-utils/geom',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./noder\",\r\n    \"./styler\"\r\n], function(skylark, langx, noder,styler) {\r\n    var rootNodeRE = /^(?:body|html)$/i,\r\n        px = langx.toPixel,\r\n        offsetParent = noder.offsetParent,\r\n        cachedScrollbarWidth;\r\n\r\n\r\n    function scrollbarWidth() {\r\n        if ( cachedScrollbarWidth !== undefined ) {\r\n            return cachedScrollbarWidth;\r\n        }\r\n        var w1, w2,\r\n            div = noder.createFragment( \"<div style=\" +\r\n                \"'display:block;position:absolute;width:200px;height:200px;overflow:hidden;'>\" +\r\n                \"<div style='height:300px;width:auto;'></div></div>\" )[0],\r\n            innerDiv = div.childNodes[0];\r\n\r\n        noder.append(document.body,div);\r\n\r\n        w1 = innerDiv.offsetWidth;\r\n        \r\n        styler.css( div, \"overflow\", \"scroll\" );\r\n\r\n        w2 = innerDiv.offsetWidth;\r\n\r\n        if ( w1 === w2 ) {\r\n            w2 = div[0].clientWidth;\r\n        }\r\n\r\n        noder.remove(div);\r\n\r\n        return ( cachedScrollbarWidth = w1 - w2 );\r\n    }\r\n\r\n    function borderExtents(elm) {\r\n        var s = getComputedStyle(elm);\r\n        return {\r\n            left: px(s.borderLeftWidth , elm),\r\n            top: px(s.borderTopWidth, elm),\r\n            right: px(s.borderRightWidth, elm),\r\n            bottom: px(s.borderBottomWidth, elm)\r\n        }\r\n    }\r\n\r\n    //viewport coordinate\r\n    function boundingPosition(elm, coords) {\r\n        if (coords === undefined) {\r\n            return rootNodeRE.test(elm.nodeName) ? { top: 0, left: 0 } : elm.getBoundingClientRect();\r\n        } else {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                parentOffset = boundingPosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            relativePosition(elm, {\r\n                top: coords.top - parentOffset.top - mex.top - pbex.top,\r\n                left: coords.left - parentOffset.left - mex.left - pbex.left\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function boundingRect(elm, coords) {\r\n        if (coords === undefined) {\r\n            return elm.getBoundingClientRect()\r\n        } else {\r\n            boundingPosition(elm, coords);\r\n            size(elm, coords);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function clientHeight(elm, value) {\r\n        if (value == undefined) {\r\n            return clientSize(elm).height;\r\n        } else {\r\n            return clientSize(elm, {\r\n                height: value\r\n            });\r\n        }\r\n    }\r\n\r\n    function clientSize(elm, dimension) {\r\n        if (dimension == undefined) {\r\n            return {\r\n                width: elm.clientWidth,\r\n                height: elm.clientHeight\r\n            }\r\n        } else {\r\n            var isBorderBox = (styler.css(elm, \"box-sizing\") === \"border-box\"),\r\n                props = {\r\n                    width: dimension.width,\r\n                    height: dimension.height\r\n                };\r\n            if (!isBorderBox) {\r\n                var pex = paddingExtents(elm);\r\n\r\n                if (props.width !== undefined) {\r\n                    props.width = props.width - pex.left - pex.right;\r\n                }\r\n\r\n                if (props.height !== undefined) {\r\n                    props.height = props.height - pex.top - pex.bottom;\r\n                }\r\n            } else {\r\n                var bex = borderExtents(elm);\r\n\r\n                if (props.width !== undefined) {\r\n                    props.width = props.width + bex.left + bex.right;\r\n                }\r\n\r\n                if (props.height !== undefined) {\r\n                    props.height = props.height + bex.top + bex.bottom;\r\n                }\r\n\r\n            }\r\n            styler.css(elm, props);\r\n            return this;\r\n        }\r\n        return {\r\n            width: elm.clientWidth,\r\n            height: elm.clientHeight\r\n        };\r\n    }\r\n\r\n    function clientWidth(elm, value) {\r\n        if (value == undefined) {\r\n            return clientSize(elm).width;\r\n        } else {\r\n            clientSize(elm, {\r\n                width: value\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function contentRect(elm) {\r\n        var cs = clientSize(elm),\r\n            pex = paddingExtents(elm);\r\n\r\n\r\n        //// On Opera, offsetLeft includes the parent's border\r\n        //if(has(\"opera\")){\r\n        //    pe.l += be.l;\r\n        //    pe.t += be.t;\r\n        //}\r\n        return {\r\n            left: pex.left,\r\n            top: pex.top,\r\n            width: cs.width - pex.left - pex.right,\r\n            height: cs.height - pex.top - pex.bottom\r\n        };\r\n    }\r\n\r\n    function getDocumentSize(doc) {\r\n        var documentElement = doc.documentElement,\r\n            body = doc.body,\r\n            max = Math.max,\r\n            scrollWidth = max(documentElement.scrollWidth, body.scrollWidth),\r\n            clientWidth = max(documentElement.clientWidth, body.clientWidth),\r\n            offsetWidth = max(documentElement.offsetWidth, body.offsetWidth),\r\n            scrollHeight = max(documentElement.scrollHeight, body.scrollHeight),\r\n            clientHeight = max(documentElement.clientHeight, body.clientHeight),\r\n            offsetHeight = max(documentElement.offsetHeight, body.offsetHeight);\r\n\r\n        return {\r\n            width: scrollWidth < offsetWidth ? clientWidth : scrollWidth,\r\n            height: scrollHeight < offsetHeight ? clientHeight : scrollHeight\r\n        };\r\n    }\r\n\r\n    function height(elm, value) {\r\n        if (value == undefined) {\r\n            return size(elm).height;\r\n        } else {\r\n            size(elm, {\r\n                height: value\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function marginExtents(elm) {\r\n        var s = getComputedStyle(elm);\r\n        return {\r\n            left: px(s.marginLeft),\r\n            top: px(s.marginTop),\r\n            right: px(s.marginRight),\r\n            bottom: px(s.marginBottom),\r\n        }\r\n    }\r\n\r\n    function marginRect(elm) {\r\n        var obj = this.relativeRect(elm),\r\n            me = this.marginExtents(elm);\r\n\r\n        return {\r\n                left: obj.left,\r\n                top: obj.top,\r\n                width: obj.width + me.left + me.right,\r\n                height: obj.height + me.top + me.bottom\r\n            };\r\n    }\r\n\r\n\r\n    function marginSize(elm) {\r\n        var obj = this.size(elm),\r\n            me = this.marginExtents(elm);\r\n\r\n        return {\r\n                width: obj.width + me.left + me.right,\r\n                height: obj.height + me.top + me.bottom\r\n            };\r\n    }\r\n\r\n    function paddingExtents(elm) {\r\n        var s = getComputedStyle(elm);\r\n        return {\r\n            left: px(s.paddingLeft),\r\n            top: px(s.paddingTop),\r\n            right: px(s.paddingRight),\r\n            bottom: px(s.paddingBottom),\r\n        }\r\n    }\r\n\r\n    //coordinate to the document\r\n    function pagePosition(elm, coords) {\r\n        if (coords === undefined) {\r\n            var obj = elm.getBoundingClientRect()\r\n            return {\r\n                left: obj.left + window.pageXOffset,\r\n                top: obj.top + window.pageYOffset\r\n            }\r\n        } else {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                parentOffset = pagePosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            relativePosition(elm, {\r\n                top: coords.top - parentOffset.top - mex.top - pbex.top,\r\n                left: coords.left - parentOffset.left - mex.left - pbex.left\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function pageRect(elm, coords) {\r\n        if (coords === undefined) {\r\n            var obj = elm.getBoundingClientRect()\r\n            return {\r\n                left: obj.left + window.pageXOffset,\r\n                top: obj.top + window.pageYOffset,\r\n                width: Math.round(obj.width),\r\n                height: Math.round(obj.height)\r\n            }\r\n        } else {\r\n            pagePosition(elm, coords);\r\n            size(elm, coords);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    // coordinate relative to it's parent\r\n    function relativePosition(elm, coords) {\r\n        if (coords == undefined) {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                offset = boundingPosition(elm),\r\n                parentOffset = boundingPosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            // Subtract parent offsets and element margins\r\n            return {\r\n                top: offset.top - parentOffset.top - pbex.top,// - mex.top,\r\n                left: offset.left - parentOffset.left - pbex.left,// - mex.left\r\n            }\r\n        } else {\r\n            var props = {\r\n                top: coords.top,\r\n                left: coords.left\r\n            }\r\n\r\n            if (styler.css(elm, \"position\") == \"static\") {\r\n                props['position'] = \"relative\";\r\n            }\r\n            styler.css(elm, props);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function relativeRect(elm, coords) {\r\n        if (coords === undefined) {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                offset = boundingRect(elm),\r\n                parentOffset = boundingPosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            // Subtract parent offsets and element margins\r\n            return {\r\n                top: offset.top - parentOffset.top - pbex.top, // - mex.top,\r\n                left: offset.left - parentOffset.left - pbex.left, // - mex.left,\r\n                width: offset.width,\r\n                height: offset.height\r\n            }\r\n        } else {\r\n            relativePosition(elm, coords);\r\n            size(elm, coords);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function scrollIntoView(elm, align) {\r\n        function getOffset(elm, rootElm) {\r\n            var x, y, parent = elm;\r\n\r\n            x = y = 0;\r\n            while (parent && parent != rootElm && parent.nodeType) {\r\n                x += parent.offsetLeft || 0;\r\n                y += parent.offsetTop || 0;\r\n                parent = parent.offsetParent;\r\n            }\r\n\r\n            return { x: x, y: y };\r\n        }\r\n\r\n        var parentElm = elm.parentNode;\r\n        var x, y, width, height, parentWidth, parentHeight;\r\n        var pos = getOffset(elm, parentElm);\r\n\r\n        x = pos.x;\r\n        y = pos.y;\r\n        width = elm.offsetWidth;\r\n        height = elm.offsetHeight;\r\n        parentWidth = parentElm.clientWidth;\r\n        parentHeight = parentElm.clientHeight;\r\n\r\n        if (align == \"end\") {\r\n            x -= parentWidth - width;\r\n            y -= parentHeight - height;\r\n        } else if (align == \"center\") {\r\n            x -= (parentWidth / 2) - (width / 2);\r\n            y -= (parentHeight / 2) - (height / 2);\r\n        }\r\n\r\n        parentElm.scrollLeft = x;\r\n        parentElm.scrollTop = y;\r\n\r\n        return this;\r\n    }\r\n\r\n    function scrollLeft(elm, value) {\r\n        var hasScrollLeft = \"scrollLeft\" in elm;\r\n        if (value === undefined) {\r\n            return hasScrollLeft ? elm.scrollLeft : elm.pageXOffset\r\n        } else {\r\n            if (hasScrollLeft) {\r\n                elm.scrollLeft = value;\r\n            } else {\r\n                elm.scrollTo(value, elm.scrollY);\r\n            }\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function scrollTop(elm, value) {\r\n        var hasScrollTop = \"scrollTop\" in elm;\r\n\r\n        if (value === undefined) {\r\n            return hasScrollTop ? elm.scrollTop : elm.pageYOffset\r\n        } else {\r\n            if (hasScrollTop) {\r\n                elm.scrollTop = value;\r\n            } else {\r\n                elm.scrollTo(elm.scrollX, value);\r\n            }\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function size(elm, dimension) {\r\n        if (dimension == undefined) {\r\n            if (langx.isWindow(elm)) {\r\n                return {\r\n                    width: elm.innerWidth,\r\n                    height: elm.innerHeight\r\n                }\r\n\r\n            } else if (langx.isDocument(elm)) {\r\n                return getDocumentSize(document);\r\n            } else {\r\n                return {\r\n                    width: elm.offsetWidth,\r\n                    height: elm.offsetHeight\r\n                }\r\n            }\r\n        } else {\r\n            var isBorderBox = (styler.css(elm, \"box-sizing\") === \"border-box\"),\r\n                props = {\r\n                    width: dimension.width,\r\n                    height: dimension.height\r\n                };\r\n            if (!isBorderBox) {\r\n                var pex = paddingExtents(elm),\r\n                    bex = borderExtents(elm);\r\n\r\n                if (props.width !== undefined && props.width !== \"\" && props.width !== null) {\r\n                    props.width = props.width - pex.left - pex.right - bex.left - bex.right;\r\n                }\r\n\r\n                if (props.height !== undefined && props.height !== \"\" && props.height !== null) {\r\n                    props.height = props.height - pex.top - pex.bottom - bex.top - bex.bottom;\r\n                }\r\n            }\r\n            styler.css(elm, props);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function width(elm, value) {\r\n        if (value == undefined) {\r\n            return size(elm).width;\r\n        } else {\r\n            size(elm, {\r\n                width: value\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function geom() {\r\n        return geom;\r\n    }\r\n\r\n    langx.mixin(geom, {\r\n        borderExtents: borderExtents,\r\n        //viewport coordinate\r\n        boundingPosition: boundingPosition,\r\n\r\n        boundingRect: boundingRect,\r\n\r\n        clientHeight: clientHeight,\r\n\r\n        clientSize: clientSize,\r\n\r\n        clientWidth: clientWidth,\r\n\r\n        contentRect: contentRect,\r\n\r\n        getDocumentSize: getDocumentSize,\r\n\r\n        height: height,\r\n\r\n        marginExtents: marginExtents,\r\n\r\n        marginRect : marginRect,\r\n\r\n        marginSize : marginSize,\r\n\r\n        offsetParent: offsetParent,\r\n\r\n        paddingExtents: paddingExtents,\r\n\r\n        //coordinate to the document\r\n        pagePosition: pagePosition,\r\n\r\n        pageRect: pageRect,\r\n\r\n        // coordinate relative to it's parent\r\n        relativePosition: relativePosition,\r\n\r\n        relativeRect: relativeRect,\r\n\r\n        scrollbarWidth : scrollbarWidth,\r\n\r\n        scrollIntoView: scrollIntoView,\r\n\r\n        scrollLeft: scrollLeft,\r\n\r\n        scrollTop: scrollTop,\r\n\r\n        size: size,\r\n\r\n        width: width\r\n    });\r\n\r\n    return skylark.geom = geom;\r\n});\r\n\ndefine('skylark-utils/eventer',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./browser\",\r\n    \"./finder\",\r\n    \"./noder\",\r\n    \"./datax\"\r\n], function(skylark, langx, browser, finder, noder, datax) {\r\n    var mixin = langx.mixin,\r\n        each = langx.each,\r\n        slice = Array.prototype.slice,\r\n        uid = langx.uid,\r\n        ignoreProperties = /^([A-Z]|returnValue$|layer[XY]$)/,\r\n        eventMethods = {\r\n            preventDefault: \"isDefaultPrevented\",\r\n            stopImmediatePropagation: \"isImmediatePropagationStopped\",\r\n            stopPropagation: \"isPropagationStopped\"\r\n        },\r\n        readyRE = /complete|loaded|interactive/;\r\n\r\n    function compatible(event, source) {\r\n        if (source || !event.isDefaultPrevented) {\r\n            if (!source) {\r\n                source = event;\r\n            }\r\n\r\n            langx.each(eventMethods, function(name, predicate) {\r\n                var sourceMethod = source[name];\r\n                event[name] = function() {\r\n                    this[predicate] = langx.returnTrue;\r\n                    return sourceMethod && sourceMethod.apply(source, arguments);\r\n                }\r\n                event[predicate] = langx.returnFalse;\r\n            });\r\n        }\r\n        return event;\r\n    }\r\n\r\n    function parse(event) {\r\n        var segs = (\"\" + event).split(\".\");\r\n        return {\r\n            type: segs[0],\r\n            ns: segs.slice(1).sort().join(\" \")\r\n        };\r\n    }\r\n\r\n    //create a custom dom event\r\n    var createEvent = (function() {\r\n        var EventCtors = [\r\n                window[\"CustomEvent\"], // 0 default\r\n                window[\"CompositionEvent\"], // 1\r\n                window[\"DragEvent\"], // 2\r\n                window[\"Event\"], // 3\r\n                window[\"FocusEvent\"], // 4\r\n                window[\"KeyboardEvent\"], // 5\r\n                window[\"MessageEvent\"], // 6\r\n                window[\"MouseEvent\"], // 7\r\n                window[\"MouseScrollEvent\"], // 8\r\n                window[\"MouseWheelEvent\"], // 9\r\n                window[\"MutationEvent\"], // 10\r\n                window[\"ProgressEvent\"], // 11\r\n                window[\"TextEvent\"], // 12\r\n                window[\"TouchEvent\"], // 13\r\n                window[\"UIEvent\"], // 14\r\n                window[\"WheelEvent\"], // 15\r\n                window[\"ClipboardEvent\"] // 16\r\n            ],\r\n            NativeEvents = {\r\n                \"compositionstart\": 1, // CompositionEvent\r\n                \"compositionend\": 1, // CompositionEvent\r\n                \"compositionupdate\": 1, // CompositionEvent\r\n\r\n                \"beforecopy\": 16, // ClipboardEvent\r\n                \"beforecut\": 16, // ClipboardEvent\r\n                \"beforepaste\": 16, // ClipboardEvent\r\n                \"copy\": 16, // ClipboardEvent\r\n                \"cut\": 16, // ClipboardEvent\r\n                \"paste\": 16, // ClipboardEvent\r\n\r\n                \"drag\": 2, // DragEvent\r\n                \"dragend\": 2, // DragEvent\r\n                \"dragenter\": 2, // DragEvent\r\n                \"dragexit\": 2, // DragEvent\r\n                \"dragleave\": 2, // DragEvent\r\n                \"dragover\": 2, // DragEvent\r\n                \"dragstart\": 2, // DragEvent\r\n                \"drop\": 2, // DragEvent\r\n\r\n                \"abort\": 3, // Event\r\n                \"change\": 3, // Event\r\n                \"error\": 3, // Event\r\n                \"selectionchange\": 3, // Event\r\n                \"submit\": 3, // Event\r\n                \"reset\": 3, // Event\r\n\r\n                \"focus\": 4, // FocusEvent\r\n                \"blur\": 4, // FocusEvent\r\n                \"focusin\": 4, // FocusEvent\r\n                \"focusout\": 4, // FocusEvent\r\n\r\n                \"keydown\": 5, // KeyboardEvent\r\n                \"keypress\": 5, // KeyboardEvent\r\n                \"keyup\": 5, // KeyboardEvent\r\n\r\n                \"message\": 6, // MessageEvent\r\n\r\n                \"click\": 7, // MouseEvent\r\n                \"contextmenu\": 7, // MouseEvent\r\n                \"dblclick\": 7, // MouseEvent\r\n                \"mousedown\": 7, // MouseEvent\r\n                \"mouseup\": 7, // MouseEvent\r\n                \"mousemove\": 7, // MouseEvent\r\n                \"mouseover\": 7, // MouseEvent\r\n                \"mouseout\": 7, // MouseEvent\r\n                \"mouseenter\": 7, // MouseEvent\r\n                \"mouseleave\": 7, // MouseEvent\r\n\r\n\r\n                \"textInput\": 12, // TextEvent\r\n\r\n                \"touchstart\": 13, // TouchEvent\r\n                \"touchmove\": 13, // TouchEvent\r\n                \"touchend\": 13, // TouchEvent\r\n\r\n                \"load\": 14, // UIEvent\r\n                \"resize\": 14, // UIEvent\r\n                \"select\": 14, // UIEvent\r\n                \"scroll\": 14, // UIEvent\r\n                \"unload\": 14, // UIEvent,\r\n\r\n                \"wheel\": 15 // WheelEvent\r\n            }\r\n        ;\r\n\r\n        function getEventCtor(type) {\r\n            var idx = NativeEvents[type];\r\n            if (!idx) {\r\n                idx = 0;\r\n            }\r\n            return EventCtors[idx];\r\n        }\r\n\r\n        return function(type, props) {\r\n            //create a custom dom event\r\n\r\n            if (langx.isString(type)) {\r\n                props = props || {};\r\n            } else {\r\n                props = type || {};\r\n                type = props.type || \"\";\r\n            }\r\n            var parsed = parse(type);\r\n            type = parsed.type;\r\n\r\n            props = langx.mixin({\r\n                bubbles: true,\r\n                cancelable: true\r\n            }, props);\r\n\r\n            if (parsed.ns) {\r\n                props.namespace = parsed.ns;\r\n            }\r\n\r\n            var ctor = getEventCtor(type),\r\n                e = new ctor(type, props);\r\n\r\n            langx.safeMixin(e, props);\r\n\r\n            return compatible(e);\r\n        };\r\n    })();\r\n\r\n    function createProxy(src,props) {\r\n        var key,\r\n            proxy = {\r\n                originalEvent: src\r\n            };\r\n        for (key in src) {\r\n            if (key !== \"keyIdentifier\" && !ignoreProperties.test(key) && src[key] !== undefined) {\r\n                proxy[key] = src[key];\r\n            }\r\n        }\r\n        if (props) {\r\n            langx.mixin(proxy,props);\r\n        }\r\n        return compatible(proxy, src);\r\n    }\r\n\r\n    var\r\n        specialEvents = {},\r\n        focusinSupported = \"onfocusin\" in window,\r\n        focus = { focus: \"focusin\", blur: \"focusout\" },\r\n        hover = { mouseenter: \"mouseover\", mouseleave: \"mouseout\" },\r\n        realEvent = function(type) {\r\n            return hover[type] || (focusinSupported && focus[type]) || type;\r\n        },\r\n        handlers = {},\r\n        EventBindings = langx.klass({\r\n            init: function(target, event) {\r\n                this._target = target;\r\n                this._event = event;\r\n                this._bindings = [];\r\n            },\r\n\r\n            add: function(fn, options) {\r\n                var bindings = this._bindings,\r\n                    binding = {\r\n                        fn: fn,\r\n                        options: langx.mixin({}, options)\r\n                    };\r\n\r\n                bindings.push(binding);\r\n\r\n                var self = this;\r\n                if (!self._listener) {\r\n                    self._listener = function(domEvt) {\r\n                        var elm = this,\r\n                            e = createProxy(domEvt),\r\n                            args = domEvt._args,\r\n                            bindings = self._bindings,\r\n                            ns = e.namespace;\r\n\r\n                        if (langx.isDefined(args)) {\r\n                            args = [e].concat(args);\r\n                        } else {\r\n                            args = [e];\r\n                        }\r\n\r\n                        langx.each(bindings,function(idx,binding) {\r\n                            var match = elm;\r\n                            if (e.isImmediatePropagationStopped && e.isImmediatePropagationStopped()) {\r\n                                return false;\r\n                            }\r\n                            var fn = binding.fn,\r\n                                options = binding.options || {},\r\n                                selector = options.selector,\r\n                                one = options.one,\r\n                                data = options.data;\r\n\r\n                            if (ns && ns != options.ns && options.ns.indexOf(ns)===-1) {\r\n                                return ;\r\n                            }\r\n                            if (selector) {\r\n                                match = finder.closest(e.target, selector);\r\n                                if (match && match !== elm) {\r\n                                    langx.mixin(e, {\r\n                                        currentTarget: match,\r\n                                        liveFired: elm\r\n                                    });\r\n                                } else {\r\n                                    return ;\r\n                                }\r\n                            }\r\n\r\n                            var originalEvent = self._event;\r\n                            if (originalEvent in hover) {\r\n                                var related = e.relatedTarget;\r\n                                if (related && (related === match || noder.contains(match, related))) {\r\n                                    return;\r\n                                }\r\n                            }                           \r\n\r\n                            if (langx.isDefined(data)) {\r\n                                e.data = data;\r\n                            }\r\n\r\n                            if (one) {\r\n                                self.remove(fn, options);\r\n                            }\r\n\r\n                            var result = fn.apply(match, args);\r\n\r\n                            if (result === false) {\r\n                                e.preventDefault();\r\n                                e.stopPropagation();\r\n                            }\r\n                        });;\r\n                    };\r\n\r\n                    var event = self._event;\r\n/*\r\n                    if (event in hover) {\r\n                        var l = self._listener;\r\n                        self._listener = function(e) {\r\n                            var related = e.relatedTarget;\r\n                            if (!related || (related !== this && !noder.contains(this, related))) {\r\n                                return l.apply(this, arguments);\r\n                            }\r\n                        }\r\n                    }\r\n*/\r\n\r\n                    if (self._target.addEventListener) {\r\n                        self._target.addEventListener(realEvent(event), self._listener, false);\r\n                    } else {\r\n                        console.warn(\"invalid eventer object\", self._target);\r\n                    }\r\n                }\r\n\r\n            },\r\n            remove: function(fn, options) {\r\n                options = langx.mixin({}, options);\r\n\r\n                function matcherFor(ns) {\r\n                    return new RegExp(\"(?:^| )\" + ns.replace(\" \", \" .* ?\") + \"(?: |$)\");\r\n                }\r\n                var matcher;\r\n                if (options.ns) {\r\n                    matcher = matcherFor(options.ns);\r\n                }\r\n\r\n                this._bindings = this._bindings.filter(function(binding) {\r\n                    var removing = (!fn || fn === binding.fn) &&\r\n                        (!matcher || matcher.test(binding.options.ns)) &&\r\n                        (!options.selector || options.selector == binding.options.selector);\r\n\r\n                    return !removing;\r\n                });\r\n                if (this._bindings.length == 0) {\r\n                    if (this._target.removeEventListener) {\r\n                        this._target.removeEventListener(realEvent(this._event), this._listener, false);\r\n                    }\r\n                    this._listener = null;\r\n                }\r\n            }\r\n        }),\r\n        EventsHandler = langx.klass({\r\n            init: function(elm) {\r\n                this._target = elm;\r\n                this._handler = {};\r\n            },\r\n\r\n            // add a event listener\r\n            // selector Optional\r\n            register: function(event, callback, options) {\r\n                // Seperate the event from the namespace\r\n                var parsed = parse(event),\r\n                    event = parsed.type,\r\n                    specialEvent = specialEvents[event],\r\n                    bindingEvent = specialEvent && (specialEvent.bindType || specialEvent.bindEventName);\r\n\r\n                var events = this._handler;\r\n\r\n                // Check if there is already a handler for this event\r\n                if (events[event] === undefined) {\r\n                    events[event] = new EventBindings(this._target, bindingEvent || event);\r\n                }\r\n\r\n                // Register the new callback function\r\n                events[event].add(callback, langx.mixin({\r\n                    ns: parsed.ns\r\n                }, options)); // options:{selector:xxx}\r\n            },\r\n\r\n            // remove a event listener\r\n            unregister: function(event, fn, options) {\r\n                // Check for parameter validtiy\r\n                var events = this._handler,\r\n                    parsed = parse(event);\r\n                event = parsed.type;\r\n\r\n                if (event) {\r\n                    var listener = events[event];\r\n\r\n                    if (listener) {\r\n                        listener.remove(fn, langx.mixin({\r\n                            ns: parsed.ns\r\n                        }, options));\r\n                    }\r\n                } else {\r\n                    //remove all events\r\n                    for (event in events) {\r\n                        var listener = events[event];\r\n                        listener.remove(fn, langx.mixin({\r\n                            ns: parsed.ns\r\n                        }, options));\r\n                    }\r\n                }\r\n            }\r\n        }),\r\n\r\n        findHandler = function(elm) {\r\n            var id = uid(elm),\r\n                handler = handlers[id];\r\n            if (!handler) {\r\n                handler = handlers[id] = new EventsHandler(elm);\r\n            }\r\n            return handler;\r\n        };\r\n\r\n    function off(elm, events, selector, callback) {\r\n        var $this = this\r\n        if (langx.isPlainObject(events)) {\r\n            langx.each(events, function(type, fn) {\r\n                off(elm, type, selector, fn);\r\n            })\r\n            return $this;\r\n        }\r\n\r\n        if (!langx.isString(selector) && !langx.isFunction(callback) && callback !== false) {\r\n            callback = selector;\r\n            selector = undefined;\r\n        }\r\n\r\n        if (callback === false) {\r\n            callback = langx.returnFalse;\r\n        }\r\n\r\n        if (typeof events == \"string\") {\r\n            if (events.indexOf(\",\") > -1) {\r\n                events = events.split(\",\");\r\n            } else {\r\n                events = events.split(/\\s/);\r\n            }\r\n        }\r\n\r\n        var handler = findHandler(elm);\r\n\r\n        if (events) events.forEach(function(event) {\r\n\r\n            handler.unregister(event, callback, {\r\n                selector: selector,\r\n            });\r\n        });\r\n        return this;\r\n    }\r\n\r\n    function on(elm, events, selector, data, callback, one) {\r\n\r\n        var autoRemove, delegator;\r\n        if (langx.isPlainObject(events)) {\r\n            langx.each(events, function(type, fn) {\r\n                on(elm, type, selector, data, fn, one);\r\n            });\r\n            return this;\r\n        }\r\n\r\n        if (!langx.isString(selector) && !langx.isFunction(callback)) {\r\n            callback = data;\r\n            data = selector;\r\n            selector = undefined;\r\n        }\r\n\r\n        if (langx.isFunction(data)) {\r\n            callback = data;\r\n            data = undefined;\r\n        }\r\n\r\n        if (callback === false) {\r\n            callback = langx.returnFalse;\r\n        }\r\n\r\n        if (typeof events == \"string\") {\r\n            if (events.indexOf(\",\") > -1) {\r\n                events = events.split(\",\");\r\n            } else {\r\n                events = events.split(/\\s/);\r\n            }\r\n        }\r\n\r\n        var handler = findHandler(elm);\r\n\r\n        events.forEach(function(event) {\r\n            if (event == \"ready\") {\r\n                return ready(callback);\r\n            }\r\n            handler.register(event, callback, {\r\n                data: data,\r\n                selector: selector,\r\n                one: !!one\r\n            });\r\n        });\r\n        return this;\r\n    }\r\n\r\n    function one(elm, events, selector, data, callback) {\r\n        on(elm, events, selector, data, callback, 1);\r\n\r\n        return this;\r\n    }\r\n\r\n    function stop(event) {\r\n        if (window.document.all) {\r\n            event.keyCode = 0;\r\n        }\r\n        if (event.preventDefault) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function trigger(evented, type, args) {\r\n        var e;\r\n        if (type instanceof Event) {\r\n            e = type;\r\n        } else {\r\n            e = createEvent(type, args);\r\n        }\r\n        e._args = args;\r\n\r\n        var fn = (evented.dispatchEvent || evented.trigger);\r\n        if (fn) {\r\n            fn.call(evented, e);\r\n        } else {\r\n            console.warn(\"The evented parameter is not a eventable object\");\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    function ready(callback) {\r\n        // need to check if document.body exists for IE as that browser reports\r\n        // document ready when it hasn't yet created the body elm\r\n        if (readyRE.test(document.readyState) && document.body) {\r\n            langx.defer(callback);\r\n        } else {\r\n            document.addEventListener('DOMContentLoaded', callback, false);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    var keyCodeLookup = {\r\n        \"backspace\": 8,\r\n        \"comma\": 188,\r\n        \"delete\": 46,\r\n        \"down\": 40,\r\n        \"end\": 35,\r\n        \"enter\": 13,\r\n        \"escape\": 27,\r\n        \"home\": 36,\r\n        \"left\": 37,\r\n        \"page_down\": 34,\r\n        \"page_up\": 33,\r\n        \"period\": 190,\r\n        \"right\": 39,\r\n        \"space\": 32,\r\n        \"tab\": 9,\r\n        \"up\": 38        \r\n    };\r\n    //example:\r\n    //shortcuts(elm).add(\"CTRL+ALT+SHIFT+X\",function(){console.log(\"test!\")});\r\n    function shortcuts(elm) {\r\n\r\n        var registry = datax.data(elm, \"shortcuts\");\r\n        if (!registry) {\r\n            registry = {};\r\n            datax.data(elm, \"shortcuts\", registry);\r\n            var run = function(shortcut, event) {\r\n                var n = event.metaKey || event.ctrlKey;\r\n                if (shortcut.ctrl == n && shortcut.alt == event.altKey && shortcut.shift == event.shiftKey) {\r\n                    if (event.keyCode == shortcut.keyCode || event.charCode && event.charCode == shortcut.charCode) {\r\n                        event.preventDefault();\r\n                        if (\"keydown\" == event.type) {\r\n                            shortcut.fn(event);\r\n                        }\r\n                        return true;\r\n                    }\r\n                }\r\n            };\r\n            on(elm, \"keyup keypress keydown\", function(event) {\r\n                if (!(/INPUT|TEXTAREA/.test(event.target.nodeName))) {\r\n                    for (var key in registry) {\r\n                        run(registry[key], event);\r\n                    }\r\n                }\r\n            });\r\n\r\n        }\r\n\r\n        return {\r\n            add: function(pattern, fn) {\r\n                var shortcutKeys;\r\n                if (pattern.indexOf(\",\") > -1) {\r\n                    shortcutKeys = pattern.toLowerCase().split(\",\");\r\n                } else {\r\n                    shortcutKeys = pattern.toLowerCase().split(\" \");\r\n                }\r\n                shortcutKeys.forEach(function(shortcutKey) {\r\n                    var setting = {\r\n                        fn: fn,\r\n                        alt: false,\r\n                        ctrl: false,\r\n                        shift: false\r\n                    };\r\n                    shortcutKey.split(\"+\").forEach(function(key) {\r\n                        switch (key) {\r\n                            case \"alt\":\r\n                            case \"ctrl\":\r\n                            case \"shift\":\r\n                                setting[key] = true;\r\n                                break;\r\n                            default:\r\n                                setting.charCode = key.charCodeAt(0);\r\n                                setting.keyCode = keyCodeLookup[key] || key.toUpperCase().charCodeAt(0);\r\n                        }\r\n                    });\r\n                    var regKey = (setting.ctrl ? \"ctrl\" : \"\") + \",\" + (setting.alt ? \"alt\" : \"\") + \",\" + (setting.shift ? \"shift\" : \"\") + \",\" + setting.keyCode;\r\n                    registry[regKey] = setting;\r\n                })\r\n            }\r\n\r\n        };\r\n\r\n    }\r\n\r\n    function eventer() {\r\n        return eventer;\r\n    }\r\n\r\n    langx.mixin(eventer, {\r\n        create: createEvent,\r\n\r\n        keys : keyCodeLookup,\r\n\r\n        off: off,\r\n\r\n        on: on,\r\n\r\n        one: one,\r\n\r\n        proxy: createProxy,\r\n\r\n        ready: ready,\r\n\r\n        shortcuts: shortcuts,\r\n\r\n        special : specialEvents,\r\n\r\n        stop: stop,\r\n\r\n        trigger: trigger\r\n\r\n    });\r\n\r\n    return skylark.eventer = eventer;\r\n});\r\n\ndefine('skylark-utils-interact/mover',[\r\n    \"./interact\",\r\n    \"skylark-utils/langx\",\r\n    \"skylark-utils/noder\",\r\n    \"skylark-utils/datax\",\r\n    \"skylark-utils/geom\",\r\n    \"skylark-utils/eventer\",\r\n    \"skylark-utils/styler\"\r\n],function(interact, langx,noder,datax,geom,eventer,styler){\r\n    var on = eventer.on,\r\n        off = eventer.off,\r\n        attr = datax.attr,\r\n        removeAttr = datax.removeAttr,\r\n        offset = geom.pagePosition,\r\n        addClass = styler.addClass,\r\n        height = geom.height,\r\n        some = Array.prototype.some,\r\n        map = Array.prototype.map;\r\n\r\n    function _place(/*DomNode*/ node, choices, layoutNode, aroundNodeCoords){\r\n        // summary:\r\n        //      Given a list of spots to put node, put it at the first spot where it fits,\r\n        //      of if it doesn't fit anywhere then the place with the least overflow\r\n        // choices: Array\r\n        //      Array of elements like: {corner: 'TL', pos: {x: 10, y: 20} }\r\n        //      Above example says to put the top-left corner of the node at (10,20)\r\n        // layoutNode: Function(node, aroundNodeCorner, nodeCorner, size)\r\n        //      for things like tooltip, they are displayed differently (and have different dimensions)\r\n        //      based on their orientation relative to the parent.   This adjusts the popup based on orientation.\r\n        //      It also passes in the available size for the popup, which is useful for tooltips to\r\n        //      tell them that their width is limited to a certain amount.   layoutNode() may return a value expressing\r\n        //      how much the popup had to be modified to fit into the available space.   This is used to determine\r\n        //      what the best placement is.\r\n        // aroundNodeCoords: Object\r\n        //      Size of aroundNode, ex: {w: 200, h: 50}\r\n\r\n        // get {x: 10, y: 10, w: 100, h:100} type obj representing position of\r\n        // viewport over document\r\n\r\n        var doc = noder.ownerDoc(node),\r\n            win = noder.ownerWindow(doc),\r\n            view = geom.size(win);\r\n\r\n        view.left = 0;\r\n        view.top = 0;\r\n\r\n        if(!node.parentNode || String(node.parentNode.tagName).toLowerCase() != \"body\"){\r\n            doc.body.appendChild(node);\r\n        }\r\n\r\n        var best = null;\r\n\r\n        some.apply(choices, function(choice){\r\n            var corner = choice.corner;\r\n            var pos = choice.pos;\r\n            var overflow = 0;\r\n\r\n            // calculate amount of space available given specified position of node\r\n            var spaceAvailable = {\r\n                w: {\r\n                    'L': view.left + view.width - pos.x,\r\n                    'R': pos.x - view.left,\r\n                    'M': view.width\r\n                }[corner.charAt(1)],\r\n\r\n                h: {\r\n                    'T': view.top + view.height - pos.y,\r\n                    'B': pos.y - view.top,\r\n                    'M': view.height\r\n                }[corner.charAt(0)]\r\n            };\r\n\r\n            if(layoutNode){\r\n                var res = layoutNode(node, choice.aroundCorner, corner, spaceAvailable, aroundNodeCoords);\r\n                overflow = typeof res == \"undefined\" ? 0 : res;\r\n            }\r\n\r\n            var bb = geom.size(node);\r\n\r\n            // coordinates and size of node with specified corner placed at pos,\r\n            // and clipped by viewport\r\n            var\r\n                startXpos = {\r\n                    'L': pos.x,\r\n                    'R': pos.x - bb.width,\r\n                    'M': Math.max(view.left, Math.min(view.left + view.width, pos.x + (bb.width >> 1)) - bb.width) // M orientation is more flexible\r\n                }[corner.charAt(1)],\r\n\r\n                startYpos = {\r\n                    'T': pos.y,\r\n                    'B': pos.y - bb.height,\r\n                    'M': Math.max(view.top, Math.min(view.top + view.height, pos.y + (bb.height >> 1)) - bb.height)\r\n                }[corner.charAt(0)],\r\n\r\n                startX = Math.max(view.left, startXpos),\r\n                startY = Math.max(view.top, startYpos),\r\n                endX = Math.min(view.left + view.width, startXpos + bb.width),\r\n                endY = Math.min(view.top + view.height, startYpos + bb.height),\r\n                width = endX - startX,\r\n                height = endY - startY;\r\n\r\n            overflow += (bb.width - width) + (bb.height - height);\r\n\r\n            if(best == null || overflow < best.overflow){\r\n                best = {\r\n                    corner: corner,\r\n                    aroundCorner: choice.aroundCorner,\r\n                    left: startX,\r\n                    top: startY,\r\n                    width: width,\r\n                    height: height,\r\n                    overflow: overflow,\r\n                    spaceAvailable: spaceAvailable\r\n                };\r\n            }\r\n\r\n            return !overflow;\r\n        });\r\n\r\n        // In case the best position is not the last one we checked, need to call\r\n        // layoutNode() again.\r\n        if(best.overflow && layoutNode){\r\n            layoutNode(node, best.aroundCorner, best.corner, best.spaceAvailable, aroundNodeCoords);\r\n        }\r\n\r\n\r\n        geom.boundingPosition(node,best);\r\n\r\n        return best;\r\n    }\r\n\r\n    function at(node, pos, corners, padding, layoutNode){\r\n        var choices = map.apply(corners, function(corner){\r\n            var c = {\r\n                corner: corner,\r\n                aroundCorner: reverse[corner],  // so TooltipDialog.orient() gets aroundCorner argument set\r\n                pos: {x: pos.x,y: pos.y}\r\n            };\r\n            if(padding){\r\n                c.pos.x += corner.charAt(1) == 'L' ? padding.x : -padding.x;\r\n                c.pos.y += corner.charAt(0) == 'T' ? padding.y : -padding.y;\r\n            }\r\n            return c;\r\n        });\r\n\r\n        return _place(node, choices, layoutNode);\r\n    }\r\n\r\n    function around(\r\n        /*DomNode*/     node,\r\n        /*DomNode|__Rectangle*/ anchor,\r\n        /*String[]*/    positions,\r\n        /*Boolean*/     leftToRight,\r\n        /*Function?*/   layoutNode){\r\n\r\n        // summary:\r\n        //      Position node adjacent or kitty-corner to anchor\r\n        //      such that it's fully visible in viewport.\r\n        // description:\r\n        //      Place node such that corner of node touches a corner of\r\n        //      aroundNode, and that node is fully visible.\r\n        // anchor:\r\n        //      Either a DOMNode or a rectangle (object with x, y, width, height).\r\n        // positions:\r\n        //      Ordered list of positions to try matching up.\r\n        //\r\n        //      - before: places drop down to the left of the anchor node/widget, or to the right in the case\r\n        //          of RTL scripts like Hebrew and Arabic; aligns either the top of the drop down\r\n        //          with the top of the anchor, or the bottom of the drop down with bottom of the anchor.\r\n        //      - after: places drop down to the right of the anchor node/widget, or to the left in the case\r\n        //          of RTL scripts like Hebrew and Arabic; aligns either the top of the drop down\r\n        //          with the top of the anchor, or the bottom of the drop down with bottom of the anchor.\r\n        //      - before-centered: centers drop down to the left of the anchor node/widget, or to the right\r\n        //          in the case of RTL scripts like Hebrew and Arabic\r\n        //      - after-centered: centers drop down to the right of the anchor node/widget, or to the left\r\n        //          in the case of RTL scripts like Hebrew and Arabic\r\n        //      - above-centered: drop down is centered above anchor node\r\n        //      - above: drop down goes above anchor node, left sides aligned\r\n        //      - above-alt: drop down goes above anchor node, right sides aligned\r\n        //      - below-centered: drop down is centered above anchor node\r\n        //      - below: drop down goes below anchor node\r\n        //      - below-alt: drop down goes below anchor node, right sides aligned\r\n        // layoutNode: Function(node, aroundNodeCorner, nodeCorner)\r\n        //      For things like tooltip, they are displayed differently (and have different dimensions)\r\n        //      based on their orientation relative to the parent.   This adjusts the popup based on orientation.\r\n        // leftToRight:\r\n        //      True if widget is LTR, false if widget is RTL.   Affects the behavior of \"above\" and \"below\"\r\n        //      positions slightly.\r\n        // example:\r\n        //  |   placeAroundNode(node, aroundNode, {'BL':'TL', 'TR':'BR'});\r\n        //      This will try to position node such that node's top-left corner is at the same position\r\n        //      as the bottom left corner of the aroundNode (ie, put node below\r\n        //      aroundNode, with left edges aligned).   If that fails it will try to put\r\n        //      the bottom-right corner of node where the top right corner of aroundNode is\r\n        //      (ie, put node above aroundNode, with right edges aligned)\r\n        //\r\n\r\n        // If around is a DOMNode (or DOMNode id), convert to coordinates.\r\n        var aroundNodePos;\r\n        if(typeof anchor == \"string\" || \"offsetWidth\" in anchor || \"ownerSVGElement\" in anchor){\r\n            aroundNodePos = domGeometry.position(anchor, true);\r\n\r\n            // For above and below dropdowns, subtract width of border so that popup and aroundNode borders\r\n            // overlap, preventing a double-border effect.  Unfortunately, difficult to measure the border\r\n            // width of either anchor or popup because in both cases the border may be on an inner node.\r\n            if(/^(above|below)/.test(positions[0])){\r\n                var anchorBorder = domGeometry.getBorderExtents(anchor),\r\n                    anchorChildBorder = anchor.firstChild ? domGeometry.getBorderExtents(anchor.firstChild) : {t:0,l:0,b:0,r:0},\r\n                    nodeBorder =  domGeometry.getBorderExtents(node),\r\n                    nodeChildBorder = node.firstChild ? domGeometry.getBorderExtents(node.firstChild) : {t:0,l:0,b:0,r:0};\r\n                aroundNodePos.y += Math.min(anchorBorder.t + anchorChildBorder.t, nodeBorder.t + nodeChildBorder.t);\r\n                aroundNodePos.h -=  Math.min(anchorBorder.t + anchorChildBorder.t, nodeBorder.t+ nodeChildBorder.t) +\r\n                    Math.min(anchorBorder.b + anchorChildBorder.b, nodeBorder.b + nodeChildBorder.b);\r\n            }\r\n        }else{\r\n            aroundNodePos = anchor;\r\n        }\r\n\r\n        // Compute position and size of visible part of anchor (it may be partially hidden by ancestor nodes w/scrollbars)\r\n        if(anchor.parentNode){\r\n            // ignore nodes between position:relative and position:absolute\r\n            var sawPosAbsolute = domStyle.getComputedStyle(anchor).position == \"absolute\";\r\n            var parent = anchor.parentNode;\r\n            while(parent && parent.nodeType == 1 && parent.nodeName != \"BODY\"){  //ignoring the body will help performance\r\n                var parentPos = domGeometry.position(parent, true),\r\n                    pcs = domStyle.getComputedStyle(parent);\r\n                if(/relative|absolute/.test(pcs.position)){\r\n                    sawPosAbsolute = false;\r\n                }\r\n                if(!sawPosAbsolute && /hidden|auto|scroll/.test(pcs.overflow)){\r\n                    var bottomYCoord = Math.min(aroundNodePos.y + aroundNodePos.h, parentPos.y + parentPos.h);\r\n                    var rightXCoord = Math.min(aroundNodePos.x + aroundNodePos.w, parentPos.x + parentPos.w);\r\n                    aroundNodePos.x = Math.max(aroundNodePos.x, parentPos.x);\r\n                    aroundNodePos.y = Math.max(aroundNodePos.y, parentPos.y);\r\n                    aroundNodePos.h = bottomYCoord - aroundNodePos.y;\r\n                    aroundNodePos.w = rightXCoord - aroundNodePos.x;\r\n                }\r\n                if(pcs.position == \"absolute\"){\r\n                    sawPosAbsolute = true;\r\n                }\r\n                parent = parent.parentNode;\r\n            }\r\n        }           \r\n\r\n        var x = aroundNodePos.x,\r\n            y = aroundNodePos.y,\r\n            width = \"w\" in aroundNodePos ? aroundNodePos.w : (aroundNodePos.w = aroundNodePos.width),\r\n            height = \"h\" in aroundNodePos ? aroundNodePos.h : (kernel.deprecated(\"place.around: dijit/place.__Rectangle: { x:\"+x+\", y:\"+y+\", height:\"+aroundNodePos.height+\", width:\"+width+\" } has been deprecated.  Please use { x:\"+x+\", y:\"+y+\", h:\"+aroundNodePos.height+\", w:\"+width+\" }\", \"\", \"2.0\"), aroundNodePos.h = aroundNodePos.height);\r\n\r\n        // Convert positions arguments into choices argument for _place()\r\n        var choices = [];\r\n        function push(aroundCorner, corner){\r\n            choices.push({\r\n                aroundCorner: aroundCorner,\r\n                corner: corner,\r\n                pos: {\r\n                    x: {\r\n                        'L': x,\r\n                        'R': x + width,\r\n                        'M': x + (width >> 1)\r\n                    }[aroundCorner.charAt(1)],\r\n                    y: {\r\n                        'T': y,\r\n                        'B': y + height,\r\n                        'M': y + (height >> 1)\r\n                    }[aroundCorner.charAt(0)]\r\n                }\r\n            })\r\n        }\r\n        array.forEach(positions, function(pos){\r\n            var ltr =  leftToRight;\r\n            switch(pos){\r\n                case \"above-centered\":\r\n                    push(\"TM\", \"BM\");\r\n                    break;\r\n                case \"below-centered\":\r\n                    push(\"BM\", \"TM\");\r\n                    break;\r\n                case \"after-centered\":\r\n                    ltr = !ltr;\r\n                    // fall through\r\n                case \"before-centered\":\r\n                    push(ltr ? \"ML\" : \"MR\", ltr ? \"MR\" : \"ML\");\r\n                    break;\r\n                case \"after\":\r\n                    ltr = !ltr;\r\n                    // fall through\r\n                case \"before\":\r\n                    push(ltr ? \"TL\" : \"TR\", ltr ? \"TR\" : \"TL\");\r\n                    push(ltr ? \"BL\" : \"BR\", ltr ? \"BR\" : \"BL\");\r\n                    break;\r\n                case \"below-alt\":\r\n                    ltr = !ltr;\r\n                    // fall through\r\n                case \"below\":\r\n                    // first try to align left borders, next try to align right borders (or reverse for RTL mode)\r\n                    push(ltr ? \"BL\" : \"BR\", ltr ? \"TL\" : \"TR\");\r\n                    push(ltr ? \"BR\" : \"BL\", ltr ? \"TR\" : \"TL\");\r\n                    break;\r\n                case \"above-alt\":\r\n                    ltr = !ltr;\r\n                    // fall through\r\n                case \"above\":\r\n                    // first try to align left borders, next try to align right borders (or reverse for RTL mode)\r\n                    push(ltr ? \"TL\" : \"TR\", ltr ? \"BL\" : \"BR\");\r\n                    push(ltr ? \"TR\" : \"TL\", ltr ? \"BR\" : \"BL\");\r\n                    break;\r\n                default:\r\n                    // To assist dijit/_base/place, accept arguments of type {aroundCorner: \"BL\", corner: \"TL\"}.\r\n                    // Not meant to be used directly.  Remove for 2.0.\r\n                    push(pos.aroundCorner, pos.corner);\r\n            }\r\n        });\r\n\r\n        var position = _place(node, choices, layoutNode, {w: width, h: height});\r\n        position.aroundNodePos = aroundNodePos;\r\n\r\n        return position;\r\n    }\r\n\r\n    function movable(elm, params) {\r\n        function updateWithTouchData(e) {\r\n            var keys, i;\r\n\r\n            if (e.changedTouches) {\r\n                keys = \"screenX screenY pageX pageY clientX clientY\".split(' ');\r\n                for (i = 0; i < keys.length; i++) {\r\n                    e[keys[i]] = e.changedTouches[0][keys[i]];\r\n                }\r\n            }\r\n        }\r\n\r\n        params = params || {};\r\n        var handleEl = params.handle || elm,\r\n            auto = params.auto === false ? false : true,\r\n            constraints = params.constraints,\r\n            overlayDiv,\r\n            doc = params.document || document,\r\n            downButton,\r\n            start,\r\n            stop,\r\n            drag,\r\n            startX,\r\n            startY,\r\n            originalPos,\r\n            size,\r\n            startedCallback = params.started,\r\n            movingCallback = params.moving,\r\n            stoppedCallback = params.stopped,\r\n\r\n            start = function(e) {\r\n                var docSize = geom.getDocumentSize(doc),\r\n                    cursor;\r\n\r\n                updateWithTouchData(e);\r\n\r\n                e.preventDefault();\r\n                downButton = e.button;\r\n                //handleEl = getHandleEl();\r\n                startX = e.screenX;\r\n                startY = e.screenY;\r\n\r\n                originalPos = geom.relativePosition(elm);\r\n                size = geom.size(elm);\r\n\r\n                // Grab cursor from handle so we can place it on overlay\r\n                cursor = styler.css(handleEl, \"curosr\");\r\n\r\n                overlayDiv = noder.createElement(\"div\");\r\n                styler.css(overlayDiv, {\r\n                    position: \"absolute\",\r\n                    top: 0,\r\n                    left: 0,\r\n                    width: docSize.width,\r\n                    height: docSize.height,\r\n                    zIndex: 0x7FFFFFFF,\r\n                    opacity: 0.0001,\r\n                    cursor: cursor\r\n                });\r\n                noder.append(doc.body, overlayDiv);\r\n\r\n                eventer.on(doc, \"mousemove touchmove\", move).on(doc, \"mouseup touchend\", stop);\r\n\r\n                if (startedCallback) {\r\n                    startedCallback(e);\r\n                }\r\n            },\r\n\r\n            move = function(e) {\r\n                updateWithTouchData(e);\r\n\r\n                if (e.button !== 0) {\r\n                    return stop(e);\r\n                }\r\n\r\n                e.deltaX = e.screenX - startX;\r\n                e.deltaY = e.screenY - startY;\r\n\r\n                if (auto) {\r\n                    var l = originalPos.left + e.deltaX,\r\n                        t = originalPos.top + e.deltaY;\r\n                    if (constraints) {\r\n\r\n                        if (l < constraints.minX) {\r\n                            l = constraints.minX;\r\n                        }\r\n\r\n                        if (l > constraints.maxX) {\r\n                            l = constraints.maxX;\r\n                        }\r\n\r\n                        if (t < constraints.minY) {\r\n                            t = constraints.minY;\r\n                        }\r\n\r\n                        if (t > constraints.maxY) {\r\n                            t = constraints.maxY;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                geom.relativePosition(elm, {\r\n                    left: l,\r\n                    top: t\r\n                })\r\n\r\n                e.preventDefault();\r\n                if (movingCallback) {\r\n                    movingCallback(e);\r\n                }\r\n            },\r\n\r\n            stop = function(e) {\r\n                updateWithTouchData(e);\r\n\r\n                eventer.off(doc, \"mousemove touchmove\", move).off(doc, \"mouseup touchend\", stop);\r\n\r\n                noder.remove(overlayDiv);\r\n\r\n                if (stoppedCallback) {\r\n                    stoppedCallback(e);\r\n                }\r\n            };\r\n\r\n        eventer.on(handleEl, \"mousedown touchstart\", start);\r\n\r\n        return {\r\n            // destroys the dragger.\r\n            remove: function() {\r\n                eventer.off(handleEl);\r\n            }\r\n        }\r\n    }\r\n\r\n    function mover(){\r\n      return mover;\r\n    }\r\n\r\n    langx.mixin(mover, {\r\n        around : around,\r\n\r\n        at: at, \r\n\r\n        movable: movable\r\n\r\n    });\r\n\r\n    return interact.mover = mover;\r\n});\r\n\ndefine('skylark-utils/fx',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./browser\",\r\n    \"./geom\",\r\n    \"./styler\",\r\n    \"./eventer\"\r\n], function(skylark, langx, browser, geom, styler, eventer) {\r\n    var animationName,\r\n        animationDuration,\r\n        animationTiming,\r\n        animationDelay,\r\n        transitionProperty,\r\n        transitionDuration,\r\n        transitionTiming,\r\n        transitionDelay,\r\n\r\n        animationEnd = browser.normalizeCssEvent('AnimationEnd'),\r\n        transitionEnd = browser.normalizeCssEvent('TransitionEnd'),\r\n\r\n        supportedTransforms = /^((translate|rotate|scale)(X|Y|Z|3d)?|matrix(3d)?|perspective|skew(X|Y)?)$/i,\r\n        transform = browser.css3PropPrefix + \"transform\",\r\n        cssReset = {};\r\n\r\n\r\n    cssReset[animationName = browser.normalizeCssProperty(\"animation-name\")] =\r\n        cssReset[animationDuration = browser.normalizeCssProperty(\"animation-duration\")] =\r\n        cssReset[animationDelay = browser.normalizeCssProperty(\"animation-delay\")] =\r\n        cssReset[animationTiming = browser.normalizeCssProperty(\"animation-timing-function\")] = \"\";\r\n\r\n    cssReset[transitionProperty = browser.normalizeCssProperty(\"transition-property\")] =\r\n        cssReset[transitionDuration = browser.normalizeCssProperty(\"transition-duration\")] =\r\n        cssReset[transitionDelay = browser.normalizeCssProperty(\"transition-delay\")] =\r\n        cssReset[transitionTiming = browser.normalizeCssProperty(\"transition-timing-function\")] = \"\";\r\n\r\n\r\n\r\n    function animate(elm, properties, duration, ease, callback, delay) {\r\n        var key,\r\n            cssValues = {},\r\n            cssProperties = [],\r\n            transforms = \"\",\r\n            that = this,\r\n            endEvent,\r\n            wrappedCallback,\r\n            fired = false,\r\n            hasScrollTop = false;\r\n\r\n        if (langx.isPlainObject(duration)) {\r\n            ease = duration.easing;\r\n            callback = duration.complete;\r\n            delay = duration.delay;\r\n            duration = duration.duration;\r\n        }\r\n\r\n        if (langx.isString(duration)) {\r\n            duration = fx.speeds[duration];\r\n        }\r\n        if (duration === undefined) {\r\n            duration = fx.speeds.normal;\r\n        }\r\n        duration = duration / 1000;\r\n        if (fx.off) {\r\n            duration = 0;\r\n        }\r\n\r\n        if (langx.isFunction(ease)) {\r\n            callback = ease;\r\n            eace = \"swing\";\r\n        } else {\r\n            ease = ease || \"swing\";\r\n        }\r\n\r\n        if (delay) {\r\n            delay = delay / 1000;\r\n        } else {\r\n            delay = 0;\r\n        }\r\n\r\n        if (langx.isString(properties)) {\r\n            // keyframe animation\r\n            cssValues[animationName] = properties;\r\n            cssValues[animationDuration] = duration + \"s\";\r\n            cssValues[animationTiming] = ease;\r\n            endEvent = animationEnd;\r\n        } else {\r\n            // CSS transitions\r\n            for (key in properties) {\r\n                if (supportedTransforms.test(key)) {\r\n                    transforms += key + \"(\" + properties[key] + \") \";\r\n                } else {\r\n                    if (key === \"scrollTop\") {\r\n                        hasScrollTop = true;\r\n                    }\r\n                    cssValues[key] = properties[key];\r\n                    cssProperties.push(langx.dasherize(key));\r\n                }\r\n            }\r\n            endEvent = transitionEnd;\r\n        }\r\n\r\n        if (transforms) {\r\n            cssValues[transform] = transforms;\r\n            cssProperties.push(transform);\r\n        }\r\n\r\n        if (duration > 0 && langx.isPlainObject(properties)) {\r\n            cssValues[transitionProperty] = cssProperties.join(\", \");\r\n            cssValues[transitionDuration] = duration + \"s\";\r\n            cssValues[transitionDelay] = delay + \"s\";\r\n            cssValues[transitionTiming] = ease;\r\n        }\r\n\r\n        wrappedCallback = function(event) {\r\n            fired = true;\r\n            if (event) {\r\n                if (event.target !== event.currentTarget) {\r\n                    return // makes sure the event didn't bubble from \"below\"\r\n                }\r\n                eventer.off(event.target, endEvent, wrappedCallback)\r\n            } else {\r\n                eventer.off(elm, animationEnd, wrappedCallback) // triggered by setTimeout\r\n            }\r\n            styler.css(elm, cssReset);\r\n            callback && callback.call(this);\r\n        };\r\n\r\n        if (duration > 0) {\r\n            eventer.on(elm, endEvent, wrappedCallback);\r\n            // transitionEnd is not always firing on older Android phones\r\n            // so make sure it gets fired\r\n            langx.debounce(function() {\r\n                if (fired) {\r\n                    return;\r\n                }\r\n                wrappedCallback.call(that);\r\n            }, ((duration + delay) * 1000) + 25)();\r\n        }\r\n\r\n        // trigger page reflow so new elements can animate\r\n        elm.clientLeft;\r\n\r\n        styler.css(elm, cssValues);\r\n\r\n        if (duration <= 0) {\r\n            langx.debounce(function() {\r\n                if (fired) {\r\n                    return;\r\n                }\r\n                wrappedCallback.call(that);\r\n            }, 0)();\r\n        }\r\n\r\n        if (hasScrollTop) {\r\n            scrollToTop(elm, properties[\"scrollTop\"], duration, callback);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    function show(elm, speed, callback) {\r\n        styler.show(elm);\r\n        if (speed) {\r\n            if (!callback && langx.isFunction(speed)) {\r\n                callback = speed;\r\n                speed = \"normal\";\r\n            }\r\n            styler.css(elm, \"opacity\", 0)\r\n            animate(elm, { opacity: 1, scale: \"1,1\" }, speed, callback);\r\n        }\r\n        return this;\r\n    }\r\n\r\n\r\n    function hide(elm, speed, callback) {\r\n        if (speed) {\r\n            if (!callback && langx.isFunction(speed)) {\r\n                callback = speed;\r\n                speed = \"normal\";\r\n            }\r\n            animate(elm, { opacity: 0, scale: \"0,0\" }, speed, function() {\r\n                styler.hide(elm);\r\n                if (callback) {\r\n                    callback.call(elm);\r\n                }\r\n            });\r\n        } else {\r\n            styler.hide(elm);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function scrollToTop(elm, pos, speed, callback) {\r\n        var scrollFrom = parseInt(elm.scrollTop),\r\n            i = 0,\r\n            runEvery = 5, // run every 5ms\r\n            freq = speed * 1000 / runEvery,\r\n            scrollTo = parseInt(pos);\r\n\r\n        var interval = setInterval(function() {\r\n            i++;\r\n\r\n            if (i <= freq) elm.scrollTop = (scrollTo - scrollFrom) / freq * i + scrollFrom;\r\n\r\n            if (i >= freq + 1) {\r\n                clearInterval(interval);\r\n                if (callback) langx.debounce(callback, 1000)();\r\n            }\r\n        }, runEvery);\r\n    }\r\n\r\n    function toggle(elm, speed, callback) {\r\n        if (styler.isInvisible(elm)) {\r\n            show(elm, speed, callback);\r\n        } else {\r\n            hide(elm, speed, callback);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function fadeTo(elm, speed, opacity, easing, callback) {\r\n        animate(elm, { opacity: opacity }, speed, easing, callback);\r\n        return this;\r\n    }\r\n\r\n    function fadeIn(elm, speed, easing, callback) {\r\n        var target = styler.css(elm, \"opacity\");\r\n        if (target > 0) {\r\n            styler.css(elm, \"opacity\", 0);\r\n        } else {\r\n            target = 1;\r\n        }\r\n        styler.show(elm);\r\n\r\n        fadeTo(elm, speed, target, easing, callback);\r\n\r\n        return this;\r\n    }\r\n\r\n    function fadeOut(elm, speed, easing, callback) {\r\n        var _elm = elm,\r\n            complete,\r\n            options = {};\r\n\r\n        if (langx.isPlainObject(speed)) {\r\n            options.easing = speed.easing;\r\n            options.duration = speed.duration;\r\n            complete = speed.complete;\r\n        } else {\r\n            options.duration = speed;\r\n            if (callback) {\r\n                complete = callback;\r\n                options.easing = easing;\r\n            } else {\r\n                complete = easing;\r\n            }\r\n        }\r\n        options.complete = function() {\r\n            styler.hide(elm);\r\n            if (complete) {\r\n                complete.call(elm);\r\n            }\r\n        }\r\n\r\n        fadeTo(elm, options, 0);\r\n\r\n        return this;\r\n    }\r\n\r\n    function fadeToggle(elm, speed, ceasing, allback) {\r\n        if (styler.isInvisible(elm)) {\r\n            fadeIn(elm, speed, easing, callback);\r\n        } else {\r\n            fadeOut(elm, speed, easing, callback);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function slideDown(elm,duration,callback) {    \r\n    \r\n        // get the element position to restore it then\r\n        var position = styler.css(elm,'position');\r\n        \r\n        // show element if it is hidden\r\n        show(elm);\r\n        \r\n        // place it so it displays as usually but hidden\r\n        styler.css(elm,{\r\n            position: 'absolute',\r\n            visibility: 'hidden'\r\n        });\r\n        \r\n        // get naturally height, margin, padding\r\n        var marginTop = styler.css(elm,'margin-top');\r\n        var marginBottom = styler.css(elm,'margin-bottom');\r\n        var paddingTop = styler.css(elm,'padding-top');\r\n        var paddingBottom = styler.css(elm,'padding-bottom');\r\n        var height = styler.css(elm,'height');\r\n        \r\n        // set initial css for animation\r\n        styler.css(elm,{\r\n            position: position,\r\n            visibility: 'visible',\r\n            overflow: 'hidden',\r\n            height: 0,\r\n            marginTop: 0,\r\n            marginBottom: 0,\r\n            paddingTop: 0,\r\n            paddingBottom: 0\r\n        });\r\n        \r\n        // animate to gotten height, margin and padding\r\n        animate(elm,{\r\n            height: height,\r\n            marginTop: marginTop,\r\n            marginBottom: marginBottom,\r\n            paddingTop: paddingTop,\r\n            paddingBottom: paddingBottom\r\n        }, {\r\n            duration : duration,\r\n            complete: function(){\r\n                if (callback) {\r\n                    callback.apply(elm); \r\n                }\r\n            }    \r\n        }\r\n    );\r\n        \r\n        return this;\r\n    };\r\n\r\n    function slideUp(elm,duration,callback) {\r\n        // active the function only if the element is visible\r\n        if (geom.height(elm) > 0) {\r\n                   \r\n            // get the element position to restore it then\r\n            var position = styler.css(elm,'position');\r\n            \r\n            // get the element height, margin and padding to restore them then\r\n            var height = styler.css(elm,'height');\r\n            var marginTop = styler.css(elm,'margin-top');\r\n            var marginBottom = styler.css(elm,'margin-bottom');\r\n            var paddingTop = styler.css(elm,'padding-top');\r\n            var paddingBottom = styler.css(elm,'padding-bottom');\r\n            \r\n            // set initial css for animation\r\n            styler.css(elm,{\r\n                visibility: 'visible',\r\n                overflow: 'hidden',\r\n                height: height,\r\n                marginTop: marginTop,\r\n                marginBottom: marginBottom,\r\n                paddingTop: paddingTop,\r\n                paddingBottom: paddingBottom\r\n            });\r\n            \r\n            // animate element height, margin and padding to zero\r\n            animate(elm,{\r\n                height: 0,\r\n                marginTop: 0,\r\n                marginBottom: 0,\r\n                paddingTop: 0,\r\n                paddingBottom: 0\r\n            }, { \r\n                // callback : restore the element position, height, margin and padding to original values\r\n                duration: duration,\r\n                queue: false,\r\n                complete: function(){\r\n                    hide(elm);\r\n                    styler.css(elm,{\r\n                        visibility: 'visible',\r\n                        overflow: 'hidden',\r\n                        height: height,\r\n                        marginTop: marginTop,\r\n                        marginBottom: marginBottom,\r\n                        paddingTop: paddingTop,\r\n                        paddingBottom: paddingBottom\r\n                    });\r\n                    if (callback) {\r\n                        callback.apply(elm); \r\n                    }\r\n                }\r\n            });\r\n        }\r\n        return this;\r\n    };\r\n    \r\n    /* SlideToggle */\r\n    function slideToggle(elm,duration,callback) {\r\n    \r\n        // if the element is hidden, slideDown !\r\n        if (geom.height(elm) == 0) {\r\n            slideDown(elm,duration,callback);\r\n        } \r\n        // if the element is visible, slideUp !\r\n        else {\r\n            slideUp(elm,duration,callback);\r\n        }\r\n        return this;\r\n    };\r\n\r\n\r\n    function fx() {\r\n        return fx;\r\n    }\r\n\r\n    langx.mixin(fx, {\r\n        off: false,\r\n\r\n        speeds: {\r\n            normal: 400,\r\n            fast: 200,\r\n            slow: 600\r\n        },\r\n\r\n        animate: animate,\r\n        fadeIn: fadeIn,\r\n        fadeOut: fadeOut,\r\n        fadeTo: fadeTo,\r\n        fadeToggle: fadeToggle,\r\n        hide: hide,\r\n        scrollToTop: scrollToTop,\r\n\r\n        slideDown : slideDown,\r\n        slideToggle : slideToggle,\r\n        slideUp : slideUp,\r\n        show: show,\r\n        toggle: toggle\r\n    });\r\n\r\n    return skylark.fx = fx;\r\n});\ndefine('skylark-utils/query',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./noder\",\r\n    \"./datax\",\r\n    \"./eventer\",\r\n    \"./finder\",\r\n    \"./geom\",\r\n    \"./styler\",\r\n    \"./fx\"\r\n], function(skylark, langx, noder, datax, eventer, finder, geom, styler, fx) {\r\n    var some = Array.prototype.some,\r\n        push = Array.prototype.push,\r\n        every = Array.prototype.every,\r\n        concat = Array.prototype.concat,\r\n        slice = Array.prototype.slice,\r\n        map = Array.prototype.map,\r\n        filter = Array.prototype.filter,\r\n        forEach = Array.prototype.forEach,\r\n        indexOf = Array.prototype.indexOf,\r\n        isQ;\r\n\r\n    var rquickExpr = /^(?:[^#<]*(<[\\w\\W]+>)[^>]*$|#([\\w\\-]*)$)/;\r\n\r\n    var funcArg = langx.funcArg,\r\n        isArrayLike = langx.isArrayLike,\r\n        isString = langx.isString,\r\n        uniq = langx.uniq,\r\n        isFunction = langx.isFunction;\r\n\r\n    var type = langx.type,\r\n        isArray = langx.isArray,\r\n\r\n        isWindow = langx.isWindow,\r\n\r\n        isDocument = langx.isDocument,\r\n\r\n        isObject = langx.isObject,\r\n\r\n        isPlainObject = langx.isPlainObject,\r\n\r\n        compact = langx.compact,\r\n\r\n        flatten = langx.flatten,\r\n\r\n        camelCase = langx.camelCase,\r\n\r\n        dasherize = langx.dasherize,\r\n        children = finder.children;\r\n\r\n    function wrapper_map(func, context) {\r\n        return function() {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            var result = $.map(self, function(elem, idx) {\r\n                return func.apply(context, [elem].concat(params));\r\n            });\r\n            return $(uniq(result));\r\n        }\r\n    }\r\n\r\n    function wrapper_selector(func, context, last) {\r\n        return function(selector) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            var result = this.map(function(idx, elem) {\r\n                // if (elem.nodeType == 1) {\r\n                if (elem.querySelector) {\r\n                    return func.apply(context, last ? [elem] : [elem, selector]);\r\n                }\r\n            });\r\n            if (last && selector) {\r\n                return result.filter(selector);\r\n            } else {\r\n                return result;\r\n            }\r\n        }\r\n    }\r\n\r\n    function wrapper_selector_until(func, context, last) {\r\n        return function(util, selector) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            if (selector === undefined) {\r\n                selector = util;\r\n                util = undefined;\r\n            }\r\n            var result = this.map(function(idx, elem) {\r\n                // if (elem.nodeType == 1) {\r\n                if (elem.querySelector) {\r\n                    return func.apply(context, last ? [elem, util] : [elem, selector, util]);\r\n                }\r\n            });\r\n            if (last && selector) {\r\n                return result.filter(selector);\r\n            } else {\r\n                return result;\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    function wrapper_every_act(func, context) {\r\n        return function() {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            this.each(function(idx) {\r\n                func.apply(context, [this].concat(params));\r\n            });\r\n            return self;\r\n        }\r\n    }\r\n\r\n    function wrapper_every_act_firstArgFunc(func, context, oldValueFunc) {\r\n        return function(arg1) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            forEach.call(self, function(elem, idx) {\r\n                var newArg1 = funcArg(elem, arg1, idx, oldValueFunc(elem));\r\n                func.apply(context, [elem, arg1].concat(params.slice(1)));\r\n            });\r\n            return self;\r\n        }\r\n    }\r\n\r\n    function wrapper_some_chk(func, context) {\r\n        return function() {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            return some.call(self, function(elem) {\r\n                return func.apply(context, [elem].concat(params));\r\n            });\r\n        }\r\n    }\r\n\r\n    function wrapper_name_value(func, context, oldValueFunc) {\r\n        return function(name, value) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n\r\n            if (langx.isPlainObject(name) || langx.isDefined(value)) {\r\n                forEach.call(self, function(elem, idx) {\r\n                    var newValue;\r\n                    if (oldValueFunc) {\r\n                        newValue = funcArg(elem, value, idx, oldValueFunc(elem, name));\r\n                    } else {\r\n                        newValue = value\r\n                    }\r\n                    func.apply(context, [elem].concat(params));\r\n                });\r\n                return self;\r\n            } else {\r\n                if (self[0]) {\r\n                    return func.apply(context, [self[0], name]);\r\n                }\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    function wrapper_value(func, context, oldValueFunc) {\r\n        return function(value) {\r\n            var self = this;\r\n\r\n            if (langx.isDefined(value)) {\r\n                forEach.call(self, function(elem, idx) {\r\n                    var newValue;\r\n                    if (oldValueFunc) {\r\n                        newValue = funcArg(elem, value, idx, oldValueFunc(elem));\r\n                    } else {\r\n                        newValue = value\r\n                    }\r\n                    func.apply(context, [elem, newValue]);\r\n                });\r\n                return self;\r\n            } else {\r\n                if (self[0]) {\r\n                    return func.apply(context, [self[0]]);\r\n                }\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    var NodeList = langx.klass({\r\n        klassName: \"SkNodeList\",\r\n        init: function(selector, context) {\r\n            var self = this,\r\n                match, nodes, node, props;\r\n\r\n            if (selector) {\r\n                self.context = context = context || noder.doc();\r\n\r\n                if (isString(selector)) {\r\n                    // a html string or a css selector is expected\r\n                    self.selector = selector;\r\n\r\n                    if (selector.charAt(0) === \"<\" && selector.charAt(selector.length - 1) === \">\" && selector.length >= 3) {\r\n                        match = [null, selector, null];\r\n                    } else {\r\n                        match = rquickExpr.exec(selector);\r\n                    }\r\n\r\n                    if (match) {\r\n                        if (match[1]) {\r\n                            // if selector is html\r\n                            nodes = noder.createFragment(selector);\r\n\r\n                            if (langx.isPlainObject(context)) {\r\n                                props = context;\r\n                            }\r\n\r\n                        } else {\r\n                            node = finder.byId(match[2], noder.ownerDoc(context));\r\n\r\n                            if (node) {\r\n                                // if selector is id\r\n                                nodes = [node];\r\n                            }\r\n\r\n                        }\r\n                    } else {\r\n                        // if selector is css selector\r\n                        if (langx.isString(context)) {\r\n                            context = finder.find(context);\r\n                        }\r\n\r\n                        nodes = finder.descendants(context, selector);\r\n                    }\r\n                } else {\r\n                    if (isArray(selector)) {\r\n                        // a dom node array is expected\r\n                        nodes = selector;\r\n                    } else {\r\n                        // a dom node is expected\r\n                        nodes = [selector];\r\n                    }\r\n                    //self.add(selector, false);\r\n                }\r\n            }\r\n\r\n\r\n            if (nodes) {\r\n\r\n                push.apply(self, nodes);\r\n\r\n                if (props) {\r\n                    for ( var name  in props ) {\r\n                        // Properties of context are called as methods if possible\r\n                        if ( langx.isFunction( this[ name ] ) ) {\r\n                            this[ name ]( props[ name ] );\r\n                        } else {\r\n                            this.attr( name, props[ name ] );\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            return self;\r\n        }\r\n    });\r\n\r\n    var query = (function() {\r\n        isQ = function(object) {\r\n            return object instanceof NodeList;\r\n        }\r\n        init = function(selector, context) {\r\n            return new NodeList(selector, context);\r\n        }\r\n\r\n        var $ = function(selector, context) {\r\n            if (isFunction(selector)) {\r\n                eventer.ready(function() {\r\n                    selector($);\r\n                });\r\n            } else if (isQ(selector)) {\r\n                return selector;\r\n            } else {\r\n                if (context && isQ(context) && isString(selector)) {\r\n                    return context.find(selector);\r\n                }\r\n                return init(selector, context);\r\n            }\r\n        };\r\n\r\n        $.fn = NodeList.prototype;\r\n        langx.mixin($.fn, {\r\n            // `map` and `slice` in the jQuery API work differently\r\n            // from their array counterparts\r\n            length : 0,\r\n\r\n            map: function(fn) {\r\n                return $(uniq(langx.map(this, function(el, i) {\r\n                    return fn.call(el, i, el)\r\n                })));\r\n            },\r\n\r\n            slice: function() {\r\n                return $(slice.apply(this, arguments))\r\n            },\r\n\r\n            forEach: function() {\r\n                return forEach.apply(this,arguments);\r\n            },\r\n\r\n            get: function(idx) {\r\n                return idx === undefined ? slice.call(this) : this[idx >= 0 ? idx : idx + this.length]\r\n            },\r\n\r\n            indexOf: function() {\r\n                return indexOf.apply(this,arguments);\r\n            },\r\n\r\n            toArray: function() {\r\n                return slice.call(this);\r\n            },\r\n\r\n            size: function() {\r\n                return this.length\r\n            },\r\n\r\n            remove: wrapper_every_act(noder.remove, noder),\r\n\r\n            each: function(callback) {\r\n                langx.each(this, callback);\r\n                return this;\r\n            },\r\n\r\n            filter: function(selector) {\r\n                if (isFunction(selector)) return this.not(this.not(selector))\r\n                return $(filter.call(this, function(element) {\r\n                    return finder.matches(element, selector)\r\n                }))\r\n            },\r\n\r\n            add: function(selector, context) {\r\n                return $(uniq(this.toArray().concat($(selector, context).toArray())));\r\n            },\r\n\r\n            is: function(selector) {\r\n                if (this.length > 0) {\r\n                    var self = this;\r\n                    if (langx.isString(selector)) {\r\n                        return some.call(self,function(elem) {\r\n                            return finder.matches(elem, selector);\r\n                        });\r\n                    } else if (langx.isArrayLike(selector)) {\r\n                       return some.call(self,function(elem) {\r\n                            return langx.inArray(elem, selector);\r\n                        });\r\n                    } else if (langx.isHtmlNode(selector)) {\r\n                       return some.call(self,function(elem) {\r\n                            return elem ==  selector;\r\n                        });\r\n                    }\r\n                }\r\n                return false;\r\n            },\r\n            \r\n            not: function(selector) {\r\n                var nodes = []\r\n                if (isFunction(selector) && selector.call !== undefined)\r\n                    this.each(function(idx) {\r\n                        if (!selector.call(this, idx)) nodes.push(this)\r\n                    })\r\n                else {\r\n                    var excludes = typeof selector == 'string' ? this.filter(selector) :\r\n                        (isArrayLike(selector) && isFunction(selector.item)) ? slice.call(selector) : $(selector)\r\n                    this.forEach(function(el) {\r\n                        if (excludes.indexOf(el) < 0) nodes.push(el)\r\n                    })\r\n                }\r\n                return $(nodes)\r\n            },\r\n\r\n            has: function(selector) {\r\n                return this.filter(function() {\r\n                    return isObject(selector) ?\r\n                        noder.contains(this, selector) :\r\n                        $(this).find(selector).size()\r\n                })\r\n            },\r\n\r\n            eq: function(idx) {\r\n                return idx === -1 ? this.slice(idx) : this.slice(idx, +idx + 1);\r\n            },\r\n\r\n            first: function() {\r\n                return this.eq(0);\r\n            },\r\n\r\n            last: function() {\r\n                return this.eq(-1);\r\n            },\r\n\r\n            find: wrapper_selector(finder.descendants, finder),\r\n\r\n            closest: wrapper_selector(finder.closest, finder),\r\n            /*\r\n                        closest: function(selector, context) {\r\n                            var node = this[0],\r\n                                collection = false\r\n                            if (typeof selector == 'object') collection = $(selector)\r\n                            while (node && !(collection ? collection.indexOf(node) >= 0 : finder.matches(node, selector)))\r\n                                node = node !== context && !isDocument(node) && node.parentNode\r\n                            return $(node)\r\n                        },\r\n            */\r\n\r\n\r\n            parents: wrapper_selector(finder.ancestors, finder),\r\n\r\n            parentsUntil: wrapper_selector_until(finder.ancestors, finder),\r\n\r\n\r\n            parent: wrapper_selector(finder.parent, finder),\r\n\r\n            children: wrapper_selector(finder.children, finder),\r\n\r\n            contents: wrapper_map(noder.contents, noder),\r\n\r\n            empty: wrapper_every_act(noder.empty, noder),\r\n\r\n            // `pluck` is borrowed from Prototype.js\r\n            pluck: function(property) {\r\n                return langx.map(this, function(el) {\r\n                    return el[property]\r\n                })\r\n            },\r\n\r\n            pushStack : function(elms) {\r\n                var ret = $(elms);\r\n                ret.prevObject = this;\r\n                return ret;\r\n            },\r\n            \r\n            show: wrapper_every_act(fx.show, fx),\r\n\r\n            replaceWith: function(newContent) {\r\n                return this.before(newContent).remove();\r\n            },\r\n\r\n            wrap: function(structure) {\r\n                var func = isFunction(structure)\r\n                if (this[0] && !func)\r\n                    var dom = $(structure).get(0),\r\n                        clone = dom.parentNode || this.length > 1\r\n\r\n                return this.each(function(index) {\r\n                    $(this).wrapAll(\r\n                        func ? structure.call(this, index) :\r\n                        clone ? dom.cloneNode(true) : dom\r\n                    )\r\n                })\r\n            },\r\n\r\n            wrapAll: function(wrappingElement) {\r\n                if (this[0]) {\r\n                    $(this[0]).before(wrappingElement = $(wrappingElement));\r\n                    var children;\r\n                    // drill down to the inmost element\r\n                    while ((children = wrappingElement.children()).length) {\r\n                        wrappingElement = children.first();\r\n                    }\r\n                    $(wrappingElement).append(this);\r\n                }\r\n                return this\r\n            },\r\n\r\n            wrapInner: function(wrappingElement) {\r\n                var func = isFunction(wrappingElement)\r\n                return this.each(function(index) {\r\n                    var self = $(this),\r\n                        contents = self.contents(),\r\n                        dom = func ? wrappingElement.call(this, index) : wrappingElement\r\n                    contents.length ? contents.wrapAll(dom) : self.append(dom)\r\n                })\r\n            },\r\n\r\n            unwrap: function(selector) {\r\n                if (this.parent().children().length === 0) {\r\n                    // remove dom without text\r\n                    this.parent(selector).not(\"body\").each(function() {\r\n                        $(this).replaceWith(document.createTextNode(this.childNodes[0].textContent));\r\n                    });\r\n                } else {\r\n                    this.parent().each(function() {\r\n                        $(this).replaceWith($(this).children())\r\n                    });\r\n                }\r\n                return this\r\n            },\r\n\r\n            clone: function() {\r\n                return this.map(function() {\r\n                    return this.cloneNode(true)\r\n                })\r\n            },\r\n\r\n            hide: wrapper_every_act(fx.hide, fx),\r\n\r\n            toggle: function(setting) {\r\n                return this.each(function() {\r\n                    var el = $(this);\r\n                    (setting === undefined ? el.css(\"display\") == \"none\" : setting) ? el.show(): el.hide()\r\n                })\r\n            },\r\n\r\n            prev: function(selector) {\r\n                return $(this.pluck('previousElementSibling')).filter(selector || '*')\r\n            },\r\n\r\n            prevAll: wrapper_selector(finder.previousSibling, finder),\r\n\r\n            next: function(selector) {\r\n                return $(this.pluck('nextElementSibling')).filter(selector || '*')\r\n            },\r\n\r\n            nextAll: wrapper_selector(finder.nextSiblings, finder),\r\n\r\n            siblings: wrapper_selector(finder.siblings, finder),\r\n\r\n            html: wrapper_value(noder.html, noder, noder.html),\r\n\r\n            text: wrapper_value(datax.text, datax, datax.text),\r\n\r\n            attr: wrapper_name_value(datax.attr, datax, datax.attr),\r\n\r\n            removeAttr: wrapper_every_act(datax.removeAttr, datax),\r\n\r\n            prop: wrapper_name_value(datax.prop, datax, datax.prop),\r\n\r\n            removeProp: wrapper_every_act(datax.removeProp, datax),\r\n\r\n            data: wrapper_name_value(datax.data, datax, datax.data),\r\n\r\n            removeData: wrapper_every_act(datax.removeData, datax),\r\n\r\n            val: wrapper_value(datax.val, datax, datax.val),\r\n\r\n            offset: wrapper_value(geom.pagePosition, geom, geom.pagePosition),\r\n\r\n            style: wrapper_name_value(styler.css, styler),\r\n\r\n            css: wrapper_name_value(styler.css, styler),\r\n\r\n            index: function(elem) {\r\n                if (elem) {\r\n                    return this.indexOf($(elem)[0]);\r\n                } else {\r\n                    return this.parent().children().indexOf(this[0]);\r\n                }\r\n            },\r\n\r\n            //hasClass(name)\r\n            hasClass: wrapper_some_chk(styler.hasClass, styler),\r\n\r\n            //addClass(name)\r\n            addClass: wrapper_every_act_firstArgFunc(styler.addClass, styler, styler.className),\r\n\r\n            //removeClass(name)\r\n            removeClass: wrapper_every_act_firstArgFunc(styler.removeClass, styler, styler.className),\r\n\r\n            //toogleClass(name,when)\r\n            toggleClass: wrapper_every_act_firstArgFunc(styler.toggleClass, styler, styler.className),\r\n\r\n            scrollTop: wrapper_value(geom.scrollTop, geom),\r\n\r\n            scrollLeft: wrapper_value(geom.scrollLeft, geom),\r\n\r\n            position: function() {\r\n                if (!this.length) return\r\n\r\n                var elem = this[0];\r\n\r\n                return geom.relativePosition(elem);\r\n            },\r\n\r\n            offsetParent: wrapper_map(geom.offsetParent, geom)\r\n        });\r\n\r\n        // for now\r\n        $.fn.detach = $.fn.remove;\r\n\r\n        $.fn.hover = function(fnOver, fnOut) {\r\n            return this.mouseenter(fnOver).mouseleave(fnOut || fnOver);\r\n        };\r\n\r\n        $.fn.size = wrapper_value(geom.size, geom);\r\n\r\n        $.fn.width = wrapper_value(geom.width, geom, geom.width);\r\n\r\n        $.fn.height = wrapper_value(geom.height, geom, geom.height);\r\n\r\n        $.fn.clientSize = wrapper_value(geom.clientSize, geom.clientSize);\r\n\r\n        ['width', 'height'].forEach(function(dimension) {\r\n            var offset, Dimension = dimension.replace(/./, function(m) {\r\n                return m[0].toUpperCase()\r\n            });\r\n\r\n            $.fn['outer' + Dimension] = function(margin, value) {\r\n                if (arguments.length) {\r\n                    if (typeof margin !== 'boolean') {\r\n                        value = margin;\r\n                        margin = false;\r\n                    }\r\n                } else {\r\n                    margin = false;\r\n                    value = undefined;\r\n                }\r\n\r\n                if (value === undefined) {\r\n                    var el = this[0];\r\n                    if (!el) {\r\n                        return undefined;\r\n                    }\r\n                    var cb = geom.size(el);\r\n                    if (margin) {\r\n                        var me = geom.marginExtents(el);\r\n                        cb.width = cb.width + me.left + me.right;\r\n                        cb.height = cb.height + me.top + me.bottom;\r\n                    }\r\n                    return dimension === \"width\" ? cb.width : cb.height;\r\n                } else {\r\n                    return this.each(function(idx, el) {\r\n                        var mb = {};\r\n                        var me = geom.marginExtents(el);\r\n                        if (dimension === \"width\") {\r\n                            mb.width = value;\r\n                            if (margin) {\r\n                                mb.width = mb.width - me.left - me.right\r\n                            }\r\n                        } else {\r\n                            mb.height = value;\r\n                            if (margin) {\r\n                                mb.height = mb.height - me.top - me.bottom;\r\n                            }\r\n                        }\r\n                        geom.size(el, mb);\r\n                    })\r\n\r\n                }\r\n            };\r\n        })\r\n\r\n        $.fn.innerWidth = wrapper_value(geom.clientWidth, geom, geom.clientWidth);\r\n\r\n        $.fn.innerHeight = wrapper_value(geom.clientHeight, geom, geom.clientHeight);\r\n\r\n\r\n        var traverseNode = noder.traverse;\r\n\r\n        function wrapper_node_operation(func, context, oldValueFunc) {\r\n            return function(html) {\r\n                var argType, nodes = langx.map(arguments, function(arg) {\r\n                    argType = type(arg)\r\n                    return argType == \"object\" || argType == \"array\" || arg == null ?\r\n                        arg : noder.createFragment(arg)\r\n                });\r\n                if (nodes.length < 1) {\r\n                    return this\r\n                }\r\n                this.each(function(idx) {\r\n                    func.apply(context, [this, nodes, idx > 0]);\r\n                });\r\n                return this;\r\n            }\r\n        }\r\n\r\n\r\n        $.fn.after = wrapper_node_operation(noder.after, noder);\r\n\r\n        $.fn.prepend = wrapper_node_operation(noder.prepend, noder);\r\n\r\n        $.fn.before = wrapper_node_operation(noder.before, noder);\r\n\r\n        $.fn.append = wrapper_node_operation(noder.append, noder);\r\n\r\n\r\n        langx.each( {\r\n            appendTo: \"append\",\r\n            prependTo: \"prepend\",\r\n            insertBefore: \"before\",\r\n            insertAfter: \"after\",\r\n            replaceAll: \"replaceWith\"\r\n        }, function( name, original ) {\r\n            $.fn[ name ] = function( selector ) {\r\n                var elems,\r\n                    ret = [],\r\n                    insert = $( selector ),\r\n                    last = insert.length - 1,\r\n                    i = 0;\r\n\r\n                for ( ; i <= last; i++ ) {\r\n                    elems = i === last ? this : this.clone( true );\r\n                    $( insert[ i ] )[ original ]( elems );\r\n\r\n                    // Support: Android <=4.0 only, PhantomJS 1 only\r\n                    // .get() because push.apply(_, arraylike) throws on ancient WebKit\r\n                    push.apply( ret, elems.get() );\r\n                }\r\n\r\n                return this.pushStack( ret );\r\n            };\r\n        } );\r\n\r\n/*\r\n        $.fn.insertAfter = function(html) {\r\n            $(html).after(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.insertBefore = function(html) {\r\n            $(html).before(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.appendTo = function(html) {\r\n            $(html).append(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.prependTo = function(html) {\r\n            $(html).prepend(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.replaceAll = function(selector) {\r\n            $(selector).replaceWith(this);\r\n            return this;\r\n        };\r\n*/\r\n        return $;\r\n    })();\r\n\r\n    (function($) {\r\n        $.fn.on = wrapper_every_act(eventer.on, eventer);\r\n\r\n        $.fn.off = wrapper_every_act(eventer.off, eventer);\r\n\r\n        $.fn.trigger = wrapper_every_act(eventer.trigger, eventer);\r\n\r\n\r\n        ('focusin focusout focus blur load resize scroll unload click dblclick ' +\r\n            'mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave ' +\r\n            'change select keydown keypress keyup error').split(' ').forEach(function(event) {\r\n            $.fn[event] = function(data, callback) {\r\n                return (0 in arguments) ?\r\n                    this.on(event, data, callback) :\r\n                    this.trigger(event)\r\n            }\r\n        });\r\n\r\n\r\n        $.fn.one = function(event, selector, data, callback) {\r\n            if (!langx.isString(selector) && !langx.isFunction(callback)) {\r\n                callback = data;\r\n                data = selector;\r\n                selector = null;\r\n            }\r\n\r\n            if (langx.isFunction(data)) {\r\n                callback = data;\r\n                data = null;\r\n            }\r\n\r\n            return this.on(event, selector, data, callback, 1)\r\n        };\r\n\r\n        $.fn.animate = wrapper_every_act(fx.animate, fx);\r\n\r\n        $.fn.show = wrapper_every_act(fx.show, fx);\r\n        $.fn.hide = wrapper_every_act(fx.hide, fx);\r\n        $.fn.toogle = wrapper_every_act(fx.toogle, fx);\r\n        $.fn.fadeTo = wrapper_every_act(fx.fadeTo, fx);\r\n        $.fn.fadeIn = wrapper_every_act(fx.fadeIn, fx);\r\n        $.fn.fadeOut = wrapper_every_act(fx.fadeOut, fx);\r\n        $.fn.fadeToggle = wrapper_every_act(fx.fadeToggle, fx);\r\n\r\n        $.fn.slideDown = wrapper_every_act(fx.slideDown, fx);\r\n        $.fn.slideToggle = wrapper_every_act(fx.slideToggle, fx);\r\n        $.fn.slideUp = wrapper_every_act(fx.slideUp, fx);\r\n    })(query);\r\n\r\n\r\n    (function($) {\r\n        $.fn.end = function() {\r\n            return this.prevObject || $()\r\n        }\r\n\r\n        $.fn.andSelf = function() {\r\n            return this.add(this.prevObject || $())\r\n        }\r\n\r\n        $.fn.addBack = function(selector) {\r\n            if (this.prevObject) {\r\n                if (selector) {\r\n                    return this.add(this.prevObject.filter(selector));\r\n                } else {\r\n                    return this.add(this.prevObject);\r\n                }\r\n            } else {\r\n                return this;\r\n            }\r\n        }\r\n\r\n        'filter,add,not,eq,first,last,find,closest,parents,parent,children,siblings'.split(',').forEach(function(property) {\r\n            var fn = $.fn[property]\r\n            $.fn[property] = function() {\r\n                var ret = fn.apply(this, arguments)\r\n                ret.prevObject = this\r\n                return ret\r\n            }\r\n        })\r\n    })(query);\r\n\r\n\r\n    (function($) {\r\n        $.fn.query = $.fn.find;\r\n\r\n        $.fn.place = function(refNode, position) {\r\n            // summary:\r\n            //      places elements of this node list relative to the first element matched\r\n            //      by queryOrNode. Returns the original NodeList. See: `dojo/dom-construct.place`\r\n            // queryOrNode:\r\n            //      may be a string representing any valid CSS3 selector or a DOM node.\r\n            //      In the selector case, only the first matching element will be used\r\n            //      for relative positioning.\r\n            // position:\r\n            //      can be one of:\r\n            //\r\n            //      -   \"last\" (default)\r\n            //      -   \"first\"\r\n            //      -   \"before\"\r\n            //      -   \"after\"\r\n            //      -   \"only\"\r\n            //      -   \"replace\"\r\n            //\r\n            //      or an offset in the childNodes\r\n            if (langx.isString(refNode)) {\r\n                refNode = finder.descendant(refNode);\r\n            } else if (isQ(refNode)) {\r\n                refNode = refNode[0];\r\n            }\r\n            return this.each(function(i, node) {\r\n                switch (position) {\r\n                    case \"before\":\r\n                        noder.before(refNode, node);\r\n                        break;\r\n                    case \"after\":\r\n                        noder.after(refNode, node);\r\n                        break;\r\n                    case \"replace\":\r\n                        noder.replace(refNode, node);\r\n                        break;\r\n                    case \"only\":\r\n                        noder.empty(refNode);\r\n                        noder.append(refNode, node);\r\n                        break;\r\n                    case \"first\":\r\n                        noder.prepend(refNode, node);\r\n                        break;\r\n                        // else fallthrough...\r\n                    default: // aka: last\r\n                        noder.append(refNode, node);\r\n                }\r\n            });\r\n        };\r\n\r\n        $.fn.addContent = function(content, position) {\r\n            if (content.template) {\r\n                content = langx.substitute(content.template, content);\r\n            }\r\n            return this.append(content);\r\n        };\r\n\r\n        $.fn.replaceClass = function(newClass, oldClass) {\r\n            this.removeClass(oldClass);\r\n            this.addClass(newClass);\r\n            return this;\r\n        };\r\n\r\n    })(query);\r\n\r\n\r\n    return skylark.query = query;\r\n\r\n});\ndefine('skylark-utils-interact/resizer',[\r\n    \"./interact\",\r\n    \"skylark-utils/langx\",\r\n    \"skylark-utils/noder\",\r\n    \"skylark-utils/datax\",\r\n    \"skylark-utils/finder\",\r\n    \"skylark-utils/geom\",\r\n    \"skylark-utils/eventer\",\r\n    \"./mover\",\r\n    \"skylark-utils/styler\",\r\n    \"skylark-utils/query\"\r\n],function(interact, langx,noder,datax,finder,geom,eventer,mover,styler,$){\r\n    var on = eventer.on,\r\n        off = eventer.off,\r\n        attr = datax.attr,\r\n        removeAttr = datax.removeAttr,\r\n        offset = geom.pagePosition,\r\n        addClass = styler.addClass,\r\n        height = geom.height,\r\n        some = Array.prototype.some,\r\n        map = Array.prototype.map;\r\n\r\n\r\n\r\n    function resizable(elm, params) {\r\n\r\n        var defaultOptions = {\r\n            // prevents browser level actions like forward back gestures\r\n            touchActionNone: true,\r\n\r\n            direction : {\r\n                top: false, \r\n                left: false, \r\n                right: true, \r\n                bottom: true\r\n            },\r\n            // selector for handle that starts dragging\r\n            handle : {\r\n                border : true,\r\n                grabber: \"\",\r\n                selector: true\r\n            }\r\n        };\r\n\r\n        params = params || {};\r\n        var handle = params.handle || {},\r\n            handleEl,\r\n            direction = params.direction || defaultOptions.direction,\r\n            startSize,\r\n            currentSize,\r\n            startedCallback = params.started,\r\n            movingCallback = params.moving,\r\n            stoppedCallback = params.stopped;\r\n\r\n        if (langx.isString(handle)) {\r\n            handleEl = finder.find(elm,handle);\r\n        } else if (langx.isHtmlNode(handle)) {\r\n            handleEl = handle;\r\n        }\r\n        mover.movable(handleEl,{\r\n            auto : false,\r\n            started : function(e) {\r\n                startSize = geom.size(elm);\r\n                if (startedCallback) {\r\n                    startedCallback(e);\r\n                }\r\n            },\r\n            moving : function(e) {\r\n                currentSize = {\r\n                };\r\n                if (direction.left || direction.right) {\r\n                    currentSize.width = startSize.width + e.deltaX;\r\n                } else {\r\n                    currentSize.width = startSize.width;\r\n                }\r\n\r\n                if (direction.top || direction.bottom) {\r\n                    currentSize.height = startSize.height + e.deltaY;\r\n                } else {\r\n                    currentSize.height = startSize.height;\r\n                }\r\n\r\n                geom.size(elm,currentSize);\r\n\r\n                if (movingCallback) {\r\n                    movingCallback(e);\r\n                }\r\n            },\r\n            stopped: function(e) {\r\n                if (stoppedCallback) {\r\n                    stoppedCallback(e);\r\n                }                \r\n            }\r\n        });\r\n        \r\n        return {\r\n            // destroys the dragger.\r\n            remove: function() {\r\n                eventer.off(handleEl);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    $.fn.resizable = function(params) {\r\n        this.each(function(el){\r\n            resizable(this,params);\r\n        });\r\n    };\r\n\r\n    function resizer(){\r\n      return resizer;\r\n    }\r\n\r\n    langx.mixin(resizer, {\r\n        resizable: resizable\r\n    });\r\n\r\n    return interact.resizer = resizer;\r\n});\r\n\ndefine('skylark-utils-interact/selector',[\r\n    \"./interact\",\r\n    \"skylark-utils/langx\",\r\n    \"skylark-utils/noder\",\r\n    \"skylark-utils/datax\",\r\n    \"skylark-utils/geom\",\r\n    \"skylark-utils/eventer\",\r\n    \"./mover\",\r\n    \"skylark-utils/styler\",\r\n    \"skylark-utils/query\"\r\n],function(interact, langx,noder,datax,geom,eventer,mover,styler,$){\r\n    var on = eventer.on,\r\n        off = eventer.off,\r\n        attr = datax.attr,\r\n        removeAttr = datax.removeAttr,\r\n        offset = geom.pagePosition,\r\n        addClass = styler.addClass,\r\n        height = geom.height,\r\n        some = Array.prototype.some,\r\n        map = Array.prototype.map;\r\n\r\n\r\n\r\n    var options = {\r\n        // Function which returns custom X and Y coordinates of the mouse\r\n            mousePosFetcher: null,\r\n            // Indicates custom target updating strategy\r\n            updateTarget: null,\r\n            // Function which gets HTMLElement as an arg and returns it relative position\r\n            ratioDefault: 0,\r\n            posFetcher: null,\r\n\r\n            started: null,\r\n            moving: null,\r\n            ended: null,\r\n\r\n            // Resize unit step\r\n            step: 1,\r\n\r\n            // Minimum dimension\r\n            minDim: 32,\r\n\r\n            // Maximum dimension\r\n            maxDim: '',\r\n\r\n            // Unit used for height resizing\r\n            unitHeight: 'px',\r\n\r\n            // Unit used for width resizing\r\n            unitWidth: 'px',\r\n\r\n            // The key used for height resizing\r\n            keyHeight: 'height',\r\n\r\n            // The key used for width resizing\r\n            keyWidth: 'width',\r\n\r\n            // If true, will override unitHeight and unitWidth, on start, with units\r\n            // from the current focused element (currently used only in SelectComponent)\r\n            currentUnit: 1,\r\n\r\n            // Handlers\r\n            direction : {\r\n                tl: 1, // Top left\r\n                tc: 1, // Top center\r\n                tr: 1, // Top right\r\n                cl: 1, // Center left\r\n                cr: 1, // Center right\r\n                bl: 1, // Bottom left\r\n                bc: 1, // Bottom center\r\n                br: 1 // Bottom right,\r\n            },\r\n            handler : {\r\n                border : true,\r\n                grabber: \"\",\r\n                selector: true\r\n            }\r\n        } ,\r\n\r\n\r\n        currentPos,\r\n        startRect,\r\n        currentRect,\r\n        delta;\r\n\r\n    var classPrefix = \"\",\r\n        container,\r\n        handlers,\r\n        target,\r\n        direction ={\r\n            left : true,\r\n            right : true,\r\n            top : true,\r\n            bottom : true\r\n        },\r\n        startSize,\r\n        currentSize,\r\n\r\n        startedCallback,\r\n        resizingCallback,\r\n        stoppedCallback;\r\n\r\n\r\n\r\n    function init (options) {\r\n        options = options || {};\r\n        classPrefix = options.classPrefix || \"\";\r\n\r\n        var appendTo = options.appendTo || document.body;\r\n        container = noder.createElement('div',{\r\n            \"class\" : classPrefix + 'resizer-c'\r\n        });\r\n        noder.append(appendTo,container);\r\n\r\n\r\n        // Create handlers\r\n        handlers = {};\r\n        ['tl', 'tc', 'tr', 'cl', 'cr', 'bl', 'bc', 'br'].forEach(function(n) {\r\n            return handlers[n] = noder.createElement(\"i\",{\r\n                    \"class\" : classPrefix + 'resizer-h ' + classPrefix + 'resizer-h-' + n,\r\n                    \"data-resize-handler\" : n\r\n                });\r\n        });\r\n\r\n        for (var n in handlers) {\r\n            var handler = handlers[n];\r\n            noder.append(container,handler);\r\n            mover.movable(handler,{\r\n                auto : false,\r\n                started : started,\r\n                moving : resizing,\r\n                stopped : stopped\r\n            })\r\n        }\r\n    }\r\n\r\n    function started(e) {\r\n        var handler = e.target;\r\n        startSize = geom.size(target);\r\n        if (startedCallback) {\r\n            startedCallback(e);\r\n        }\r\n    }\r\n\r\n    function resizing(e) {\r\n        currentSize = {};\r\n\r\n        if (direction.left || direction.right) {\r\n            currentSize.width = startSize.width + e.deltaX;\r\n        } else {\r\n            currentSize.width = startSize.width;\r\n        }\r\n\r\n        if (direction.top || direction.bottom) {\r\n            currentSize.height = startSize.height + e.deltaY;\r\n        } else {\r\n            currentSize.height = startSize.height;\r\n        }\r\n\r\n        geom.size(target,currentSize);\r\n        geom.pageRect(container,geom.pageRect(target));\r\n\r\n        if (resizingCallback) {\r\n            resizingCallback(e);\r\n        }\r\n\r\n    }\r\n\r\n    function stopped(e) {\r\n        if (stoppedCallback) {\r\n            stoppedCallback(e);\r\n        }\r\n\r\n    }\r\n\r\n    function select(el,options) {\r\n        // Avoid focusing on already focused element\r\n        if (el && el === target) {\r\n          return;\r\n        } \r\n\r\n        target = el; \r\n        startDim = rectDim = startPos = null;\r\n\r\n        geom.pageRect(container,geom.pageRect(target));\r\n        styler.show(container);\r\n\r\n    }\r\n\r\n\r\n    function unselect(e) {\r\n        if (container) {\r\n            styler.hide(container);\r\n        }\r\n        target = null;\r\n    }\r\n\r\n    function isHandler(el) {\r\n        if (handlers) {\r\n            for (var n in handlers) {\r\n              if (handlers[n] === el) return true;\r\n            }                \r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n    function docs(el) {\r\n        return [noder.ownerDoc(el), noder.doc()];\r\n    }\r\n\r\n    function selector(){\r\n      return selector;\r\n    }\r\n\r\n    langx.mixin(selector, {\r\n        init : init,\r\n\r\n        select : select,\r\n\r\n        unselect : unselect\r\n\r\n    });\r\n\r\n    return interact.selector = selector;\r\n});\r\n\ndefine('skylark-utils/dnd',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./noder\",\r\n    \"./datax\",\r\n    \"./finder\",\r\n    \"./geom\",\r\n    \"./eventer\",\r\n    \"./styler\"\r\n],function(skylark, langx,noder,datax,finder,geom,eventer,styler){\r\n    var on = eventer.on,\r\n        off = eventer.off,\r\n        attr = datax.attr,\r\n        removeAttr = datax.removeAttr,\r\n        offset = geom.pagePosition,\r\n        addClass = styler.addClass,\r\n        height = geom.height;\r\n\r\n\r\n    var DndManager = langx.Evented.inherit({\r\n      klassName : \"DndManager\",\r\n\r\n      init : function() {\r\n\r\n      },\r\n\r\n      prepare : function(draggable) {\r\n          var e = eventer.create(\"preparing\",{\r\n             dragSource : draggable.dragSource,\r\n             dragHandle : draggable.dragHandle\r\n          });\r\n          draggable.trigger(e);\r\n          draggable.dragSource = e.dragSource;\r\n      },\r\n\r\n      start : function(draggable,event) {\r\n\r\n        var p = geom.pagePosition(draggable.dragSource);\r\n        this.draggingOffsetX = parseInt(event.pageX - p.left);\r\n        this.draggingOffsetY = parseInt(event.pageY - p.top)\r\n\r\n        var e = eventer.create(\"started\",{\r\n          elm : draggable.elm,\r\n          dragSource : draggable.dragSource,\r\n          dragHandle : draggable.dragHandle,\r\n          ghost : null,\r\n\r\n          transfer : {\r\n          }\r\n        });\r\n\r\n        draggable.trigger(e);\r\n\r\n\r\n        this.dragging = draggable;\r\n\r\n        if (draggable.draggingClass) {\r\n          styler.addClass(draggable.dragSource,draggable.draggingClass);\r\n        }\r\n\r\n        this.draggingGhost = e.ghost;\r\n        if (!this.draggingGhost) {\r\n          this.draggingGhost = draggable.elm;\r\n        }\r\n\r\n        this.draggingTransfer = e.transfer;\r\n        if (this.draggingTransfer) {\r\n\r\n            langx.each(this.draggingTransfer,function(key,value){\r\n                event.dataTransfer.setData(key, value);\r\n            });\r\n        }\r\n        \r\n        event.dataTransfer.setDragImage(this.draggingGhost, this.draggingOffsetX, this.draggingOffsetY);\r\n\r\n        event.dataTransfer.effectAllowed = \"copyMove\";\r\n\r\n        var e1 = eventer.create(\"dndStarted\",{\r\n          elm : e.elm,\r\n          dragSource : e.dragSource,\r\n          dragHandle : e.dragHandle,\r\n          ghost : e.ghost,\r\n          transfer : e.transfer\r\n        });\r\n\r\n        this.trigger(e1);\r\n      },\r\n\r\n      over : function() {\r\n\r\n      },\r\n\r\n      end : function(dropped) {\r\n        var dragging = this.dragging;\r\n        if (dragging) {\r\n          if (dragging.draggingClass) {\r\n            styler.removeClass(dragging.dragSource,dragging.draggingClass);\r\n          }\r\n        }\r\n\r\n        var e = eventer.create(\"dndEnded\",{\r\n        });        \r\n        this.trigger(e);\r\n\r\n\r\n        this.dragging = null;\r\n        this.draggingTransfer = null;\r\n        this.draggingGhost = null;\r\n        this.draggingOffsetX = null;\r\n        this.draggingOffsetY = null;\r\n      }\r\n    });\r\n\r\n    var manager = new DndManager(),\r\n        draggingHeight,\r\n        placeholders = [];\r\n\r\n\r\n\r\n    var Draggable = langx.Evented.inherit({\r\n      klassName : \"Draggable\",\r\n\r\n      init : function (elm,params) {\r\n        var self = this;\r\n\r\n        self.elm = elm;\r\n        self.draggingClass = params.draggingClass || \"dragging\",\r\n        self.params = langx.clone(params);\r\n\r\n        [\"preparing\",\"started\", \"ended\", \"moving\"].forEach(function(eventName) {\r\n            if (langx.isFunction(params[eventName])) {\r\n                self.on(eventName, params[eventName]);\r\n            }\r\n        });\r\n\r\n\r\n        eventer.on(elm,{\r\n          \"mousedown\" : function(e) {\r\n            var params = self.params;\r\n            if (params.handle) {\r\n              self.dragHandle = finder.closest(e.target,params.handle);\r\n              if (!self.dragHandle) {\r\n                return;\r\n              }\r\n            }\r\n            if (params.source) {\r\n                self.dragSource = finder.closest(e.target,params.source);\r\n            } else {\r\n                self.dragSource = self.elm;\r\n            }\r\n            manager.prepare(self);\r\n            if (self.dragSource) {\r\n              datax.attr(self.dragSource, \"draggable\", 'true');\r\n            } \r\n          },\r\n\r\n          \"mouseup\" :   function(e) {\r\n            if (self.dragSource) {\r\n              //datax.attr(self.dragSource, \"draggable\", 'false');\r\n              self.dragSource = null;\r\n              self.dragHandle = null;\r\n            }\r\n          },\r\n\r\n          \"dragstart\":  function(e) {\r\n            datax.attr(self.dragSource, \"draggable\", 'false');\r\n            manager.start(self, e);\r\n          },\r\n\r\n          \"dragend\":   function(e){\r\n            eventer.stop(e);\r\n\r\n            if (!manager.dragging) {\r\n              return;\r\n            }\r\n\r\n            manager.end(false);\r\n          }\r\n        });\r\n\r\n      }\r\n\r\n    });\r\n\r\n\r\n    var Droppable = langx.Evented.inherit({\r\n      klassName : \"Droppable\",\r\n\r\n      init : function(elm,params) {\r\n        var self = this,\r\n            draggingClass = params.draggingClass || \"dragging\",\r\n            hoverClass,\r\n            activeClass,\r\n            acceptable = true;\r\n\r\n        self.elm = elm;\r\n        self._params = params;\r\n\r\n        [\"started\",\"entered\", \"leaved\", \"dropped\",\"overing\"].forEach(function(eventName) {\r\n            if (langx.isFunction(params[eventName])) {\r\n                self.on(eventName, params[eventName]);\r\n            }\r\n        });\r\n\r\n        eventer.on(elm,{\r\n          \"dragover\" : function(e) {\r\n            e.stopPropagation()\r\n\r\n            if (!acceptable) {\r\n              return\r\n            }\r\n\r\n            var e2 = eventer.create(\"overing\",{\r\n                overElm : e.target,\r\n                transfer : manager.draggingTransfer,\r\n                acceptable : true\r\n            });\r\n            self.trigger(e2);\r\n\r\n            if (e2.acceptable) {\r\n              e.preventDefault() // allow drop\r\n\r\n              e.dataTransfer.dropEffect = \"copyMove\";\r\n            }\r\n\r\n          },\r\n\r\n          \"dragenter\" :   function(e) {\r\n            var params = self._params,\r\n                elm = self.elm;\r\n\r\n            var e2 = eventer.create(\"entered\",{\r\n                transfer : manager.draggingTransfer\r\n            });\r\n\r\n            self.trigger(e2);\r\n\r\n            e.stopPropagation()\r\n\r\n            if (hoverClass && acceptable) {\r\n              styler.addClass(elm,hoverClass)\r\n            }\r\n          },\r\n\r\n          \"dragleave\":  function(e) {\r\n            var params = self._params,\r\n                elm = self.elm;\r\n            if (!acceptable) return false\r\n            \r\n            var e2 = eventer.create(\"leaved\",{\r\n                transfer : manager.draggingTransfer\r\n            });\r\n            \r\n            self.trigger(e2);\r\n\r\n            e.stopPropagation()\r\n\r\n            if (hoverClass && acceptable) {\r\n              styler.removeClass(elm,hoverClass);\r\n            }\r\n          },\r\n\r\n          \"drop\":   function(e){\r\n            var params = self._params,\r\n                elm = self.elm;\r\n\r\n            eventer.stop(e); // stops the browser from redirecting.\r\n\r\n            if (!manager.dragging) return\r\n\r\n           // manager.dragging.elm.removeClass('dragging');\r\n\r\n            if (hoverClass && acceptable) {\r\n              styler.addClass(elm,hoverClass)\r\n            }\r\n\r\n            var e2 = eventer.create(\"dropped\",{\r\n                transfer : manager.draggingTransfer\r\n            });\r\n\r\n            self.trigger(e2);\r\n\r\n            manager.end(true)\r\n          }\r\n        });\r\n\r\n        manager.on(\"dndStarted\",function(e){\r\n            var e2 = eventer.create(\"started\",{\r\n                transfer : manager.draggingTransfer,\r\n                acceptable : false\r\n            });\r\n\r\n            self.trigger(e2);\r\n\r\n            acceptable = e2.acceptable;\r\n            hoverClass = e2.hoverClass;\r\n            activeClass = e2.activeClass;\r\n\r\n            if (activeClass && acceptable) {\r\n              styler.addClass(elm,activeClass);\r\n            }\r\n\r\n         }).on(\"dndEnded\" , function(e){\r\n            var e2 = eventer.create(\"ended\",{\r\n                transfer : manager.draggingTransfer,\r\n                acceptable : false\r\n            });\r\n\r\n            self.trigger(e2);\r\n\r\n            if (hoverClass && acceptable) {\r\n              styler.removeClass(elm,hoverClass);\r\n            }\r\n            if (activeClass && acceptable) {\r\n              styler.removeClass(elm,activeClass);\r\n            }\r\n\r\n            acceptable = false;\r\n            activeClass = null;\r\n            hoverClass = null;\r\n        });\r\n\r\n      }\r\n    });\r\n\r\n\r\n    function draggable(elm, params) {\r\n      return new Draggable(elm,params);\r\n    }\r\n\r\n    function droppable(elm, params) {\r\n      return new Droppable(elm,params);\r\n    }\r\n\r\n    function dnd(){\r\n      return dnd;\r\n    }\r\n\r\n    langx.mixin(dnd, {\r\n       //params ： {\r\n        //  target : Element or string or function\r\n        //  handle : Element\r\n        //  copy : boolean\r\n        //  placeHolder : \"div\"\r\n        //  hoverClass : \"hover\"\r\n        //  start : function\r\n        //  enter : function\r\n        //  over : function\r\n        //  leave : function\r\n        //  drop : function\r\n        //  end : function\r\n        //\r\n        //\r\n        //}\r\n        draggable   : draggable,\r\n\r\n        //params ： {\r\n        //  accept : string or function\r\n        //  placeHolder\r\n        //\r\n        //\r\n        //\r\n        //}\r\n        droppable : droppable,\r\n\r\n        manager : manager\r\n\r\n\r\n    });\r\n\r\n    return skylark.dnd = dnd;\r\n});\r\n\ndefine('skylark-utils/filer',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./datax\",\r\n    \"./eventer\",\r\n    \"./styler\"\r\n], function(skylark, langx, datax, eventer,styler) {\r\n    var concat = Array.prototype.concat,\r\n        on = eventer.on,\r\n        attr = eventer.attr,\r\n        Deferred = langx.Deferred,\r\n\r\n        fileInput,\r\n        fileInputForm,\r\n        fileSelected,\r\n        maxFileSize = 1 / 0;\r\n\r\n\r\n    var webentry = (function(){\r\n        function  one(entry, path) {\r\n            var d = new Deferred(),\r\n                onError = function(e) {\r\n                    d.reject(e);\r\n                };\r\n\r\n            path = path || '';\r\n            if (entry.isFile) {\r\n                entry.file(function (file) {\r\n                    file.relativePath = path;\r\n                    d.resolve(file);\r\n                }, onError);\r\n            } else if (entry.isDirectory) {\r\n                var dirReader = entry.createReader();\r\n                dirReader.readEntries(function (entries) {\r\n                    all(\r\n                        entries,\r\n                        path + entry.name + '/'\r\n                    ).then(function (files) {\r\n                        d.resolve(files);\r\n                    }).catch(onError);\r\n                }, onError);\r\n            } else {\r\n                // Return an empy list for file system items\r\n                // other than files or directories:\r\n                d.resolve([]);\r\n            }\r\n            return d.promise;\r\n        }\r\n\r\n        function all(entries, path) {\r\n            return Deferred.all(\r\n                langx.map(entries, function (entry) {\r\n                    return one(entry, path);\r\n                })\r\n            ).then(function(){\r\n                return concat.apply([],arguments);\r\n            });\r\n        }\r\n\r\n        return {\r\n            one : one,\r\n            all : all\r\n        };\r\n    })();\r\n\r\n    function dataURLtoBlob(dataurl) {\r\n        var arr = dataurl.split(','), mime = arr[0].match(/:(.*?);/)[1],\r\n            bstr = atob(arr[1]), n = bstr.length, u8arr = new Uint8Array(n);\r\n        while(n--){\r\n            u8arr[n] = bstr.charCodeAt(n);\r\n        }\r\n        return new Blob([u8arr], {type:mime});\r\n    }\r\n\r\n    function dropzone(elm, params) {\r\n        params = params || {};\r\n        var hoverClass = params.hoverClass || \"dropzone\",\r\n            droppedCallback = params.dropped;\r\n\r\n        var enterdCount = 0;\r\n        on(elm, \"dragenter\", function(e) {\r\n            if (e.dataTransfer && e.dataTransfer.types.indexOf(\"Files\")>-1) {\r\n                eventer.stop(e);\r\n                enterdCount ++;\r\n                styler.addClass(elm,hoverClass)\r\n            }\r\n        });\r\n\r\n        on(elm, \"dragover\", function(e) {\r\n            if (e.dataTransfer && e.dataTransfer.types.indexOf(\"Files\")>-1) {\r\n                eventer.stop(e);\r\n            }\r\n        });\r\n\r\n        on(elm, \"dragleave\", function(e) {\r\n            if (e.dataTransfer && e.dataTransfer.types.indexOf(\"Files\")>-1) {\r\n                enterdCount--\r\n                if (enterdCount==0) {\r\n                    styler.removeClass(elm,hoverClass);\r\n                }\r\n            }\r\n        });\r\n\r\n        on(elm, \"drop\", function(e) {\r\n            if (e.dataTransfer && e.dataTransfer.types.indexOf(\"Files\")>-1) {\r\n                styler.removeClass(elm,hoverClass)\r\n                eventer.stop(e);\r\n                if (droppedCallback) {\r\n                    var items = e.dataTransfer.items;\r\n                    if (items && items.length && (items[0].webkitGetAsEntry ||\r\n                        items[0].getAsEntry)) {\r\n                        webentry.all(\r\n                            langx.map(items, function (item) {\r\n                                if (item.webkitGetAsEntry) {\r\n                                    return item.webkitGetAsEntry();\r\n                                }\r\n                                return item.getAsEntry();\r\n                            })\r\n                        ).then(droppedCallback);\r\n                    } else {\r\n                        droppedCallback(e.dataTransfer.files);\r\n                    }                    \r\n                }\r\n            }\r\n        });\r\n\r\n        return this;\r\n    }\r\n\r\n    function pastezone(elm,params) {\r\n        params = params || {};\r\n        var hoverClass = params.hoverClass || \"pastezone\",\r\n            pastedCallback = params.pasted;\r\n\r\n        on(elm, \"paste\", function(e) {\r\n            var items = e.originalEvent && e.originalEvent.clipboardData &&\r\n                    e.originalEvent.clipboardData.items,\r\n                files = [];\r\n            if (items && items.length) {\r\n                langx.each(items, function (index, item) {\r\n                    var file = item.getAsFile && item.getAsFile();\r\n                    if (file) {\r\n                        files.push(file);\r\n                    }\r\n                });\r\n            }\r\n            if (pastedCallback && files.length) {\r\n                pastedCallback(files);\r\n            }\r\n        });\r\n\r\n        return this;\r\n    }\r\n   \r\n    function picker(elm, params) {\r\n        on(elm, \"click\", function(e) {\r\n            e.preventDefault();\r\n            select(params);\r\n        });\r\n        return this;\r\n    }\r\n\r\n    function select(params) {\r\n        params = params || {};\r\n        var directory = params.directory || false, \r\n            multiple = params.multiple || false,\r\n            fileSelected = params.picked;\r\n        if (!fileInput) {\r\n            var input = fileInput = document.createElement(\"input\");\r\n\r\n            function selectFiles(pickedFiles) {\r\n                for (var i = pickedFiles.length; i--;) {\r\n                    if (pickedFiles[i].size > maxFileSize) {\r\n                        pickedFiles.splice(i, 1);\r\n                    }\r\n                }\r\n                fileSelected(pickedFiles);\r\n            }\r\n\r\n            input.type = \"file\";\r\n            input.style.position = \"fixed\",\r\n                input.style.left = 0,\r\n                input.style.top = 0,\r\n                input.style.opacity = .001,\r\n                document.body.appendChild(input);\r\n\r\n            input.onchange = function(e) {\r\n                var entries = e.target.webkitEntries || e.target.entries;\r\n\r\n                if (entries && entries.length) {\r\n                    webentry.all(entries).then(function(files) {\r\n                        selectFiles(files);\r\n                    });\r\n                } else {\r\n                    selectFiles(Array.prototype.slice.call(e.target.files));\r\n                }\r\n                // reset to \"\", so selecting the same file next time still trigger the change handler\r\n                input.value = \"\";\r\n            };\r\n        }\r\n        fileInput.multiple = multiple;\r\n        fileInput.webkitdirectory = directory;\r\n        fileInput.click();\r\n    }\r\n\r\n    function upload(params) {\r\n        var xoptions = langx.mixin({\r\n            contentRange : null, //\r\n\r\n            // The parameter name for the file form data (the request argument name).\r\n            // If undefined or empty, the name property of the file input field is\r\n            // used, or \"files[]\" if the file input name property is also empty,\r\n            // can be a string or an array of strings:\r\n            paramName: undefined,\r\n            // By default, each file of a selection is uploaded using an individual\r\n            // request for XHR type uploads. Set to false to upload file\r\n            // selections in one request each:\r\n            singleFileUploads: true,\r\n            // To limit the number of files uploaded with one XHR request,\r\n            // set the following option to an integer greater than 0:\r\n            limitMultiFileUploads: undefined,\r\n            // The following option limits the number of files uploaded with one\r\n            // XHR request to keep the request size under or equal to the defined\r\n            // limit in bytes:\r\n            limitMultiFileUploadSize: undefined,\r\n            // Multipart file uploads add a number of bytes to each uploaded file,\r\n            // therefore the following option adds an overhead for each file used\r\n            // in the limitMultiFileUploadSize configuration:\r\n            limitMultiFileUploadSizeOverhead: 512,\r\n            // Set the following option to true to issue all file upload requests\r\n            // in a sequential order:\r\n            sequentialUploads: false,\r\n            // To limit the number of concurrent uploads,\r\n            // set the following option to an integer greater than 0:\r\n            limitConcurrentUploads: undefined,\r\n            // By default, XHR file uploads are sent as multipart/form-data.\r\n            // The iframe transport is always using multipart/form-data.\r\n            // Set to false to enable non-multipart XHR uploads:\r\n            multipart: true,\r\n            // To upload large files in smaller chunks, set the following option\r\n            // to a preferred maximum chunk size. If set to 0, null or undefined,\r\n            // or the browser does not support the required Blob API, files will\r\n            // be uploaded as a whole.\r\n            maxChunkSize: undefined,\r\n            // When a non-multipart upload or a chunked multipart upload has been\r\n            // aborted, this option can be used to resume the upload by setting\r\n            // it to the size of the already uploaded bytes. This option is most\r\n            // useful when modifying the options object inside of the \"add\" or\r\n            // \"send\" callbacks, as the options are cloned for each file upload.\r\n            uploadedBytes: undefined,\r\n            // By default, failed (abort or error) file uploads are removed from the\r\n            // global progress calculation. Set the following option to false to\r\n            // prevent recalculating the global progress data:\r\n            recalculateProgress: true,\r\n            // Interval in milliseconds to calculate and trigger progress events:\r\n            progressInterval: 100,\r\n            // Interval in milliseconds to calculate progress bitrate:\r\n            bitrateInterval: 500,\r\n            // By default, uploads are started automatically when adding files:\r\n            autoUpload: true,\r\n\r\n            // Error and info messages:\r\n            messages: {\r\n                uploadedBytes: 'Uploaded bytes exceed file size'\r\n            },\r\n\r\n            // Translation function, gets the message key to be translated\r\n            // and an object with context specific data as arguments:\r\n            i18n: function (message, context) {\r\n                message = this.messages[message] || message.toString();\r\n                if (context) {\r\n                    langx.each(context, function (key, value) {\r\n                        message = message.replace('{' + key + '}', value);\r\n                    });\r\n                }\r\n                return message;\r\n            },\r\n\r\n            // Additional form data to be sent along with the file uploads can be set\r\n            // using this option, which accepts an array of objects with name and\r\n            // value properties, a function returning such an array, a FormData\r\n            // object (for XHR file uploads), or a simple object.\r\n            // The form of the first fileInput is given as parameter to the function:\r\n            formData: function (form) {\r\n                return form.serializeArray();\r\n            },\r\n\r\n            // The add callback is invoked as soon as files are added to the fileupload\r\n            // widget (via file input selection, drag & drop, paste or add API call).\r\n            // If the singleFileUploads option is enabled, this callback will be\r\n            // called once for each file in the selection for XHR file uploads, else\r\n            // once for each file selection.\r\n            //\r\n            // The upload starts when the submit method is invoked on the data parameter.\r\n            // The data object contains a files property holding the added files\r\n            // and allows you to override plugin options as well as define ajax settings.\r\n            //\r\n            // Listeners for this callback can also be bound the following way:\r\n            // .bind('fileuploadadd', func);\r\n            //\r\n            // data.submit() returns a Promise object and allows to attach additional\r\n            // handlers using jQuery's Deferred callbacks:\r\n            // data.submit().done(func).fail(func).always(func);\r\n            add: function (e, data) {\r\n                if (e.isDefaultPrevented()) {\r\n                    return false;\r\n                }\r\n                if (data.autoUpload || (data.autoUpload !== false &&\r\n                        $(this).fileupload('option', 'autoUpload'))) {\r\n                    data.process().done(function () {\r\n                        data.submit();\r\n                    });\r\n                }\r\n            },\r\n\r\n            // Other callbacks:\r\n\r\n            // Callback for the submit event of each file upload:\r\n            // submit: function (e, data) {}, // .bind('fileuploadsubmit', func);\r\n\r\n            // Callback for the start of each file upload request:\r\n            // send: function (e, data) {}, // .bind('fileuploadsend', func);\r\n\r\n            // Callback for successful uploads:\r\n            // done: function (e, data) {}, // .bind('fileuploaddone', func);\r\n\r\n            // Callback for failed (abort or error) uploads:\r\n            // fail: function (e, data) {}, // .bind('fileuploadfail', func);\r\n\r\n            // Callback for completed (success, abort or error) requests:\r\n            // always: function (e, data) {}, // .bind('fileuploadalways', func);\r\n\r\n            // Callback for upload progress events:\r\n            // progress: function (e, data) {}, // .bind('fileuploadprogress', func);\r\n\r\n            // Callback for global upload progress events:\r\n            // progressall: function (e, data) {}, // .bind('fileuploadprogressall', func);\r\n\r\n            // Callback for uploads start, equivalent to the global ajaxStart event:\r\n            // start: function (e) {}, // .bind('fileuploadstart', func);\r\n\r\n            // Callback for uploads stop, equivalent to the global ajaxStop event:\r\n            // stop: function (e) {}, // .bind('fileuploadstop', func);\r\n\r\n            // Callback for change events of the fileInput(s):\r\n            // change: function (e, data) {}, // .bind('fileuploadchange', func);\r\n\r\n            // Callback for paste events to the pasteZone(s):\r\n            // paste: function (e, data) {}, // .bind('fileuploadpaste', func);\r\n\r\n            // Callback for drop events of the dropZone(s):\r\n            // drop: function (e, data) {}, // .bind('fileuploaddrop', func);\r\n\r\n            // Callback for dragover events of the dropZone(s):\r\n            // dragover: function (e) {}, // .bind('fileuploaddragover', func);\r\n\r\n            // Callback for the start of each chunk upload request:\r\n            // chunksend: function (e, data) {}, // .bind('fileuploadchunksend', func);\r\n\r\n            // Callback for successful chunk uploads:\r\n            // chunkdone: function (e, data) {}, // .bind('fileuploadchunkdone', func);\r\n\r\n            // Callback for failed (abort or error) chunk uploads:\r\n            // chunkfail: function (e, data) {}, // .bind('fileuploadchunkfail', func);\r\n\r\n            // Callback for completed (success, abort or error) chunk upload requests:\r\n            // chunkalways: function (e, data) {}, // .bind('fileuploadchunkalways', func);\r\n\r\n            // The plugin options are used as settings object for the ajax calls.\r\n            // The following are jQuery ajax settings required for the file uploads:\r\n            processData: false,\r\n            contentType: false,\r\n            cache: false\r\n        },params);\r\n\r\n        var blobSlice = function () {\r\n            var slice = Blob.prototype.slice || Blob.prototype.webkitSlice || Blob.prototype.mozSlice;\r\n            return slice.apply(this, arguments);\r\n        },ajax = function(data) {\r\n            return langx.Xhr.request(data.url,data);\r\n        };\r\n\r\n        function initDataSettings(o) {\r\n            o.type = o.type || \"POST\";\r\n\r\n            if (!chunkedUpload(o, true)) {\r\n                if (!o.data) {\r\n                    initXHRData(o);\r\n                }\r\n                //initProgressListener(o);\r\n            }\r\n        }\r\n\r\n        function initXHRData(o) {\r\n            var that = this,\r\n                formData,\r\n                file = o.files[0],\r\n                // Ignore non-multipart setting if not supported:\r\n                multipart = o.multipart,\r\n                paramName = langx.type(o.paramName) === 'array' ?\r\n                    o.paramName[0] : o.paramName;\r\n\r\n            o.headers = langx.mixin({}, o.headers);\r\n            if (o.contentRange) {\r\n                o.headers['Content-Range'] = o.contentRange;\r\n            }\r\n            if (!multipart) {\r\n                o.headers['Content-Disposition'] = 'attachment; filename=\"' +\r\n                    encodeURI(file.name) + '\"';\r\n                o.contentType = file.type || 'application/octet-stream';\r\n                o.data = o.blob || file;\r\n            } else {\r\n                formData = new FormData();\r\n                if (o.blob) {\r\n                    formData.append(paramName, o.blob, file.name);\r\n                } else {\r\n                    langx.each(o.files, function (index, file) {\r\n                        // This check allows the tests to run with\r\n                        // dummy objects:\r\n                        formData.append(\r\n                            (langx.type(o.paramName) === 'array' &&\r\n                                o.paramName[index]) || paramName,\r\n                            file,\r\n                            file.uploadName || file.name\r\n                        );\r\n                    });                    \r\n                }                \r\n                o.data = formData;\r\n            }\r\n            // Blob reference is not needed anymore, free memory:\r\n            o.blob = null;\r\n        }\r\n\r\n        function getTotal(files) {\r\n            var total = 0;\r\n            langx.each(files, function (index, file) {\r\n                total += file.size || 1;\r\n            });\r\n            return total;\r\n        }\r\n\r\n        function getUploadedBytes(jqXHR) {\r\n            var range = jqXHR.getResponseHeader('Range'),\r\n                parts = range && range.split('-'),\r\n                upperBytesPos = parts && parts.length > 1 &&\r\n                    parseInt(parts[1], 10);\r\n            return upperBytesPos && upperBytesPos + 1;\r\n        }\r\n\r\n        function initProgressObject(obj) {\r\n            var progress = {\r\n                loaded: 0,\r\n                total: 0,\r\n                bitrate: 0\r\n            };\r\n            if (obj._progress) {\r\n                langx.mixin(obj._progress, progress);\r\n            } else {\r\n                obj._progress = progress;\r\n            }\r\n        }\r\n\r\n        function BitrateTimer() {\r\n            this.timestamp = ((Date.now) ? Date.now() : (new Date()).getTime());\r\n            this.loaded = 0;\r\n            this.bitrate = 0;\r\n            this.getBitrate = function (now, loaded, interval) {\r\n                var timeDiff = now - this.timestamp;\r\n                if (!this.bitrate || !interval || timeDiff > interval) {\r\n                    this.bitrate = (loaded - this.loaded) * (1000 / timeDiff) * 8;\r\n                    this.loaded = loaded;\r\n                    this.timestamp = now;\r\n                }\r\n                return this.bitrate;\r\n            };\r\n        }\r\n\r\n        function chunkedUpload(options, testOnly) {\r\n            options.uploadedBytes = options.uploadedBytes || 0;\r\n            var that = this,\r\n                file = options.files[0],\r\n                fs = file.size,\r\n                ub = options.uploadedBytes,\r\n                mcs = options.maxChunkSize || fs,\r\n                slice = blobSlice,\r\n                dfd = new Deferred(),\r\n                promise = dfd.promise,\r\n                jqXHR,\r\n                upload;\r\n            if (!(slice && (ub || mcs < fs)) ||\r\n                    options.data) {\r\n                return false;\r\n            }\r\n            if (testOnly) {\r\n                return true;\r\n            }\r\n            if (ub >= fs) {\r\n                file.error = options.i18n('uploadedBytes');\r\n                return this._getXHRPromise(\r\n                    false,\r\n                    options.context,\r\n                    [null, 'error', file.error]\r\n                );\r\n            }\r\n            // The chunk upload method:\r\n            upload = function () {\r\n                // Clone the options object for each chunk upload:\r\n                var o = langx.mixin({}, options),\r\n                    currentLoaded = o._progress.loaded;\r\n                o.blob = slice.call(\r\n                    file,\r\n                    ub,\r\n                    ub + mcs,\r\n                    file.type\r\n                );\r\n                // Store the current chunk size, as the blob itself\r\n                // will be dereferenced after data processing:\r\n                o.chunkSize = o.blob.size;\r\n                // Expose the chunk bytes position range:\r\n                o.contentRange = 'bytes ' + ub + '-' +\r\n                    (ub + o.chunkSize - 1) + '/' + fs;\r\n                // Process the upload data (the blob and potential form data):\r\n                initXHRData(o);\r\n                // Add progress listeners for this chunk upload:\r\n                //initProgressListener(o);\r\n                jqXHR = $.ajax(o).done(function (result, textStatus, jqXHR) {\r\n                        ub = getUploadedBytes(jqXHR) ||\r\n                            (ub + o.chunkSize);\r\n                        // Create a progress event if no final progress event\r\n                        // with loaded equaling total has been triggered\r\n                        // for this chunk:\r\n                        if (currentLoaded + o.chunkSize - o._progress.loaded) {\r\n                            dfd.progress({\r\n                                lengthComputable: true,\r\n                                loaded: ub - o.uploadedBytes,\r\n                                total: ub - o.uploadedBytes\r\n                            });\r\n                        }\r\n                        options.uploadedBytes = o.uploadedBytes = ub;\r\n                        o.result = result;\r\n                        o.textStatus = textStatus;\r\n                        o.jqXHR = jqXHR;\r\n                        //that._trigger('chunkdone', null, o);\r\n                        //that._trigger('chunkalways', null, o);\r\n                        if (ub < fs) {\r\n                            // File upload not yet complete,\r\n                            // continue with the next chunk:\r\n                            upload();\r\n                        } else {\r\n                            dfd.resolveWith(\r\n                                o.context,\r\n                                [result, textStatus, jqXHR]\r\n                            );\r\n                        }\r\n                    })\r\n                    .fail(function (jqXHR, textStatus, errorThrown) {\r\n                        o.jqXHR = jqXHR;\r\n                        o.textStatus = textStatus;\r\n                        o.errorThrown = errorThrown;\r\n                        //that._trigger('chunkfail', null, o);\r\n                        //that._trigger('chunkalways', null, o);\r\n                        dfd.rejectWith(\r\n                            o.context,\r\n                            [jqXHR, textStatus, errorThrown]\r\n                        );\r\n                    });\r\n            };\r\n            //this._enhancePromise(promise);\r\n            promise.abort = function () {\r\n                return jqXHR.abort();\r\n            };\r\n            upload();\r\n            return promise;\r\n        }\r\n        \r\n        initDataSettings(xoptions);\r\n\r\n        xoptions._bitrateTimer = new BitrateTimer();\r\n\r\n        var jqXhr = chunkedUpload(xoptions) || ajax(xoptions);\r\n\r\n        jqXhr.options = xoptions;\r\n\r\n        return jqXhr;\r\n    }\r\n\r\n    var filer = function() {\r\n        return filer;\r\n    };\r\n\r\n    langx.mixin(filer , {\r\n        dropzone: dropzone,\r\n\r\n        pastezone: pastezone,\r\n\r\n        picker: picker,\r\n\r\n        select : select,\r\n\r\n        upload  : upload,\r\n\r\n        readFile : function(file,params) {\r\n            params = params || {};\r\n            var d = new Deferred,\r\n                reader = new FileReader();\r\n            \r\n            reader.onload = function(evt) {\r\n                d.resolve(evt.target.result);\r\n            };\r\n            reader.onerror = function(e) {\r\n                var code = e.target.error.code;\r\n                if (code === 2) {\r\n                    alert('please don\\'t open this page using protocol fill:///');\r\n                } else {\r\n                    alert('error code: ' + code);\r\n                }\r\n            };\r\n            \r\n            if (params.asArrayBuffer){\r\n                reader.readAsArrayBuffer(file);\r\n            } else if (params.asDataUrl) {\r\n                reader.readAsDataURL(file);                \r\n            } else if (params.asText) {\r\n                reader.readAsText(file);\r\n            } else {\r\n                reader.readAsArrayBuffer(file);\r\n            }\r\n\r\n            return d.promise;\r\n        },\r\n         \r\n        writeFile : function(data,name) {\r\n            if (window.navigator.msSaveBlob) { \r\n               if (langx.isString(data)) {\r\n                   data = dataURItoBlob(data);\r\n               }\r\n               window.navigator.msSaveBlob(data, name);\r\n            } else {\r\n                var a = document.createElement('a');\r\n                if (data instanceof Blob) {\r\n                    data = langx.URL.createObjectURL(data);\r\n                }\r\n                a.href = data;\r\n                a.setAttribute('download', name || 'noname');\r\n                a.dispatchEvent(new CustomEvent('click'));\r\n            }              \r\n        }\r\n\r\n    });\r\n\r\n    return skylark.filer = filer;\r\n});\r\n\ndefine('skylark-utils/velm',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./datax\",\r\n    \"./dnd\",\r\n    \"./eventer\",\r\n    \"./filer\",\r\n    \"./finder\",\r\n    \"./fx\",\r\n    \"./geom\",\r\n    \"./noder\",\r\n    \"./styler\"\r\n], function(skylark, langx, datax, dnd, eventer, filer, finder, fx, geom, noder, styler) {\r\n    var map = Array.prototype.map,\r\n        slice = Array.prototype.slice;\r\n\r\n    var VisualElement = langx.klass({\r\n        klassName: \"VisualElement\",\r\n\r\n        \"init\": function(node) {\r\n            if (langx.isString(node)) {\r\n                node = document.getElementById(node);\r\n            }\r\n            this.domNode = node;\r\n        }\r\n    });\r\n\r\n    var root = new VisualElement(document.body),\r\n        velm = function(node) {\r\n            if (node) {\r\n                return new VisualElement(node);\r\n            } else {\r\n                return root;\r\n            }\r\n        };\r\n\r\n    function _delegator(fn, context) {\r\n        return function() {\r\n            var self = this,\r\n                elem = self.domNode,\r\n                ret = fn.apply(context, [elem].concat(slice.call(arguments)));\r\n\r\n            if (ret) {\r\n                if (ret === context) {\r\n                    return self;\r\n                } else {\r\n                    if (ret instanceof HTMLElement) {\r\n                        ret = new VisualElement(ret);\r\n                    } else if (langx.isArrayLike(ret)) {\r\n                        ret = map.call(ret, function(el) {\r\n                            if (el instanceof HTMLElement) {\r\n                                return new VisualElement(ret);\r\n                            } else {\r\n                                return el;\r\n                            }\r\n                        })\r\n                    }\r\n                }\r\n            }\r\n            return ret;\r\n        };\r\n    }\r\n\r\n    langx.mixin(velm, {\r\n        batch: function(nodes, action, args) {\r\n            nodes.forEach(function(node) {\r\n                var elm = (node instanceof VisualElement) ? node : velm(node);\r\n                elm[action].apply(elm, args);\r\n            });\r\n\r\n            return this;\r\n        },\r\n\r\n        root: new VisualElement(document.body),\r\n\r\n        VisualElement: VisualElement,\r\n\r\n        partial : function(name,fn) {\r\n            var props = {};\r\n\r\n            props[name] = fn;\r\n\r\n            VisualElement.partial(props);\r\n        },\r\n\r\n        delegate: function(names, context) {\r\n            var props = {};\r\n\r\n            names.forEach(function(name) {\r\n                props[name] = _delegator(context[name], context);\r\n            });\r\n\r\n            VisualElement.partial(props);\r\n        }\r\n    });\r\n\r\n    // from ./datax\r\n    velm.delegate([\r\n        \"attr\",\r\n        \"data\",\r\n        \"prop\",\r\n        \"removeAttr\",\r\n        \"removeData\",\r\n        \"text\",\r\n        \"val\"\r\n    ], datax);\r\n\r\n    // from ./dnd\r\n    velm.delegate([\r\n        \"draggable\",\r\n        \"droppable\"\r\n    ], dnd);\r\n\r\n\r\n    // from ./eventer\r\n    velm.delegate([\r\n        \"off\",\r\n        \"on\",\r\n        \"one\",\r\n        \"shortcuts\",\r\n        \"trigger\"\r\n    ], eventer);\r\n\r\n    // from ./filer\r\n    velm.delegate([\r\n        \"picker\",\r\n        \"dropzone\"\r\n    ], filer);\r\n\r\n    // from ./finder\r\n    velm.delegate([\r\n        \"ancestor\",\r\n        \"ancestors\",\r\n        \"children\",\r\n        \"descendant\",\r\n        \"find\",\r\n        \"findAll\",\r\n        \"firstChild\",\r\n        \"lastChild\",\r\n        \"matches\",\r\n        \"nextSibling\",\r\n        \"nextSiblings\",\r\n        \"parent\",\r\n        \"previousSibling\",\r\n        \"previousSiblings\",\r\n        \"siblings\"\r\n    ], finder);\r\n\r\n    velm.find = function(selector) {\r\n        if (selector === \"body\") {\r\n            return this.root;\r\n        } else {\r\n            return this.root.descendant(selector);\r\n        }\r\n    };\r\n\r\n    // from ./fx\r\n    velm.delegate([\r\n        \"animate\",\r\n        \"fadeIn\",\r\n        \"fadeOut\",\r\n        \"fadeTo\",\r\n        \"fadeToggle\",\r\n        \"hide\",\r\n        \"scrollToTop\",\r\n        \"show\",\r\n        \"toggle\"\r\n    ], fx);\r\n\r\n\r\n    // from ./geom\r\n    velm.delegate([\r\n        \"borderExtents\",\r\n        \"boundingPosition\",\r\n        \"boundingRect\",\r\n        \"clientHeight\",\r\n        \"clientSize\",\r\n        \"clientWidth\",\r\n        \"contentRect\",\r\n        \"height\",\r\n        \"marginExtents\",\r\n        \"offsetParent\",\r\n        \"paddingExtents\",\r\n        \"pagePosition\",\r\n        \"pageRect\",\r\n        \"relativePosition\",\r\n        \"relativeRect\",\r\n        \"scrollIntoView\",\r\n        \"scrollLeft\",\r\n        \"scrollTop\",\r\n        \"size\",\r\n        \"width\"\r\n    ], geom);\r\n\r\n    // from ./mover\r\n    velm.delegate([\r\n        \"draggable\",\r\n        \"droppable\"\r\n    ], dnd);\r\n\r\n\r\n    // from ./noder\r\n    velm.delegate([\r\n        \"after\",\r\n        \"append\",\r\n        \"before\",\r\n        \"clone\",\r\n        \"contains\",\r\n        \"contents\",\r\n        \"empty\",\r\n        \"html\",\r\n        \"isChildOf\",\r\n        \"ownerDoc\",\r\n        \"prepend\",\r\n        \"remove\",\r\n        \"replace\",\r\n        \"reverse\",\r\n        \"throb\",\r\n        \"traverse\",\r\n        \"wrapper\",\r\n        \"wrapperInner\",\r\n        \"unwrap\"\r\n    ], noder);\r\n\r\n    // from ./styler\r\n    velm.delegate([\r\n        \"addClass\",\r\n        \"className\",\r\n        \"css\",\r\n        \"hasClass\",\r\n        \"hide\",\r\n        \"isInvisible\",\r\n        \"removeClass\",\r\n        \"show\",\r\n        \"toggleClass\"\r\n    ], styler);\r\n    \r\n    return skylark.velm = velm;\r\n});\r\n\ndefine('skylark-utils/widgets',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./noder\",\r\n    \"./datax\",\r\n    \"./styler\",\r\n    \"./geom\",\r\n    \"./eventer\",\r\n    \"./query\",\r\n    \"./velm\"\r\n], function(skylark,langx,noder, datax, styler, geom, eventer,query,velm) {\r\n\t// Cached regex to split keys for `delegate`.\r\n\tvar delegateEventSplitter = /^(\\S+)\\s*(.*)$/,\r\n\t\tslice = Array.prototype.slice;\r\n\r\n\r\n\tfunction bridge( name, object ) {\r\n\t\tvar fullName = object.prototype.widgetFullName || name,\r\n\t\t\tfn = {};\r\n\r\n\t\tfunction _delegate (isQuery) {\r\n\r\n\t\t}\r\n\r\n\t\tfn[name] = function( options ) {\r\n\t\t\tvar isMethodCall = typeof options === \"string\";\r\n\t\t\tvar args = slice.call( arguments, 1 );\r\n\t\t\tvar returnValue = this;\r\n\r\n\t\t\tif ( isMethodCall ) {\r\n\r\n\t\t\t\t// If this is an empty collection, we need to have the instance method\r\n\t\t\t\t// return undefined instead of the jQuery instance\r\n\t\t\t\tif ( !this.length && options === \"instance\" ) {\r\n\t\t\t\t\treturnValue = undefined;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.each( function() {\r\n\t\t\t\t\t\tvar methodValue;\r\n\t\t\t\t\t\tvar instance = datax.data( this, fullName );\r\n\r\n\t\t\t\t\t\tif ( options === \"instance\" ) {\r\n\t\t\t\t\t\t\treturnValue = instance;\r\n\t\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif ( !instance ) {\r\n\t\t\t\t\t\t\treturn $.error( \"cannot call methods on \" + name +\r\n\t\t\t\t\t\t\t\t\" prior to initialization; \" +\r\n\t\t\t\t\t\t\t\t\"attempted to call method '\" + options + \"'\" );\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif ( !$.isFunction( instance[ options ] ) || options.charAt( 0 ) === \"_\" ) {\r\n\t\t\t\t\t\t\treturn $.error( \"no such method '\" + options + \"' for \" + name +\r\n\t\t\t\t\t\t\t\t\" widget instance\" );\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tmethodValue = instance[ options ].apply( instance, args );\r\n\r\n\t\t\t\t\t\tif ( methodValue !== instance && methodValue !== undefined ) {\r\n\t\t\t\t\t\t\treturnValue = methodValue && methodValue.jquery ?\r\n\t\t\t\t\t\t\t\treturnValue.pushStack( methodValue.get() ) :\r\n\t\t\t\t\t\t\t\tmethodValue;\r\n\t\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} );\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// Allow multiple hashes to be passed on init\r\n\t\t\t\tif ( args.length ) {\r\n\t\t\t\t\toptions = $.widget.extend.apply( null, [ options ].concat( args ) );\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.each( function() {\r\n\t\t\t\t\tvar instance = datax.data( this, fullName );\r\n\t\t\t\t\tif ( instance ) {\r\n\t\t\t\t\t\tinstance.option( options || {} );\r\n\t\t\t\t\t\tif ( instance._init ) {\r\n\t\t\t\t\t\t\tinstance._init();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tdatax.data( this, fullName, new object( options, this ) );\r\n\t\t\t\t\t}\r\n\t\t\t\t} );\r\n\t\t\t}\r\n\r\n\t\t\treturn returnValue;\r\n\t\t};\r\n\t};\r\n\r\n\tfunction widgets() {\r\n\t    return widgets;\r\n\t}\r\n\r\n\tvar Widget = langx.Evented.inherit({\r\n\t    init :function(options,el) {\r\n\t    \t//for supporting init(el,options)\r\n\t        if (langx.isHtmlNode(options)) {\r\n\t        \tvar _t = el,\r\n\t        \t\toptions = el;\r\n\t            el = options;\r\n\t        }\r\n\t        if (langx.isHtmlNode(el)) { \r\n\t        \tthis.el = el;\r\n\t    \t} else {\r\n\t    \t\tthis.el = null;\r\n\t    \t}\r\n\t        if (options) {\r\n\t            langx.mixin(this,options);\r\n\t        }\r\n\t        if (!this.cid) {\r\n\t            this.cid = langx.uniqueId('w');\r\n\t        }\r\n\t        this._ensureElement();\r\n\t    },\r\n\r\n\t    // The default `tagName` of a View's element is `\"div\"`.\r\n\t    tagName: 'div',\r\n\r\n\t    // jQuery delegate for element lookup, scoped to DOM elements within the\r\n\t    // current view. This should be preferred to global lookups where possible.\r\n\t    $: function(selector) {\r\n\t      return this.$el.find(selector);\r\n\t    },\r\n\r\n\t    // **render** is the core function that your view should override, in order\r\n\t    // to populate its element (`this.el`), with the appropriate HTML. The\r\n\t    // convention is for **render** to always return `this`.\r\n\t    render: function() {\r\n\t      return this;\r\n\t    },\r\n\r\n\t    // Remove this view by taking the element out of the DOM, and removing any\r\n\t    // applicable Backbone.Events listeners.\r\n\t    remove: function() {\r\n\t      this._removeElement();\r\n\t      this.unlistenTo();\r\n\t      return this;\r\n\t    },\r\n\r\n\t    // Remove this view's element from the document and all event listeners\r\n\t    // attached to it. Exposed for subclasses using an alternative DOM\r\n\t    // manipulation API.\r\n\t    _removeElement: function() {\r\n\t      this.$el.remove();\r\n\t    },\r\n\r\n\t    // Change the view's element (`this.el` property) and re-delegate the\r\n\t    // view's events on the new element.\r\n\t    setElement: function(element) {\r\n\t      this.undelegateEvents();\r\n\t      this._setElement(element);\r\n\t      this.delegateEvents();\r\n\t      return this;\r\n\t    },\r\n\r\n\t    // Creates the `this.el` and `this.$el` references for this view using the\r\n\t    // given `el`. `el` can be a CSS selector or an HTML string, a jQuery\r\n\t    // context or an element. Subclasses can override this to utilize an\r\n\t    // alternative DOM manipulation API and are only required to set the\r\n\t    // `this.el` property.\r\n\t    _setElement: function(el) {\r\n\t      this.$el = widgets.$(el);\r\n\t      this.el = this.$el[0];\r\n\t    },\r\n\r\n\t    // Set callbacks, where `this.events` is a hash of\r\n\t    //\r\n\t    // *{\"event selector\": \"callback\"}*\r\n\t    //\r\n\t    //     {\r\n\t    //       'mousedown .title':  'edit',\r\n\t    //       'click .button':     'save',\r\n\t    //       'click .open':       function(e) { ... }\r\n\t    //     }\r\n\t    //\r\n\t    // pairs. Callbacks will be bound to the view, with `this` set properly.\r\n\t    // Uses event delegation for efficiency.\r\n\t    // Omitting the selector binds the event to `this.el`.\r\n\t    delegateEvents: function(events) {\r\n\t      events || (events = langx.result(this, 'events'));\r\n\t      if (!events) return this;\r\n\t      this.undelegateEvents();\r\n\t      for (var key in events) {\r\n\t        var method = events[key];\r\n\t        if (!langx.isFunction(method)) method = this[method];\r\n\t        if (!method) continue;\r\n\t        var match = key.match(delegateEventSplitter);\r\n\t        this.delegate(match[1], match[2], langx.proxy(method, this));\r\n\t      }\r\n\t      return this;\r\n\t    },\r\n\r\n\t    // Add a single event listener to the view's element (or a child element\r\n\t    // using `selector`). This only works for delegate-able events: not `focus`,\r\n\t    // `blur`, and not `change`, `submit`, and `reset` in Internet Explorer.\r\n\t    delegate: function(eventName, selector, listener) {\r\n\t      this.$el.on(eventName + '.delegateEvents' + this.uid, selector, listener);\r\n\t      return this;\r\n\t    },\r\n\r\n\t    // Clears all callbacks previously bound to the view by `delegateEvents`.\r\n\t    // You usually don't need to use this, but may wish to if you have multiple\r\n\t    // Backbone views attached to the same DOM element.\r\n\t    undelegateEvents: function() {\r\n\t      if (this.$el) this.$el.off('.delegateEvents' + this.uid);\r\n\t      return this;\r\n\t    },\r\n\r\n\t    // A finer-grained `undelegateEvents` for removing a single delegated event.\r\n\t    // `selector` and `listener` are both optional.\r\n\t    undelegate: function(eventName, selector, listener) {\r\n\t      this.$el.off(eventName + '.delegateEvents' + this.uid, selector, listener);\r\n\t      return this;\r\n\t    },\r\n\r\n\t    // Produces a DOM element to be assigned to your view. Exposed for\r\n\t    // subclasses using an alternative DOM manipulation API.\r\n\t    _createElement: function(tagName,attrs) {\r\n\t      return noder.createElement(tagName,attrs);\r\n\t    },\r\n\r\n\t    // Ensure that the View has a DOM element to render into.\r\n\t    // If `this.el` is a string, pass it through `$()`, take the first\r\n\t    // matching element, and re-assign it to `el`. Otherwise, create\r\n\t    // an element from the `id`, `className` and `tagName` properties.\r\n\t    _ensureElement: function() {\r\n\t      if (!this.el) {\r\n\t        var attrs = langx.mixin({}, langx.result(this, 'attributes'));\r\n\t        if (this.id) attrs.id = langx.result(this, 'id');\r\n\t        if (this.className) attrs['class'] = langx.result(this, 'className');\r\n\t        this.setElement(this._createElement(langx.result(this, 'tagName'),attrs));\r\n\t        this._setAttributes(attrs);\r\n\t      } else {\r\n\t        this.setElement(langx.result(this, 'el'));\r\n\t      }\r\n\t    },\r\n\r\n\t    // Set attributes from a hash on this view's element.  Exposed for\r\n\t    // subclasses using an alternative DOM manipulation API.\r\n\t    _setAttributes: function(attributes) {\r\n\t      this.$el.attr(attributes);\r\n\t    },\r\n\r\n\t    // Translation function, gets the message key to be translated\r\n\t    // and an object with context specific data as arguments:\r\n\t    i18n: function (message, context) {\r\n\t        message = (this.messages && this.messages[message]) || message.toString();\r\n\t        if (context) {\r\n\t            langx.each(context, function (key, value) {\r\n\t                message = message.replace('{' + key + '}', value);\r\n\t            });\r\n\t        }\r\n\t        return message;\r\n\t    },\r\n\r\n\t\t});\r\n\r\n\tfunction defineWidgetClass(name,base,prototype) {\r\n\r\n\t};\r\n\r\n\tlangx.mixin(widgets, {\r\n\t\t$ : query,\r\n\r\n\t\tdefine : defineWidgetClass,\r\n\t\tWidget : Widget\r\n\t});\r\n\r\n\r\n\treturn skylark.widgets = widgets;\r\n});\r\n\ndefine('skylark-utils-interact/sorter',[\r\n    \"./interact\",\r\n    \"skylark-langx/langx\",\r\n    \"skylark-utils/noder\",\r\n    \"skylark-utils/datax\",\r\n    \"skylark-utils/geom\",\r\n    \"skylark-utils/eventer\",\r\n    \"skylark-utils/styler\",\r\n    \"skylark-utils/dnd\",\r\n    \"skylark-utils/query\",\r\n    \"skylark-utils/widgets\",\r\n    \"./mover\",\r\n    \"./resizer\"\r\n],function(interact, langx,noder,datax,geom,eventer,styler,dnd,$,widgets,mover,resizer){\r\n    var on = eventer.on,\r\n        off = eventer.off,\r\n        attr = datax.attr,\r\n        removeAttr = datax.removeAttr,\r\n        offset = geom.pagePosition,\r\n        addClass = styler.addClass,\r\n        height = geom.height,\r\n        some = Array.prototype.some,\r\n        map = Array.prototype.map;\r\n\r\n    var Sorter = widgets.Widget.inherit({\r\n        \"klassName\" : \"Sorter\",\r\n\r\n        enable : function() {\r\n\r\n        },\r\n        \r\n        disable : function() {\r\n\r\n        },\r\n\r\n        destory : function() {\r\n\r\n        }\r\n    });\r\n\r\n\r\n    var dragging, placeholders = $();\r\n\r\n\r\n    /*\r\n     * @param {HTMLElement} container  the element to use as a sortable container\r\n     * @param {Object} options  options object\r\n     * @param {String} [options.items = \"\"] \r\n     * @param {Object} [options.connectWith =] the selector to create connected lists\r\n     * @param {Object} [options\r\n     * @param {Object} [options\r\n     */\r\n    function sortable(container,options) {\r\n        options = langx.mixin({\r\n            connectWith: false,\r\n            placeholder: null,\r\n            placeholderClass: 'sortable-placeholder',\r\n            draggingClass: 'sortable-dragging',\r\n            items : null\r\n\r\n        },options);\r\n\r\n        var isHandle, index, \r\n            $container = $(container), \r\n            $items = $container.children(options.items);\r\n        var placeholder = $(options.placeholder || noder.createElement(/^(ul|ol)$/i.test(container.tagName) ? 'li' : 'div',{\r\n            \"class\" : options.placeholderClass\r\n        }));\r\n\r\n        dnd.draggable(container,{\r\n            source : options.items,\r\n            handle : options.handle,\r\n            draggingClass : options.draggingClass,\r\n            preparing : function(e) {\r\n                //e.dragSource = e.handleElm;\r\n            },\r\n            started :function(e) {\r\n                e.ghost = e.dragSource;\r\n                e.transfer = {\r\n                    \"text\": \"dummy\"\r\n                };\r\n                index = (dragging = $(e.dragSource)).index();\r\n            },\r\n            ended : function(e) {\r\n                if (!dragging) {\r\n                    return;\r\n                }\r\n                dragging.show();\r\n                placeholders.detach();\r\n                if (index != dragging.index()) {\r\n                    dragging.parent().trigger('sortupdate', {item: dragging});\r\n                }\r\n                dragging = null;                \r\n            }\r\n\r\n        });\r\n\r\n        \r\n        dnd.droppable(container,{\r\n            started: function(e) {\r\n                e.acceptable = true;\r\n                e.activeClass = \"active\";\r\n                e.hoverClass = \"over\";\r\n            },\r\n            overing : function(e) {\r\n                if ($items.is(e.overElm)) {\r\n                    if (options.forcePlaceholderSize) {\r\n                        placeholder.height(dragging.outerHeight());\r\n                    }\r\n                    dragging.hide();\r\n                    $(e.overElm)[placeholder.index() < $(e.overElm).index() ? 'after' : 'before'](placeholder);\r\n                    placeholders.not(placeholder).detach();\r\n                } else if (!placeholders.is(e.overElm) && !$(e.overElm).children(options.items).length) {\r\n                    placeholders.detach();\r\n                    $(e.overElm).append(placeholder);\r\n                }                \r\n            },\r\n            dropped : function(e) {\r\n                placeholders.filter(':visible').after(dragging);\r\n                dragging.show();\r\n                placeholders.detach();\r\n\r\n                dragging = null;                \r\n              }\r\n        });\r\n\r\n        $container.data('items', options.items)\r\n        placeholders = placeholders.add(placeholder);\r\n        if (options.connectWith) {\r\n            $(options.connectWith).add(this).data('connectWith', options.connectWith);\r\n        }\r\n        \r\n        return {\r\n            remove : function() {\r\n\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    $.fn.sortable = function(options) {\r\n        options = langx.mixin({\r\n            connectWith: false\r\n        }, options);\r\n        return this.each(function() {\r\n            sortable(this,options);\r\n        });\r\n    };\r\n\r\n    function sorter(){\r\n      return sorter;\r\n    }\r\n\r\n    langx.mixin(sorter, {\r\n\r\n        sortable : sortable\r\n\r\n    });\r\n\r\n    return interact.sorter = sorter;\r\n});\r\n\ndefine('skylark-utils-interact/main',[\r\n    \"skylark-utils/skylark\",\r\n    \"./mover\",\r\n    \"./resizer\",\r\n    \"./selector\",\r\n    \"./sorter\"\r\n], function(skylark) {\r\n    return skylark;\r\n})\r\n;\ndefine('skylark-utils-interact', ['skylark-utils-interact/main'], function (main) { return main; });\n\n"]}