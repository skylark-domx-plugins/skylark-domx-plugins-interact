{"version":3,"sources":["skylark-utils-interact-all.js"],"names":["factory","globals","absolute","relative","base","stack","split","parts","pop","i","length","push","join","define","require","isAmd","amd","isCmd","exports","map","id","deps","dep","hasOwnProperty","Error","module","args","forEach","apply","window","skylarkjs","skylark","createAssigner","keysFunc","defaults","obj","arguments","Object","index","source","keys","l","key","advise","dispatcher","type","advice","receiveArguments","signal","previous","around","advised","this","remove","target","next","nextId","aspect","methodName","existing","executionId","before","results","after","newResults","undefined","call","allKeys","isObject","createEvent","props","e","CustomEvent","safeMixin","debounce","fn","wait","timeout","later","clearTimeout","setTimeout","values","_","Array","clone","src","checkCloneMethod","copy","isArray","isPlainObject","compact","array","filter","item","dasherize","str","replace","toLowerCase","deserializeValue","value","test","JSON","parse","each","callback","undef","flatten","isArrayLike","result","j","funcArg","context","arg","idx","payload","isFunction","getQueryParams","url","location","href","segs","params","queryParam","nv","grep","out","has","path","inArray","indexOf","inherit","ctor","f","prototype","object","constructor","isString","isHtmlNode","isBoolean","isDocument","nodeType","DOCUMENT_NODE","isEqual","a","b","eq","isWindow","getPrototypeOf","isDefined","Node","isInstanceOf","Number","String","Boolean","isNumber","isSameOrigin","origin","protocol","hostname","port","startsWith","isEmptyObject","name","isMatch","attrs","makeArray","offset","startWith","concat","slice","elements","defer","requestAnimationFrame","setTimeoutout","noop","proxy","proxyFn","unshift","TypeError","toPixel","parseFloat","trim","removeItem","items","splice","_mixin","deep","safe","_parseMixinArgs","shift","sources","mixin","fallback","prop","substitute","template","transform","thisObject","getObject","match","retVal","getValue","_k","reverse","v","format","toString","uid","_uid","uniq","uniqueId","prefix","idCounter","langx","PGLISTENERS","Symbol","deepEq","SymbolProto","aStack","bStack","className","valueOf","areArrays","aCtor","bCtor","f1","extendClass","options","proto","_super","superclass","noOverrided","_constructor","superFn","tmp","overrided","ret","defineProperty","serialMixins","mixins","clss","cls","clsMixines","mergeMixins","newCtor","xtor","Function","create","__proto__","__mixin__","createClass","parent","innerParent","init","klassName","__mixins__","partial","delegate","TMP","getAbsoluteUrl","document","createElement","class2type","Deferred","self","p","promise","Promise","resolve","reject","_resolve","_reject","added","state","isResolved","isRejected","then","onResolved","onRejected","onProgress","progress","__ctx__","always","handler","done","fail","pipe","resolveWith","_resolved","listener","error","reason","rejectWith","_rejected","errback","progback","all","first","race","when","valueOrPromise","receivedPromise","err","d","data","immediate","Evented","on","events","selector","ctx","one","_hub","trigger","eventName","listeners","len","reCompact","listened","event","evtArr","_events","listenTo","listening","listeningTo","_listeningTo","listeningEvents","listeningEvent","listenToOnce","off","evts","liveEvents","unlistenTo","Stateful","attributes","cid","cidPrefix","collection","set","changed","validationError","idAttribute","toJSON","get","attr","val","_validate","unset","silent","changes","changing","_changing","_previousAttributes","current","prev","_pending","clear","hasChanged","changedAttributes","diff","old","previousAttributes","isNew","isValid","validate","SimpleQueryEngine","query","arr","cache","buildFn","execute","sortSet","sort","aValue","attribute","bValue","descending","start","count","total","Infinity","queryObject","required","matches","QueryResults","addIterativeMethod","method","isPromise","async","parallel","rets","func","series","waterful","ArrayStore","queryEngine","idProperty","getIdentity","put","Math","random","overwrite","add","setData","identifier","Xhr","mimeToDataType","mime","htmlType","jsonType","scriptTypeRE","xmlTypeRE","appendQuery","serializeData","processData","param","traditional","toUpperCase","serialize","scope","t","hash","jsonpID","rscript","blankRE","XhrDefaultOptions","beforeSend","success","complete","global","accepts","script","json","xml","html","text","crossDomain","xhrFields","withCredentials","escape","_request","xhr","XMLHttpRequest","dataType","handleAs","mimeType","headers","isFormData","FormData","basicAuthorizationToken","user","password","deferred","contentType","overrideMimeType","finish","onloadend","onabort","onprogress","ontimeout","status","getResponseHeader","responseText","eval","responseXML","Blob","xhrObj","response","reponse","statusText","evt","open","hdr","setRequestHeader","send","abort","request","post","patch","del","defaultOptions","Restful","getBaseUrl","baseEndpoint","baseUrl","server","basePath","_head","_get","_post","verb","_put","_delete","_patch","retrieve","update","delete","camelCase","n","klass","lowerFirst","charAt","returnTrue","returnFalse","serializeValue","stringify","upperFirst","URL","webkitURL","interact","maybeAddPx","cssNumber","classRE","classReCache","RegExp","node","svg","baseVal","defaultDisplay","nodeName","element","display","elementDisplay","body","appendChild","getComputedStyle","getPropertyValue","parentNode","removeChild","show","elm","styler","css","isInvisible","hide","addClass","names","re","property","computedStyle","style","removeProperty","cssText","hasClass","removeClass","toggleClass","every","column-count","columns","font-weight","line-height","opacity","z-index","zoom","autocssfix","cssHooks","ensureNodes","nodes","copyByClone","cloneNode","chkName","placing","refNode","nextSibling","insertBefore","append","contents","contentDocument","childNodes","tag","setAttribute","createFragment","singleTagRE","$1","fragmentRE","containers","container","innerHTML","dom","isIE","getAttribs","setAttrib","getAttrib","contains","child","isChildOf","createTextNode","doc","empty","hasChildNodes","firstChild","directly","documentElement","isDoc","ownerDoc","ownerDocument","ownerWindow","defaultView","parentWindow","prepend","offsetParent","rootNodeRE","overlay","overlayDiv","position","top","left","width","height","zIndex","console","warn","oldNode","replaceChild","throb","timer","time","throbber","textNode","nodeValue","end","traverse","children","wrapper","wrapperNode","wrapperInner","unwrap","noder","navigator","userAgent","div","table","tableBody","tableRow","tr","tbody","thead","tfoot","td","th","*","normalizeCssEvent","css3EventPrefix","normalizeCssProperty","cssProps","normalizeStyleProperty","cssStyles","browser","vendorPrefix","vendorPrefixRE","css3PropPrefix","css3StylePrefix","vendorPrefixesRE","testEl","matchesSelector","webkitMatchesSelector","mozMatchesSelector","oMatchesSelector","testStyle","matched","cssPropName","support","velm","createInputPseudo","elem","createButtonPseudo","ancestor","root","rootIsSelector","ancestors","local","byId","getElementById","closest","descendants","querySelectorAll","matchError","descendant","querySelector","find","findAll","lastChild","last","previousSibling","nativeMatchesSelector","check","adjacent","nextSiblings","previousSiblings","siblings","parser","rawMatch","separator","combinator","combinatorChildren","tagName","attributeKey","attributeOperator","attributeQuote","attributeValue","pseudoMarker","pseudoClass","pseudoQuote","pseudoClassQuotedValue","pseudoClassValue","separatorIndex","parsed","expressions","combinatorIndex","currentSeparator","reversed","reverseCombinator","currentParsed","reUnescape","classList","classes","regexp","escapeRegExp","pseudos","operator","reverseCache","expression","isReversed","Slick","currentCache","raw","exp","cexp","from","to","string","rinputs","rheader","parseSelector","button","checked","$","disabled","enabled","even","focus","activeElement","tabindex","gt","sel","header","hidden","input","lt","not","odd","selected","visible","offsetWidth","isArrayFilter","radio","checkbox","file","image","submit","reset","divide","cond","nativeSelector","customPseudos","part","arrayFilte","pseudo","getAttribute","hasAttribute","currentExpression","simpleExpCounter","filterSingle","matchs","combine","bit","node1","op","divided","single","currentBit","founds","found","currentItems","finder","removeAttribute","aria","attrName","_attributeData","store","_store","confirm","_getData","camelName","capitalRE","_setData","dataAttrName","cleanData","removeData","pluck","propMap","removeAttr","removeProp","txt","textContent","multiple","selectedOptions","option","datax","readonly","for","class","maxlength","cellspacing","cellpadding","rowspan","colspan","usemap","frameborder","contenteditable","scrollbarWidth","cachedScrollbarWidth","w1","w2","innerDiv","clientWidth","borderExtents","s","px","borderLeftWidth","borderTopWidth","right","borderRightWidth","bottom","borderBottomWidth","boundingPosition","coords","getBoundingClientRect","parentOffset","mex","marginExtents","pbex","relativePosition","boundingRect","size","clientHeight","clientSize","dimension","isBorderBox","bex","pex","paddingExtents","contentRect","cs","getDocumentSize","max","scrollWidth","scrollHeight","offsetHeight","marginLeft","marginTop","marginRight","marginBottom","marginRect","relativeRect","me","marginSize","paddingLeft","paddingTop","paddingRight","paddingBottom","pagePosition","pageXOffset","pageYOffset","pageRect","round","scrollIntoView","align","getOffset","rootElm","x","y","offsetLeft","offsetTop","parentWidth","parentHeight","parentElm","pos","scrollLeft","scrollTop","hasScrollLeft","scrollTo","scrollY","hasScrollTop","scrollX","innerWidth","innerHeight","geom","compatible","isDefaultPrevented","eventMethods","predicate","sourceMethod","ns","createProxy","originalEvent","ignoreProperties","$this","findHandler","unregister","ready","register","stop","keyCode","preventDefault","stopPropagation","evented","Event","_args","dispatchEvent","readyRE","readyState","addEventListener","shortcuts","registry","run","shortcut","metaKey","ctrlKey","ctrl","alt","altKey","shiftKey","charCode","pattern","shortcutKeys","shortcutKey","setting","charCodeAt","keyCodeLookup","regKey","eventer","stopImmediatePropagation","getEventCtor","NativeEvents","EventCtors","compositionstart","compositionend","compositionupdate","beforecopy","beforecut","beforepaste","cut","paste","drag","dragend","dragenter","dragexit","dragleave","dragover","dragstart","drop","change","selectionchange","blur","focusin","focusout","keydown","keypress","keyup","message","click","contextmenu","dblclick","mousedown","mouseup","mousemove","mouseover","mouseout","mouseenter","mouseleave","textInput","touchstart","touchmove","touchend","load","resize","select","scroll","unload","wheel","bubbles","cancelable","namespace","specialEvents","focusinSupported","hover","realEvent","handlers","EventBindings","_target","_event","_bindings","bindings","binding","_listener","domEvt","isImmediatePropagationStopped","currentTarget","liveFired","related","relatedTarget","matcherFor","matcher","removing","removeEventListener","EventsHandler","_handler","specialEvent","bindingEvent","bindType","bindEventName","backspace","comma","down","enter","home","page_down","page_up","period","space","tab","up","special","_place","choices","layoutNode","aroundNodeCoords","win","view","best","some","choice","corner","overflow","spaceAvailable","w","L","R","M","h","T","B","res","aroundCorner","bb","startXpos","min","startYpos","startX","startY","endX","endY","at","corners","padding","c","anchor","positions","leftToRight","aroundNodePos","domGeometry","anchorBorder","getBorderExtents","anchorChildBorder","r","nodeBorder","nodeChildBorder","sawPosAbsolute","domStyle","parentPos","pcs","bottomYCoord","rightXCoord","kernel","deprecated","ltr","movable","updateWithTouchData","changedTouches","downButton","originalPos","handleEl","handle","auto","constraints","startedCallback","started","movingCallback","moving","stoppedCallback","stopped","cursor","docSize","screenX","screenY","move","deltaX","deltaY","minX","maxX","minY","maxY","mover","animate","properties","duration","ease","delay","endEvent","wrappedCallback","cssValues","cssProperties","transforms","that","fired","easing","fx","speeds","normal","eace","animationName","animationDuration","animationTiming","animationEnd","supportedTransforms","transitionEnd","transitionProperty","transitionDuration","transitionDelay","transitionTiming","cssReset","clientLeft","scrollToTop","speed","scale","scrollFrom","parseInt","runEvery","freq","interval","setInterval","clearInterval","toggle","fadeTo","fadeIn","fadeOut","fadeToggle","ceasing","allback","slideDown","visibility","slideUp","queue","slideToggle","animationDelay","fast","slow","wrapper_map","wrapper_selector","wrapper_selector_until","util","wrapper_every_act","wrapper_every_act_firstArgFunc","oldValueFunc","arg1","wrapper_some_chk","wrapper_name_value","newValue","wrapper_value","isQ","rquickExpr","NodeList","exec","wrapper_node_operation","argType","el","toArray","is","excludes","parents","parentsUntil","pushStack","elms","prevObject","replaceWith","newContent","wrap","structure","wrapAll","wrappingElement","wrapInner","prevAll","nextAll","detach","fnOver","fnOut","Dimension","m","margin","cb","mb","appendTo","prependTo","insertAfter","replaceAll","original","elems","insert","toogle","andSelf","addBack","place","addContent","content","replaceClass","newClass","oldClass","resizable","touchActionNone","direction","border","grabber","startSize","currentSize","resizer","classPrefix","data-resize-handler","resizing","resizingCallback","startDim","rectDim","startPos","unselect","draggable","Draggable","droppable","Droppable","dnd","DndManager","prepare","dragSource","dragHandle","draggingOffsetX","pageX","draggingOffsetY","pageY","ghost","transfer","dragging","draggingClass","draggingGhost","draggingTransfer","dataTransfer","setDragImage","effectAllowed","e1","over","dropped","manager","hoverClass","activeClass","acceptable","_params","e2","overElm","dropEffect","dropzone","droppedCallback","enterdCount","types","webkitGetAsEntry","getAsEntry","webentry","files","pastezone","pastedCallback","pasted","clipboardData","getAsFile","picker","selectFiles","pickedFiles","maxFileSize","fileSelected","directory","picked","fileInput","onchange","entries","webkitEntries","webkitdirectory","upload","initDataSettings","o","chunkedUpload","initXHRData","formData","multipart","paramName","contentRange","blob","uploadName","encodeURI","getUploadedBytes","jqXHR","range","upperBytesPos","BitrateTimer","timestamp","Date","now","getTime","loaded","bitrate","getBitrate","timeDiff","testOnly","uploadedBytes","fs","ub","mcs","maxChunkSize","blobSlice","dfd","i18n","_getXHRPromise","currentLoaded","_progress","chunkSize","ajax","textStatus","lengthComputable","errorThrown","xoptions","singleFileUploads","limitMultiFileUploads","limitMultiFileUploadSize","limitMultiFileUploadSizeOverhead","sequentialUploads","limitConcurrentUploads","recalculateProgress","progressInterval","bitrateInterval","autoUpload","messages","form","serializeArray","fileupload","process","webkitSlice","mozSlice","_bitrateTimer","jqXhr","entry","onError","isFile","relativePath","isDirectory","dirReader","createReader","readEntries","filer","readFile","reader","FileReader","onload","onerror","code","alert","asArrayBuffer","readAsArrayBuffer","asDataUrl","readAsDataURL","asText","readAsText","writeFile","msSaveBlob","dataURItoBlob","createObjectURL","_delegator","domNode","HTMLElement","VisualElement","batch","action","widgets","defineWidgetClass","delegateEventSplitter","Widget","_ensureElement","$el","render","_removeElement","setElement","undelegateEvents","_setElement","delegateEvents","undelegate","_createElement","_setAttributes","sortable","connectWith","placeholder","placeholderClass","$container","$items","preparing","ended","placeholders","overing","forcePlaceholderSize","outerHeight","sorter","enable","disable","destory","main"],"mappings":"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","file":"../skylark-utils-interact-all.js","sourcesContent":["define('skylark-langx/skylark',[], function() {\r\n    var skylark = {\r\n\r\n    };\r\n    return skylark;\r\n});\r\n\ndefine('skylark-utils/skylark',[\"skylark-langx/skylark\"], function(skylark) {\r\n    return skylark;\r\n});\r\n\ndefine('skylark-langx/langx',[\"./skylark\"], function(skylark) {\r\n    \"use strict\";\r\n    var toString = {}.toString,\r\n        concat = Array.prototype.concat,\r\n        indexOf = Array.prototype.indexOf,\r\n        slice = Array.prototype.slice,\r\n        filter = Array.prototype.filter,\r\n        hasOwnProperty = Object.prototype.hasOwnProperty;\r\n\r\n\r\n    var  PGLISTENERS = Symbol ? Symbol() : '__pglisteners';\r\n\r\n    // An internal function for creating assigner functions.\r\n    function createAssigner(keysFunc, defaults) {\r\n        return function(obj) {\r\n          var length = arguments.length;\r\n          if (defaults) obj = Object(obj);\r\n          if (length < 2 || obj == null) return obj;\r\n          for (var index = 1; index < length; index++) {\r\n            var source = arguments[index],\r\n                keys = keysFunc(source),\r\n                l = keys.length;\r\n            for (var i = 0; i < l; i++) {\r\n              var key = keys[i];\r\n              if (!defaults || obj[key] === void 0) obj[key] = source[key];\r\n            }\r\n          }\r\n          return obj;\r\n       };\r\n    }\r\n\r\n    // Internal recursive comparison function for `isEqual`.\r\n    var eq, deepEq;\r\n    var SymbolProto = typeof Symbol !== 'undefined' ? Symbol.prototype : null;\r\n\r\n    eq = function(a, b, aStack, bStack) {\r\n        // Identical objects are equal. `0 === -0`, but they aren't identical.\r\n        // See the [Harmony `egal` proposal](http://wiki.ecmascript.org/doku.php?id=harmony:egal).\r\n        if (a === b) return a !== 0 || 1 / a === 1 / b;\r\n        // `null` or `undefined` only equal to itself (strict comparison).\r\n        if (a == null || b == null) return false;\r\n        // `NaN`s are equivalent, but non-reflexive.\r\n        if (a !== a) return b !== b;\r\n        // Exhaust primitive checks\r\n        var type = typeof a;\r\n        if (type !== 'function' && type !== 'object' && typeof b != 'object') return false;\r\n        return deepEq(a, b, aStack, bStack);\r\n    };\r\n\r\n    // Internal recursive comparison function for `isEqual`.\r\n    deepEq = function(a, b, aStack, bStack) {\r\n        // Unwrap any wrapped objects.\r\n        //if (a instanceof _) a = a._wrapped;\r\n        //if (b instanceof _) b = b._wrapped;\r\n        // Compare `[[Class]]` names.\r\n        var className = toString.call(a);\r\n        if (className !== toString.call(b)) return false;\r\n        switch (className) {\r\n            // Strings, numbers, regular expressions, dates, and booleans are compared by value.\r\n            case '[object RegExp]':\r\n            // RegExps are coerced to strings for comparison (Note: '' + /a/i === '/a/i')\r\n            case '[object String]':\r\n                // Primitives and their corresponding object wrappers are equivalent; thus, `\"5\"` is\r\n                // equivalent to `new String(\"5\")`.\r\n                return '' + a === '' + b;\r\n            case '[object Number]':\r\n                // `NaN`s are equivalent, but non-reflexive.\r\n                // Object(NaN) is equivalent to NaN.\r\n                if (+a !== +a) return +b !== +b;\r\n                // An `egal` comparison is performed for other numeric values.\r\n                return +a === 0 ? 1 / +a === 1 / b : +a === +b;\r\n            case '[object Date]':\r\n            case '[object Boolean]':\r\n                // Coerce dates and booleans to numeric primitive values. Dates are compared by their\r\n                // millisecond representations. Note that invalid dates with millisecond representations\r\n                // of `NaN` are not equivalent.\r\n                return +a === +b;\r\n            case '[object Symbol]':\r\n                return SymbolProto.valueOf.call(a) === SymbolProto.valueOf.call(b);\r\n        }\r\n\r\n        var areArrays = className === '[object Array]';\r\n        if (!areArrays) {\r\n            if (typeof a != 'object' || typeof b != 'object') return false;\r\n            // Objects with different constructors are not equivalent, but `Object`s or `Array`s\r\n            // from different frames are.\r\n            var aCtor = a.constructor, bCtor = b.constructor;\r\n            if (aCtor !== bCtor && !(isFunction(aCtor) && aCtor instanceof aCtor &&\r\n                               isFunction(bCtor) && bCtor instanceof bCtor)\r\n                          && ('constructor' in a && 'constructor' in b)) {\r\n                return false;\r\n            }\r\n        }\r\n        // Assume equality for cyclic structures. The algorithm for detecting cyclic\r\n        // structures is adapted from ES 5.1 section 15.12.3, abstract operation `JO`.\r\n\r\n        // Initializing stack of traversed objects.\r\n        // It's done here since we only need them for objects and arrays comparison.\r\n        aStack = aStack || [];\r\n        bStack = bStack || [];\r\n        var length = aStack.length;\r\n        while (length--) {\r\n            // Linear search. Performance is inversely proportional to the number of\r\n            // unique nested structures.\r\n            if (aStack[length] === a) return bStack[length] === b;\r\n        }\r\n\r\n        // Add the first object to the stack of traversed objects.\r\n        aStack.push(a);\r\n        bStack.push(b);\r\n\r\n        // Recursively compare objects and arrays.\r\n        if (areArrays) {\r\n            // Compare array lengths to determine if a deep comparison is necessary.\r\n            length = a.length;\r\n            if (length !== b.length) return false;\r\n            // Deep compare the contents, ignoring non-numeric properties.\r\n            while (length--) {\r\n                if (!eq(a[length], b[length], aStack, bStack)) return false;\r\n            }\r\n        } else {\r\n            // Deep compare objects.\r\n            var keys = Object.keys(a), key;\r\n            length = keys.length;\r\n            // Ensure that both objects contain the same number of properties before comparing deep equality.\r\n            if (Object.keys(b).length !== length) return false;\r\n            while (length--) {\r\n                // Deep compare each member\r\n                key = keys[length];\r\n                if (!(b[key]!==undefined && eq(a[key], b[key], aStack, bStack))) return false;\r\n            }\r\n        }\r\n        // Remove the first object from the stack of traversed objects.\r\n        aStack.pop();\r\n        bStack.pop();\r\n        return true;\r\n    };\r\n\r\n    var undefined, nextId = 0;\r\n    function advise(dispatcher, type, advice, receiveArguments){\r\n        var previous = dispatcher[type];\r\n        var around = type == \"around\";\r\n        var signal;\r\n        if(around){\r\n            var advised = advice(function(){\r\n                return previous.advice(this, arguments);\r\n            });\r\n            signal = {\r\n                remove: function(){\r\n                    if(advised){\r\n                        advised = dispatcher = advice = null;\r\n                    }\r\n                },\r\n                advice: function(target, args){\r\n                    return advised ?\r\n                        advised.apply(target, args) :  // called the advised function\r\n                        previous.advice(target, args); // cancelled, skip to next one\r\n                }\r\n            };\r\n        }else{\r\n            // create the remove handler\r\n            signal = {\r\n                remove: function(){\r\n                    if(signal.advice){\r\n                        var previous = signal.previous;\r\n                        var next = signal.next;\r\n                        if(!next && !previous){\r\n                            delete dispatcher[type];\r\n                        }else{\r\n                            if(previous){\r\n                                previous.next = next;\r\n                            }else{\r\n                                dispatcher[type] = next;\r\n                            }\r\n                            if(next){\r\n                                next.previous = previous;\r\n                            }\r\n                        }\r\n\r\n                        // remove the advice to signal that this signal has been removed\r\n                        dispatcher = advice = signal.advice = null;\r\n                    }\r\n                },\r\n                id: nextId++,\r\n                advice: advice,\r\n                receiveArguments: receiveArguments\r\n            };\r\n        }\r\n        if(previous && !around){\r\n            if(type == \"after\"){\r\n                // add the listener to the end of the list\r\n                // note that we had to change this loop a little bit to workaround a bizarre IE10 JIT bug\r\n                while(previous.next && (previous = previous.next)){}\r\n                previous.next = signal;\r\n                signal.previous = previous;\r\n            }else if(type == \"before\"){\r\n                // add to beginning\r\n                dispatcher[type] = signal;\r\n                signal.next = previous;\r\n                previous.previous = signal;\r\n            }\r\n        }else{\r\n            // around or first one just replaces\r\n            dispatcher[type] = signal;\r\n        }\r\n        return signal;\r\n    }\r\n    function aspect(type){\r\n        return function(target, methodName, advice, receiveArguments){\r\n            var existing = target[methodName], dispatcher;\r\n            if(!existing || existing.target != target){\r\n                // no dispatcher in place\r\n                target[methodName] = dispatcher = function(){\r\n                    var executionId = nextId;\r\n                    // before advice\r\n                    var args = arguments;\r\n                    var before = dispatcher.before;\r\n                    while(before){\r\n                        args = before.advice.apply(this, args) || args;\r\n                        before = before.next;\r\n                    }\r\n                    // around advice\r\n                    if(dispatcher.around){\r\n                        var results = dispatcher.around.advice(this, args);\r\n                    }\r\n                    // after advice\r\n                    var after = dispatcher.after;\r\n                    while(after && after.id < executionId){\r\n                        if(after.receiveArguments){\r\n                            var newResults = after.advice.apply(this, args);\r\n                            // change the return value only if a new value was returned\r\n                            results = newResults === undefined ? results : newResults;\r\n                        }else{\r\n                            results = after.advice.call(this, results, args);\r\n                        }\r\n                        after = after.next;\r\n                    }\r\n                    return results;\r\n                };\r\n                if(existing){\r\n                    dispatcher.around = {advice: function(target, args){\r\n                        return existing.apply(target, args);\r\n                    }};\r\n                }\r\n                dispatcher.target = target;\r\n            }\r\n            var results = advise((dispatcher || existing), type, advice, receiveArguments);\r\n            advice = null;\r\n            return results;\r\n        };\r\n    }\r\n\r\n    var f1 = function() {\r\n        function extendClass(ctor, props, options) {\r\n            // Copy the properties to the prototype of the class.\r\n            var proto = ctor.prototype,\r\n                _super = ctor.superclass.prototype,\r\n                noOverrided = options && options.noOverrided;\r\n\r\n            for (var name in props) {\r\n                if (name === \"constructor\") {\r\n                    continue;\r\n                }\r\n\r\n                // Check if we're overwriting an existing function\r\n                var prop = props[name];\r\n                if (typeof props[name] == \"function\") {\r\n                    proto[name] =  !prop._constructor && !noOverrided && typeof _super[name] == \"function\" ?\r\n                          (function(name, fn, superFn) {\r\n                            return function() {\r\n                                var tmp = this.overrided;\r\n\r\n                                // Add a new ._super() method that is the same method\r\n                                // but on the super-class\r\n                                this.overrided = superFn;\r\n\r\n                                // The method only need to be bound temporarily, so we\r\n                                // remove it when we're done executing\r\n                                var ret = fn.apply(this, arguments);\r\n\r\n                                this.overrided = tmp;\r\n\r\n                                return ret;\r\n                            };\r\n                        })(name, prop, _super[name]) :\r\n                        prop;\r\n                } else if (typeof prop == \"object\" && prop!==null && (prop.get)) {\r\n                    Object.defineProperty(proto,name,prop);\r\n                } else {\r\n                    proto[name] = prop;\r\n                }\r\n            }\r\n            return ctor;\r\n        }\r\n\r\n        function serialMixins(ctor,mixins) {\r\n            var result = [];\r\n\r\n            mixins.forEach(function(mixin){\r\n                if (has(mixin,\"__mixins__\")) {\r\n                     throw new Error(\"nested mixins\");\r\n                }\r\n                var clss = [];\r\n                while (mixin) {\r\n                    clss.unshift(mixin);\r\n                    mixin = mixin.superclass;\r\n                }\r\n                result = result.concat(clss);\r\n            });\r\n\r\n            result = uniq(result);\r\n\r\n            result = result.filter(function(mixin){\r\n                var cls = ctor;\r\n                while (cls) {\r\n                    if (mixin === cls) {\r\n                        return false;\r\n                    }\r\n                    if (has(cls,\"__mixins__\")) {\r\n                        var clsMixines = cls[\"__mixins__\"];\r\n                        for (var i=0; i<clsMixines.length;i++) {\r\n                            if (clsMixines[i]===mixin) {\r\n                                return false;\r\n                            }\r\n                        }\r\n                    }\r\n                    cls = cls.superclass;\r\n                }\r\n                return true;\r\n            });\r\n\r\n            if (result.length>0) {\r\n                return result;\r\n            } else {\r\n                return false;\r\n            }\r\n        }\r\n\r\n        function mergeMixins(ctor,mixins) {\r\n            var newCtor =ctor;\r\n            for (var i=0;i<mixins.length;i++) {\r\n                var xtor = new Function();\r\n                xtor.prototype = Object.create(newCtor.prototype);\r\n                xtor.__proto__ = newCtor;\r\n                xtor.superclass = null;\r\n                mixin(xtor.prototype,mixins[i].prototype);\r\n                xtor.prototype.__mixin__ = mixins[i];\r\n                newCtor = xtor;\r\n            }\r\n\r\n            return newCtor;\r\n        }\r\n\r\n        return function createClass(props, parent, mixins,options) {\r\n            if (isArray(parent)) {\r\n                options = mixins;\r\n                mixins = parent;\r\n                parent = null;\r\n            }\r\n            parent = parent || Object;\r\n\r\n            if (isDefined(mixins) && !isArray(mixins)) {\r\n                options = mixins;\r\n                mixins = false;\r\n            }\r\n\r\n            var innerParent = parent;\r\n\r\n            if (mixins) {\r\n                mixins = serialMixins(innerParent,mixins);\r\n            }\r\n\r\n            if (mixins) {\r\n                innerParent = mergeMixins(innerParent,mixins);\r\n            }\r\n\r\n\r\n            var _constructor = props.constructor;\r\n            if (_constructor === Object) {\r\n                _constructor = function() {\r\n                    if (this.init) {\r\n                        return this.init.apply(this, arguments);\r\n                    }\r\n                };\r\n            };\r\n\r\n            var klassName = props.klassName || \"\",\r\n                ctor = new Function(\r\n                    \"return function \" + klassName + \"() {\" +\r\n                    \"var inst = this,\" +\r\n                    \" ctor = arguments.callee;\" +\r\n                    \"if (!(inst instanceof ctor)) {\" +\r\n                    \"inst = Object.create(ctor.prototype);\" +\r\n                    \"}\" +\r\n                    \"return ctor._constructor.apply(inst, arguments) || inst;\" + \r\n                    \"}\"\r\n                )();\r\n\r\n\r\n            ctor._constructor = _constructor;\r\n            // Populate our constructed prototype object\r\n            ctor.prototype = Object.create(innerParent.prototype);\r\n\r\n            // Enforce the constructor to be what we expect\r\n            ctor.prototype.constructor = ctor;\r\n            ctor.superclass = parent;\r\n\r\n            // And make this class extendable\r\n            ctor.__proto__ = innerParent;\r\n\r\n            if (mixins) {\r\n                ctor.__mixins__ = mixins;\r\n            }\r\n\r\n            if (!ctor.partial) {\r\n                ctor.partial = function(props, options) {\r\n                    return extendClass(this, props, options);\r\n                };\r\n            }\r\n            if (!ctor.inherit) {\r\n                ctor.inherit = function(props, mixins,options) {\r\n                    return createClass(props, this, mixins,options);\r\n                };\r\n            }\r\n\r\n            ctor.partial(props, options);\r\n\r\n            return ctor;\r\n        };\r\n    }\r\n\r\n    var createClass = f1();\r\n\r\n\r\n    // Retrieve all the property names of an object.\r\n    function allKeys(obj) {\r\n        if (!isObject(obj)) return [];\r\n        var keys = [];\r\n        for (var key in obj) keys.push(key);\r\n        return keys;\r\n    }\r\n\r\n    function createEvent(type, props) {\r\n        var e = new CustomEvent(type, props);\r\n\r\n        return safeMixin(e, props);\r\n    }\r\n    \r\n    function debounce(fn, wait) {\r\n        var timeout,\r\n            args,\r\n            later = function() {\r\n                fn.apply(null, args);\r\n            };\r\n\r\n        return function() {\r\n            args = arguments;\r\n            clearTimeout(timeout);\r\n            timeout = setTimeout(later, wait);\r\n        };\r\n    }\r\n\r\n    var delegate = (function() {\r\n        // boodman/crockford delegation w/ cornford optimization\r\n        function TMP() {}\r\n        return function(obj, props) {\r\n            TMP.prototype = obj;\r\n            var tmp = new TMP();\r\n            TMP.prototype = null;\r\n            if (props) {\r\n                mixin(tmp, props);\r\n            }\r\n            return tmp; // Object\r\n        };\r\n    })();\r\n\r\n\r\n    // Retrieve the values of an object's properties.\r\n    function values(obj) {\r\n        var keys = _.keys(obj);\r\n        var length = keys.length;\r\n        var values = Array(length);\r\n        for (var i = 0; i < length; i++) {\r\n            values[i] = obj[keys[i]];\r\n        }\r\n        return values;\r\n    }\r\n    \r\n    function clone( /*anything*/ src,checkCloneMethod) {\r\n        var copy;\r\n        if (src === undefined || src === null) {\r\n            copy = src;\r\n        } else if (checkCloneMethod && src.clone) {\r\n            copy = src.clone();\r\n        } else if (isArray(src)) {\r\n            copy = [];\r\n            for (var i = 0; i < src.length; i++) {\r\n                copy.push(clone(src[i]));\r\n            }\r\n        } else if (isPlainObject(src)) {\r\n            copy = {};\r\n            for (var key in src) {\r\n                copy[key] = clone(src[key]);\r\n            }\r\n        } else {\r\n            copy = src;\r\n        }\r\n\r\n        return copy;\r\n\r\n    }\r\n\r\n    function compact(array) {\r\n        return filter.call(array, function(item) {\r\n            return item != null;\r\n        });\r\n    }\r\n\r\n    /*\r\n     * Converts camel case into dashes.\r\n     * @param {String} str\r\n     * @return {String}\r\n     * @exapmle marginTop -> margin-top\r\n     */\r\n    function dasherize(str) {\r\n        return str.replace(/::/g, '/')\r\n            .replace(/([A-Z]+)([A-Z][a-z])/g, '$1_$2')\r\n            .replace(/([a-z\\d])([A-Z])/g, '$1_$2')\r\n            .replace(/_/g, '-')\r\n            .toLowerCase();\r\n    }\r\n\r\n    function deserializeValue(value) {\r\n        try {\r\n            return value ?\r\n                value == \"true\" ||\r\n                (value == \"false\" ? false :\r\n                    value == \"null\" ? null :\r\n                    +value + \"\" == value ? +value :\r\n                    /^[\\[\\{]/.test(value) ? JSON.parse(value) :\r\n                    value) : value;\r\n        } catch (e) {\r\n            return value;\r\n        }\r\n    }\r\n\r\n    function each(obj, callback) {\r\n        var length, key, i, undef, value;\r\n\r\n        if (obj) {\r\n            length = obj.length;\r\n\r\n            if (length === undef) {\r\n                // Loop object items\r\n                for (key in obj) {\r\n                    if (obj.hasOwnProperty(key)) {\r\n                        value = obj[key];\r\n                        if (callback.call(value, key, value) === false) {\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                // Loop array items\r\n                for (i = 0; i < length; i++) {\r\n                    value = obj[i];\r\n                    if (callback.call(value, i, value) === false) {\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    function flatten(array) {\r\n        if (isArrayLike(array)) {\r\n            var result = [];\r\n            for (var i = 0; i < array.length; i++) {\r\n                var item = array[i];\r\n                if (isArrayLike(item)) {\r\n                    for (var j = 0; j < item.length; j++) {\r\n                        result.push(item[j]);\r\n                    }\r\n                } else {\r\n                    result.push(item);\r\n                }\r\n            }\r\n            return result;\r\n        } else {\r\n            return array;\r\n        }\r\n        //return array.length > 0 ? concat.apply([], array) : array;\r\n    }\r\n\r\n    function funcArg(context, arg, idx, payload) {\r\n        return isFunction(arg) ? arg.call(context, idx, payload) : arg;\r\n    }\r\n\r\n    var getAbsoluteUrl = (function() {\r\n        var a;\r\n\r\n        return function(url) {\r\n            if (!a) a = document.createElement('a');\r\n            a.href = url;\r\n\r\n            return a.href;\r\n        };\r\n    })();\r\n\r\n    function getQueryParams(url) {\r\n        var url = url || window.location.href,\r\n            segs = url.split(\"?\"),\r\n            params = {};\r\n\r\n        if (segs.length > 1) {\r\n            segs[1].split(\"&\").forEach(function(queryParam) {\r\n                var nv = queryParam.split('=');\r\n                params[nv[0]] = nv[1];\r\n            });\r\n        }\r\n        return params;\r\n    }\r\n\r\n    function grep(array, callback) {\r\n        var out = [];\r\n\r\n        each(array, function(i, item) {\r\n            if (callback(item, i)) {\r\n                out.push(item);\r\n            }\r\n        });\r\n\r\n        return out;\r\n    }\r\n\r\n\r\n    function has(obj, path) {\r\n        if (!isArray(path)) {\r\n            return obj != null && hasOwnProperty.call(obj, path);\r\n        }\r\n        var length = path.length;\r\n        for (var i = 0; i < length; i++) {\r\n            var key = path[i];\r\n            if (obj == null || !hasOwnProperty.call(obj, key)) {\r\n                return false;\r\n            }\r\n            obj = obj[key];\r\n        }\r\n        return !!length;\r\n    }\r\n\r\n    function inArray(item, array) {\r\n        if (!array) {\r\n            return -1;\r\n        }\r\n        var i;\r\n\r\n        if (array.indexOf) {\r\n            return array.indexOf(item);\r\n        }\r\n\r\n        i = array.length;\r\n        while (i--) {\r\n            if (array[i] === item) {\r\n                return i;\r\n            }\r\n        }\r\n\r\n        return -1;\r\n    }\r\n\r\n    function inherit(ctor, base) {\r\n        var f = function() {};\r\n        f.prototype = base.prototype;\r\n\r\n        ctor.prototype = new f();\r\n    }\r\n\r\n    function isArray(object) {\r\n        return object && object.constructor === Array;\r\n    }\r\n\r\n    function isArrayLike(obj) {\r\n        return !isString(obj) && !isHtmlNode(obj) && typeof obj.length == 'number' && !isFunction(obj);\r\n    }\r\n\r\n    function isBoolean(obj) {\r\n        return typeof(obj) === \"boolean\";\r\n    }\r\n\r\n    function isDocument(obj) {\r\n        return obj != null && obj.nodeType == obj.DOCUMENT_NODE;\r\n    }\r\n\r\n\r\n\r\n  // Perform a deep comparison to check if two objects are equal.\r\n    function isEqual(a, b) {\r\n        return eq(a, b);\r\n    }\r\n\r\n    function isFunction(value) {\r\n        return type(value) == \"function\";\r\n    }\r\n\r\n    function isObject(obj) {\r\n        return type(obj) == \"object\";\r\n    }\r\n\r\n    function isPlainObject(obj) {\r\n        return isObject(obj) && !isWindow(obj) && Object.getPrototypeOf(obj) == Object.prototype;\r\n    }\r\n\r\n    function isString(obj) {\r\n        return typeof obj === 'string';\r\n    }\r\n\r\n    function isWindow(obj) {\r\n        return obj && obj == obj.window;\r\n    }\r\n\r\n    function isDefined(obj) {\r\n        return typeof obj !== 'undefined';\r\n    }\r\n\r\n    function isHtmlNode(obj) {\r\n        return obj && (obj instanceof Node);\r\n    }\r\n\r\n    function isInstanceOf( /*Object*/ value, /*Type*/ type) {\r\n        //Tests whether the value is an instance of a type.\r\n        if (value === undefined) {\r\n            return false;\r\n        } else if (value === null || type == Object) {\r\n            return true;\r\n        } else if (typeof value === \"number\") {\r\n            return type === Number;\r\n        } else if (typeof value === \"string\") {\r\n            return type === String;\r\n        } else if (typeof value === \"boolean\") {\r\n            return type === Boolean;\r\n        } else if (typeof value === \"string\") {\r\n            return type === String;\r\n        } else {\r\n            return (value instanceof type) || (value && value.isInstanceOf ? value.isInstanceOf(type) : false);\r\n        }\r\n    }\r\n\r\n    function isNumber(obj) {\r\n        return typeof obj == 'number';\r\n    }\r\n\r\n    function isSameOrigin(href) {\r\n        if (href) {\r\n            var origin = location.protocol + '//' + location.hostname;\r\n            if (location.port) {\r\n                origin += ':' + location.port;\r\n            }\r\n            return href.startsWith(origin);\r\n        }\r\n    }\r\n\r\n\r\n    function isEmptyObject(obj) {\r\n        var name;\r\n        for (name in obj) {\r\n            if (obj[name] !== null) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    // Returns whether an object has a given set of `key:value` pairs.\r\n    function isMatch(object, attrs) {\r\n        var keys = keys(attrs), length = keys.length;\r\n        if (object == null) return !length;\r\n        var obj = Object(object);\r\n        for (var i = 0; i < length; i++) {\r\n          var key = keys[i];\r\n          if (attrs[key] !== obj[key] || !(key in obj)) return false;\r\n        }\r\n        return true;\r\n    }    \r\n\r\n    // Retrieve the names of an object's own properties.\r\n    // Delegates to **ECMAScript 5**'s native `Object.keys`.\r\n    function keys(obj) {\r\n        if (isObject(obj)) return [];\r\n        var keys = [];\r\n        for (var key in obj) if (has(obj, key)) keys.push(key);\r\n        return keys;\r\n    }\r\n\r\n    function makeArray(obj, offset, startWith) {\r\n       if (isArrayLike(obj) ) {\r\n        return (startWith || []).concat(Array.prototype.slice.call(obj, offset || 0));\r\n      }\r\n\r\n      // array of single index\r\n      return [ obj ];             \r\n    }\r\n\r\n\r\n\r\n    function map(elements, callback) {\r\n        var value, values = [],\r\n            i, key\r\n        if (isArrayLike(elements))\r\n            for (i = 0; i < elements.length; i++) {\r\n                value = callback.call(elements[i], elements[i], i);\r\n                if (value != null) values.push(value)\r\n            }\r\n        else\r\n            for (key in elements) {\r\n                value = callback.call(elements[key], elements[key], key);\r\n                if (value != null) values.push(value)\r\n            }\r\n        return flatten(values)\r\n    }\r\n\r\n    function defer(fn) {\r\n        if (requestAnimationFrame) {\r\n            requestAnimationFrame(fn);\r\n        } else {\r\n            setTimeoutout(fn);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function noop() {\r\n    }\r\n\r\n    function proxy(fn, context) {\r\n        var args = (2 in arguments) && slice.call(arguments, 2)\r\n        if (isFunction(fn)) {\r\n            var proxyFn = function() {\r\n                return fn.apply(context, args ? args.concat(slice.call(arguments)) : arguments);\r\n            }\r\n            return proxyFn;\r\n        } else if (isString(context)) {\r\n            if (args) {\r\n                args.unshift(fn[context], fn)\r\n                return proxy.apply(null, args)\r\n            } else {\r\n                return proxy(fn[context], fn);\r\n            }\r\n        } else {\r\n            throw new TypeError(\"expected function\");\r\n        }\r\n    }\r\n\r\n\r\n    function toPixel(value) {\r\n        // style values can be floats, client code may want\r\n        // to round for integer pixels.\r\n        return parseFloat(value) || 0;\r\n    }\r\n\r\n    var type = (function() {\r\n        var class2type = {};\r\n\r\n        // Populate the class2type map\r\n        each(\"Boolean Number String Function Array Date RegExp Object Error\".split(\" \"), function(i, name) {\r\n            class2type[\"[object \" + name + \"]\"] = name.toLowerCase();\r\n        });\r\n\r\n        return function type(obj) {\r\n            return obj == null ? String(obj) :\r\n                class2type[toString.call(obj)] || \"object\";\r\n        };\r\n    })();\r\n\r\n    function trim(str) {\r\n        return str == null ? \"\" : String.prototype.trim.call(str);\r\n    }\r\n\r\n    function removeItem(items, item) {\r\n        if (isArray(items)) {\r\n            var idx = items.indexOf(item);\r\n            if (idx != -1) {\r\n                items.splice(idx, 1);\r\n            }\r\n        } else if (isPlainObject(items)) {\r\n            for (var key in items) {\r\n                if (items[key] == item) {\r\n                    delete items[key];\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    function _mixin(target, source, deep, safe) {\r\n        for (var key in source) {\r\n            if (!source.hasOwnProperty(key)) {\r\n                continue;\r\n            }\r\n            if (safe && target[key] !== undefined) {\r\n                continue;\r\n            }\r\n            if (deep && (isPlainObject(source[key]) || isArray(source[key]))) {\r\n                if (isPlainObject(source[key]) && !isPlainObject(target[key])) {\r\n                    target[key] = {};\r\n                }\r\n                if (isArray(source[key]) && !isArray(target[key])) {\r\n                    target[key] = [];\r\n                }\r\n                _mixin(target[key], source[key], deep, safe);\r\n            } else if (source[key] !== undefined) {\r\n                target[key] = source[key]\r\n            }\r\n        }\r\n        return target;\r\n    }\r\n\r\n    function _parseMixinArgs(args) {\r\n        var params = slice.call(arguments, 0),\r\n            target = params.shift(),\r\n            deep = false;\r\n        if (isBoolean(params[params.length - 1])) {\r\n            deep = params.pop();\r\n        }\r\n\r\n        return {\r\n            target: target,\r\n            sources: params,\r\n            deep: deep\r\n        };\r\n    }\r\n\r\n    function mixin() {\r\n        var args = _parseMixinArgs.apply(this, arguments);\r\n\r\n        args.sources.forEach(function(source) {\r\n            _mixin(args.target, source, args.deep, false);\r\n        });\r\n        return args.target;\r\n    }\r\n\r\n    function result(obj, path, fallback) {\r\n        if (!isArray(path)) {\r\n            path = [path]\r\n        };\r\n        var length = path.length;\r\n        if (!length) {\r\n          return isFunction(fallback) ? fallback.call(obj) : fallback;\r\n        }\r\n        for (var i = 0; i < length; i++) {\r\n          var prop = obj == null ? void 0 : obj[path[i]];\r\n          if (prop === void 0) {\r\n            prop = fallback;\r\n            i = length; // Ensure we don't continue iterating.\r\n          }\r\n          obj = isFunction(prop) ? prop.call(obj) : prop;\r\n        }\r\n\r\n        return obj;\r\n    }\r\n\r\n    function safeMixin() {\r\n        var args = _parseMixinArgs.apply(this, arguments);\r\n\r\n        args.sources.forEach(function(source) {\r\n            _mixin(args.target, source, args.deep, true);\r\n        });\r\n        return args.target;\r\n    }\r\n\r\n    function substitute( /*String*/ template,\r\n        /*Object|Array*/\r\n        map,\r\n        /*Function?*/\r\n        transform,\r\n        /*Object?*/\r\n        thisObject) {\r\n        // summary:\r\n        //    Performs parameterized substitutions on a string. Throws an\r\n        //    exception if any parameter is unmatched.\r\n        // template:\r\n        //    a string with expressions in the form `${key}` to be replaced or\r\n        //    `${key:format}` which specifies a format function. keys are case-sensitive.\r\n        // map:\r\n        //    hash to search for substitutions\r\n        // transform:\r\n        //    a function to process all parameters before substitution takes\r\n\r\n\r\n        thisObject = thisObject || window;\r\n        transform = transform ?\r\n            proxy(thisObject, transform) : function(v) {\r\n                return v;\r\n            };\r\n\r\n        function getObject(key, map) {\r\n            if (key.match(/\\./)) {\r\n                var retVal,\r\n                    getValue = function(keys, obj) {\r\n                        var _k = keys.pop();\r\n                        if (_k) {\r\n                            if (!obj[_k]) return null;\r\n                            return getValue(keys, retVal = obj[_k]);\r\n                        } else {\r\n                            return retVal;\r\n                        }\r\n                    };\r\n                return getValue(key.split(\".\").reverse(), map);\r\n            } else {\r\n                return map[key];\r\n            }\r\n        }\r\n\r\n        return template.replace(/\\$\\{([^\\s\\:\\}]+)(?:\\:([^\\s\\:\\}]+))?\\}/g,\r\n            function(match, key, format) {\r\n                var value = getObject(key, map);\r\n                if (format) {\r\n                    value = getObject(format, thisObject).call(thisObject, value, key);\r\n                }\r\n                return transform(value, key).toString();\r\n            }); // String\r\n    }\r\n\r\n    var _uid = 1;\r\n\r\n    function uid(obj) {\r\n        return obj._uid || (obj._uid = _uid++);\r\n    }\r\n\r\n    function uniq(array) {\r\n        return filter.call(array, function(item, idx) {\r\n            return array.indexOf(item) == idx;\r\n        })\r\n    }\r\n\r\n    var idCounter = 0;\r\n    function uniqueId (prefix) {\r\n        var id = ++idCounter + '';\r\n        return prefix ? prefix + id : id;\r\n    }\r\n\r\n    var Deferred = function() {\r\n        var self = this,\r\n            p = this.promise = new Promise(function(resolve, reject) {\r\n                self._resolve = resolve;\r\n                self._reject = reject;\r\n            }),\r\n           added = {\r\n                state : function() {\r\n                    if (self.isResolved()) {\r\n                        return 'resolved';\r\n                    }\r\n                    if (self.isRejected()) {\r\n                        return 'rejected';\r\n                    }\r\n                    return 'pending';\r\n                },\r\n                then : function(onResolved,onRejected,onProgress) {\r\n                    if (onProgress) {\r\n                        this.progress(onProgress);\r\n                    }\r\n                    return mixin(Promise.prototype.then.call(this,\r\n                            onResolved && function(args) {\r\n                                if (args && args.__ctx__ !== undefined) {\r\n                                    return onResolved.apply(args.__ctx__,args);\r\n                                } else {\r\n                                    return onResolved(args);\r\n                                }\r\n                            },\r\n                            onRejected && function(args){\r\n                                if (args && args.__ctx__ !== undefined) {\r\n                                    return onRejected.apply(args.__ctx__,args);\r\n                                } else {\r\n                                    return onRejected(args);\r\n                                }\r\n                            }),added);\r\n                },\r\n                always: function(handler) {\r\n                    //this.done(handler);\r\n                    //this.fail(handler);\r\n                    this.then(handler,handler);\r\n                    return this;\r\n                },\r\n                done : function(handler) {\r\n                    return this.then(handler);\r\n                },\r\n                fail : function(handler) { \r\n                    //return mixin(Promise.prototype.catch.call(this,handler),added);\r\n                    return this.then(null,handler);\r\n                }, \r\n                progress : function(handler) {\r\n                    self[PGLISTENERS].push(handler);\r\n                    return this;\r\n                }\r\n\r\n            };\r\n\r\n        added.pipe = added.then;\r\n        mixin(p,added);\r\n\r\n        this[PGLISTENERS] = [];\r\n\r\n        //this.resolve = Deferred.prototype.resolve.bind(this);\r\n        //this.reject = Deferred.prototype.reject.bind(this);\r\n        //this.progress = Deferred.prototype.progress.bind(this);\r\n\r\n    };\r\n\r\n    Deferred.prototype.resolve = function(value) {\r\n        var args = slice.call(arguments);\r\n        return this.resolveWith(null,args);\r\n    };\r\n\r\n    Deferred.prototype.resolveWith = function(context,args) {\r\n        args = args ? makeArray(args) : []; \r\n        args.__ctx__ = context;\r\n        this._resolve(args);\r\n        this._resolved = true;\r\n        return this;\r\n    };\r\n\r\n    Deferred.prototype.progress = function(value) {\r\n        try {\r\n          return this[PGLISTENERS].forEach(function (listener) {\r\n            return listener(value);\r\n          });\r\n        } catch (error) {\r\n          this.reject(error);\r\n        }\r\n        return this;\r\n    };\r\n\r\n    Deferred.prototype.reject = function(reason) {\r\n        var args = slice.call(arguments);\r\n        return this.rejectWith(null,args);\r\n    };\r\n\r\n    Deferred.prototype.rejectWith = function(context,args) {\r\n        args = args ? makeArray(args) : []; \r\n        args.__ctx__ = context;\r\n        this._reject(args);\r\n        this._rejected = true;\r\n        return this;\r\n    };\r\n\r\n    Deferred.prototype.isResolved = function() {\r\n        return !!this._resolved;\r\n    };\r\n\r\n    Deferred.prototype.isRejected = function() {\r\n        return !!this._rejected;\r\n    };\r\n\r\n    Deferred.prototype.then = function(callback, errback, progback) {\r\n        var p = result(this,\"promise\");\r\n        return p.then(callback, errback, progback);\r\n    };\r\n\r\n    Deferred.prototype.done  = Deferred.prototype.then;\r\n\r\n    Deferred.all = function(array) {\r\n        return Promise.all(array);\r\n    };\r\n\r\n    Deferred.first = function(array) {\r\n        return Promise.race(array);\r\n    };\r\n\r\n\r\n    Deferred.when = function(valueOrPromise, callback, errback, progback) {\r\n        var receivedPromise = valueOrPromise && typeof valueOrPromise.then === \"function\";\r\n        var nativePromise = receivedPromise && valueOrPromise instanceof Promise;\r\n\r\n        if (!receivedPromise) {\r\n            if (arguments.length > 1) {\r\n                return callback ? callback(valueOrPromise) : valueOrPromise;\r\n            } else {\r\n                return new Deferred().resolve(valueOrPromise);\r\n            }\r\n//        } else if (!nativePromise) {\r\n//            var deferred = new Deferred(valueOrPromise.cancel);\r\n//            valueOrPromise.then(deferred.resolve, deferred.reject, deferred.progress);\r\n//            valueOrPromise = deferred.promise;\r\n        }\r\n\r\n        if (callback || errback || progback) {\r\n            return valueOrPromise.then(callback, errback, progback);\r\n        }\r\n        return valueOrPromise;\r\n    };\r\n\r\n    Deferred.reject = function(err) {\r\n        var d = new Deferred();\r\n        d.reject(err);\r\n        return d.promise;\r\n    };\r\n\r\n    Deferred.resolve = function(data) {\r\n        var d = new Deferred();\r\n        d.resolve(data);\r\n        return d.promise;\r\n    };\r\n\r\n    Deferred.immediate = Deferred.resolve;\r\n\r\n    var Evented = createClass({\r\n        on: function(events, selector, data, callback, ctx, /*used internally*/ one) {\r\n            var self = this,\r\n                _hub = this._hub || (this._hub = {});\r\n\r\n            if (isPlainObject(events)) {\r\n                ctx = callback;\r\n                each(events, function(type, fn) {\r\n                    self.on(type, selector, data, fn, ctx, one);\r\n                });\r\n                return this;\r\n            }\r\n\r\n            if (!isString(selector) && !isFunction(callback)) {\r\n                ctx = callback;\r\n                callback = data;\r\n                data = selector;\r\n                selector = undefined;\r\n            }\r\n\r\n            if (isFunction(data)) {\r\n                ctx = callback;\r\n                callback = data;\r\n                data = null;\r\n            }\r\n\r\n            if (isString(events)) {\r\n                events = events.split(/\\s/)\r\n            }\r\n\r\n            events.forEach(function(name) {\r\n                (_hub[name] || (_hub[name] = [])).push({\r\n                    fn: callback,\r\n                    selector: selector,\r\n                    data: data,\r\n                    ctx: ctx,\r\n                    one: one\r\n                });\r\n            });\r\n\r\n            return this;\r\n        },\r\n\r\n        one: function(events, selector, data, callback, ctx) {\r\n            return this.on(events, selector, data, callback, ctx, 1);\r\n        },\r\n\r\n        trigger: function(e /*,argument list*/ ) {\r\n            if (!this._hub) {\r\n                return this;\r\n            }\r\n\r\n            var self = this;\r\n\r\n            if (isString(e)) {\r\n                e = new CustomEvent(e);\r\n            }\r\n\r\n            Object.defineProperty(e,\"target\",{\r\n                value : this\r\n            });\r\n\r\n            var args = slice.call(arguments, 1);\r\n            if (isDefined(args)) {\r\n                args = [e].concat(args);\r\n            } else {\r\n                args = [e];\r\n            }\r\n            [e.type || e.name, \"all\"].forEach(function(eventName) {\r\n                var listeners = self._hub[eventName];\r\n                if (!listeners) {\r\n                    return;\r\n                }\r\n\r\n                var len = listeners.length,\r\n                    reCompact = false;\r\n\r\n                for (var i = 0; i < len; i++) {\r\n                    var listener = listeners[i];\r\n                    if (e.data) {\r\n                        if (listener.data) {\r\n                            e.data = mixin({}, listener.data, e.data);\r\n                        }\r\n                    } else {\r\n                        e.data = listener.data || null;\r\n                    }\r\n                    listener.fn.apply(listener.ctx, args);\r\n                    if (listener.one) {\r\n                        listeners[i] = null;\r\n                        reCompact = true;\r\n                    }\r\n                }\r\n\r\n                if (reCompact) {\r\n                    self._hub[eventName] = compact(listeners);\r\n                }\r\n\r\n            });\r\n            return this;\r\n        },\r\n\r\n        listened: function(event) {\r\n            var evtArr = ((this._hub || (this._events = {}))[event] || []);\r\n            return evtArr.length > 0;\r\n        },\r\n\r\n        listenTo: function(obj, event, callback, /*used internally*/ one) {\r\n            if (!obj) {\r\n                return this;\r\n            }\r\n\r\n            // Bind callbacks on obj,\r\n            if (isString(callback)) {\r\n                callback = this[callback];\r\n            }\r\n\r\n            if (one) {\r\n                obj.one(event, callback, this);\r\n            } else {\r\n                obj.on(event, callback, this);\r\n            }\r\n\r\n            //keep track of them on listening.\r\n            var listeningTo = this._listeningTo || (this._listeningTo = []),\r\n                listening;\r\n\r\n            for (var i = 0; i < listeningTo.length; i++) {\r\n                if (listeningTo[i].obj == obj) {\r\n                    listening = listeningTo[i];\r\n                    break;\r\n                }\r\n            }\r\n            if (!listening) {\r\n                listeningTo.push(\r\n                    listening = {\r\n                        obj: obj,\r\n                        events: {}\r\n                    }\r\n                );\r\n            }\r\n            var listeningEvents = listening.events,\r\n                listeningEvent = listeningEvents[event] = listeningEvents[event] || [];\r\n            if (listeningEvent.indexOf(callback) == -1) {\r\n                listeningEvent.push(callback);\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        listenToOnce: function(obj, event, callback) {\r\n            return this.listenTo(obj, event, callback, 1);\r\n        },\r\n\r\n        off: function(events, callback) {\r\n            var _hub = this._hub || (this._hub = {});\r\n            if (isString(events)) {\r\n                events = events.split(/\\s/)\r\n            }\r\n\r\n            events.forEach(function(name) {\r\n                var evts = _hub[name];\r\n                var liveEvents = [];\r\n\r\n                if (evts && callback) {\r\n                    for (var i = 0, len = evts.length; i < len; i++) {\r\n                        if (evts[i].fn !== callback && evts[i].fn._ !== callback)\r\n                            liveEvents.push(evts[i]);\r\n                    }\r\n                }\r\n\r\n                if (liveEvents.length) {\r\n                    _hub[name] = liveEvents;\r\n                } else {\r\n                    delete _hub[name];\r\n                }\r\n            });\r\n\r\n            return this;\r\n        },\r\n        unlistenTo: function(obj, event, callback) {\r\n            var listeningTo = this._listeningTo;\r\n            if (!listeningTo) {\r\n                return this;\r\n            }\r\n            for (var i = 0; i < listeningTo.length; i++) {\r\n                var listening = listeningTo[i];\r\n\r\n                if (obj && obj != listening.obj) {\r\n                    continue;\r\n                }\r\n\r\n                var listeningEvents = listening.events;\r\n                for (var eventName in listeningEvents) {\r\n                    if (event && event != eventName) {\r\n                        continue;\r\n                    }\r\n\r\n                    var listeningEvent = listeningEvents[eventName];\r\n\r\n                    for (var j = 0; j < listeningEvent.length; j++) {\r\n                        if (!callback || callback == listeningEvent[i]) {\r\n                            listening.obj.off(eventName, listeningEvent[i], this);\r\n                            listeningEvent[i] = null;\r\n                        }\r\n                    }\r\n\r\n                    listeningEvent = listeningEvents[eventName] = compact(listeningEvent);\r\n\r\n                    if (isEmptyObject(listeningEvent)) {\r\n                        listeningEvents[eventName] = null;\r\n                    }\r\n\r\n                }\r\n\r\n                if (isEmptyObject(listeningEvents)) {\r\n                    listeningTo[i] = null;\r\n                }\r\n            }\r\n\r\n            listeningTo = this._listeningTo = compact(listeningTo);\r\n            if (isEmptyObject(listeningTo)) {\r\n                this._listeningTo = null;\r\n            }\r\n\r\n            return this;\r\n        }\r\n    });\r\n\r\n    var Stateful = Evented.inherit({\r\n        init : function(attributes, options) {\r\n            var attrs = attributes || {};\r\n            options || (options = {});\r\n            this.cid = uniqueId(this.cidPrefix);\r\n            this.attributes = {};\r\n            if (options.collection) this.collection = options.collection;\r\n            if (options.parse) attrs = this.parse(attrs, options) || {};\r\n            var defaults = result(this, 'defaults');\r\n            attrs = mixin({}, defaults, attrs);\r\n            this.set(attrs, options);\r\n            this.changed = {};\r\n        },\r\n\r\n        // A hash of attributes whose current and previous value differ.\r\n        changed: null,\r\n\r\n        // The value returned during the last failed validation.\r\n        validationError: null,\r\n\r\n        // The default name for the JSON `id` attribute is `\"id\"`. MongoDB and\r\n        // CouchDB users may want to set this to `\"_id\"`.\r\n        idAttribute: 'id',\r\n\r\n        // The prefix is used to create the client id which is used to identify models locally.\r\n        // You may want to override this if you're experiencing name clashes with model ids.\r\n        cidPrefix: 'c',\r\n\r\n\r\n        // Return a copy of the model's `attributes` object.\r\n        toJSON: function(options) {\r\n          return clone(this.attributes);\r\n        },\r\n\r\n\r\n        // Get the value of an attribute.\r\n        get: function(attr) {\r\n          return this.attributes[attr];\r\n        },\r\n\r\n        // Returns `true` if the attribute contains a value that is not null\r\n        // or undefined.\r\n        has: function(attr) {\r\n          return this.get(attr) != null;\r\n        },\r\n\r\n        // Set a hash of model attributes on the object, firing `\"change\"`. This is\r\n        // the core primitive operation of a model, updating the data and notifying\r\n        // anyone who needs to know about the change in state. The heart of the beast.\r\n        set: function(key, val, options) {\r\n          if (key == null) return this;\r\n\r\n          // Handle both `\"key\", value` and `{key: value}` -style arguments.\r\n          var attrs;\r\n          if (typeof key === 'object') {\r\n            attrs = key;\r\n            options = val;\r\n          } else {\r\n            (attrs = {})[key] = val;\r\n          }\r\n\r\n          options || (options = {});\r\n\r\n          // Run validation.\r\n          if (!this._validate(attrs, options)) return false;\r\n\r\n          // Extract attributes and options.\r\n          var unset      = options.unset;\r\n          var silent     = options.silent;\r\n          var changes    = [];\r\n          var changing   = this._changing;\r\n          this._changing = true;\r\n\r\n          if (!changing) {\r\n            this._previousAttributes = clone(this.attributes);\r\n            this.changed = {};\r\n          }\r\n\r\n          var current = this.attributes;\r\n          var changed = this.changed;\r\n          var prev    = this._previousAttributes;\r\n\r\n          // For each `set` attribute, update or delete the current value.\r\n          for (var attr in attrs) {\r\n            val = attrs[attr];\r\n            if (!isEqual(current[attr], val)) changes.push(attr);\r\n            if (!isEqual(prev[attr], val)) {\r\n              changed[attr] = val;\r\n            } else {\r\n              delete changed[attr];\r\n            }\r\n            unset ? delete current[attr] : current[attr] = val;\r\n          }\r\n\r\n          // Update the `id`.\r\n          if (this.idAttribute in attrs) this.id = this.get(this.idAttribute);\r\n\r\n          // Trigger all relevant attribute changes.\r\n          if (!silent) {\r\n            if (changes.length) this._pending = options;\r\n            for (var i = 0; i < changes.length; i++) {\r\n              this.trigger('change:' + changes[i], this, current[changes[i]], options);\r\n            }\r\n          }\r\n\r\n          // You might be wondering why there's a `while` loop here. Changes can\r\n          // be recursively nested within `\"change\"` events.\r\n          if (changing) return this;\r\n          if (!silent) {\r\n            while (this._pending) {\r\n              options = this._pending;\r\n              this._pending = false;\r\n              this.trigger('change', this, options);\r\n            }\r\n          }\r\n          this._pending = false;\r\n          this._changing = false;\r\n          return this;\r\n        },\r\n\r\n        // Remove an attribute from the model, firing `\"change\"`. `unset` is a noop\r\n        // if the attribute doesn't exist.\r\n        unset: function(attr, options) {\r\n          return this.set(attr, void 0, mixin({}, options, {unset: true}));\r\n        },\r\n\r\n        // Clear all attributes on the model, firing `\"change\"`.\r\n        clear: function(options) {\r\n          var attrs = {};\r\n          for (var key in this.attributes) attrs[key] = void 0;\r\n          return this.set(attrs, mixin({}, options, {unset: true}));\r\n        },\r\n\r\n        // Determine if the model has changed since the last `\"change\"` event.\r\n        // If you specify an attribute name, determine if that attribute has changed.\r\n        hasChanged: function(attr) {\r\n          if (attr == null) return !isEmptyObject(this.changed);\r\n          return this.changed[attr] !== undefined;\r\n        },\r\n\r\n        // Return an object containing all the attributes that have changed, or\r\n        // false if there are no changed attributes. Useful for determining what\r\n        // parts of a view need to be updated and/or what attributes need to be\r\n        // persisted to the server. Unset attributes will be set to undefined.\r\n        // You can also pass an attributes object to diff against the model,\r\n        // determining if there *would be* a change.\r\n        changedAttributes: function(diff) {\r\n          if (!diff) return this.hasChanged() ? clone(this.changed) : false;\r\n          var old = this._changing ? this._previousAttributes : this.attributes;\r\n          var changed = {};\r\n          for (var attr in diff) {\r\n            var val = diff[attr];\r\n            if (isEqual(old[attr], val)) continue;\r\n            changed[attr] = val;\r\n          }\r\n          return !isEmptyObject(changed) ? changed : false;\r\n        },\r\n\r\n        // Get the previous value of an attribute, recorded at the time the last\r\n        // `\"change\"` event was fired.\r\n        previous: function(attr) {\r\n          if (attr == null || !this._previousAttributes) return null;\r\n          return this._previousAttributes[attr];\r\n        },\r\n\r\n        // Get all of the attributes of the model at the time of the previous\r\n        // `\"change\"` event.\r\n        previousAttributes: function() {\r\n          return clone(this._previousAttributes);\r\n        },\r\n\r\n        // Create a new model with identical attributes to this one.\r\n        clone: function() {\r\n          return new this.constructor(this.attributes);\r\n        },\r\n\r\n        // A model is new if it has never been saved to the server, and lacks an id.\r\n        isNew: function() {\r\n          return !this.has(this.idAttribute);\r\n        },\r\n\r\n        // Check if the model is currently in a valid state.\r\n        isValid: function(options) {\r\n          return this._validate({}, mixin({}, options, {validate: true}));\r\n        },\r\n\r\n        // Run validation against the next complete set of model attributes,\r\n        // returning `true` if all is well. Otherwise, fire an `\"invalid\"` event.\r\n        _validate: function(attrs, options) {\r\n          if (!options.validate || !this.validate) return true;\r\n          attrs = mixin({}, this.attributes, attrs);\r\n          var error = this.validationError = this.validate(attrs, options) || null;\r\n          if (!error) return true;\r\n          this.trigger('invalid', this, error, mixin(options, {validationError: error}));\r\n          return false;\r\n        }\r\n    });\r\n\r\n    var SimpleQueryEngine = function(query, options){\r\n        // summary:\r\n        //      Simple query engine that matches using filter functions, named filter\r\n        //      functions or objects by name-value on a query object hash\r\n        //\r\n        // description:\r\n        //      The SimpleQueryEngine provides a way of getting a QueryResults through\r\n        //      the use of a simple object hash as a filter.  The hash will be used to\r\n        //      match properties on data objects with the corresponding value given. In\r\n        //      other words, only exact matches will be returned.\r\n        //\r\n        //      This function can be used as a template for more complex query engines;\r\n        //      for example, an engine can be created that accepts an object hash that\r\n        //      contains filtering functions, or a string that gets evaluated, etc.\r\n        //\r\n        //      When creating a new dojo.store, simply set the store's queryEngine\r\n        //      field as a reference to this function.\r\n        //\r\n        // query: Object\r\n        //      An object hash with fields that may match fields of items in the store.\r\n        //      Values in the hash will be compared by normal == operator, but regular expressions\r\n        //      or any object that provides a test() method are also supported and can be\r\n        //      used to match strings by more complex expressions\r\n        //      (and then the regex's or object's test() method will be used to match values).\r\n        //\r\n        // options: dojo/store/api/Store.QueryOptions?\r\n        //      An object that contains optional information such as sort, start, and count.\r\n        //\r\n        // returns: Function\r\n        //      A function that caches the passed query under the field \"matches\".  See any\r\n        //      of the \"query\" methods on dojo.stores.\r\n        //\r\n        // example:\r\n        //      Define a store with a reference to this engine, and set up a query method.\r\n        //\r\n        //  |   var myStore = function(options){\r\n        //  |       //  ...more properties here\r\n        //  |       this.queryEngine = SimpleQueryEngine;\r\n        //  |       //  define our query method\r\n        //  |       this.query = function(query, options){\r\n        //  |           return QueryResults(this.queryEngine(query, options)(this.data));\r\n        //  |       };\r\n        //  |   };\r\n\r\n        // create our matching query function\r\n        switch(typeof query){\r\n            default:\r\n                throw new Error(\"Can not query with a \" + typeof query);\r\n            case \"object\": case \"undefined\":\r\n                var queryObject = query;\r\n                query = function(object){\r\n                    for(var key in queryObject){\r\n                        var required = queryObject[key];\r\n                        if(required && required.test){\r\n                            // an object can provide a test method, which makes it work with regex\r\n                            if(!required.test(object[key], object)){\r\n                                return false;\r\n                            }\r\n                        }else if(required != object[key]){\r\n                            return false;\r\n                        }\r\n                    }\r\n                    return true;\r\n                };\r\n                break;\r\n            case \"string\":\r\n                // named query\r\n                if(!this[query]){\r\n                    throw new Error(\"No filter function \" + query + \" was found in store\");\r\n                }\r\n                query = this[query];\r\n                // fall through\r\n            case \"function\":\r\n                // fall through\r\n        }\r\n        \r\n        function filter(arr, callback, thisObject){\r\n            // summary:\r\n            //      Returns a new Array with those items from arr that match the\r\n            //      condition implemented by callback.\r\n            // arr: Array\r\n            //      the array to iterate over.\r\n            // callback: Function|String\r\n            //      a function that is invoked with three arguments (item,\r\n            //      index, array). The return of this function is expected to\r\n            //      be a boolean which determines whether the passed-in item\r\n            //      will be included in the returned array.\r\n            // thisObject: Object?\r\n            //      may be used to scope the call to callback\r\n            // returns: Array\r\n            // description:\r\n            //      This function corresponds to the JavaScript 1.6 Array.filter() method, with one difference: when\r\n            //      run over sparse arrays, this implementation passes the \"holes\" in the sparse array to\r\n            //      the callback function with a value of undefined. JavaScript 1.6's filter skips the holes in the sparse array.\r\n            //      For more details, see:\r\n            //      https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Objects/Array/filter\r\n            // example:\r\n            //  | // returns [2, 3, 4]\r\n            //  | array.filter([1, 2, 3, 4], function(item){ return item>1; });\r\n\r\n            // TODO: do we need \"Ctr\" here like in map()?\r\n            var i = 0, l = arr && arr.length || 0, out = [], value;\r\n            if(l && typeof arr == \"string\") arr = arr.split(\"\");\r\n            if(typeof callback == \"string\") callback = cache[callback] || buildFn(callback);\r\n            if(thisObject){\r\n                for(; i < l; ++i){\r\n                    value = arr[i];\r\n                    if(callback.call(thisObject, value, i, arr)){\r\n                        out.push(value);\r\n                    }\r\n                }\r\n            }else{\r\n                for(; i < l; ++i){\r\n                    value = arr[i];\r\n                    if(callback(value, i, arr)){\r\n                        out.push(value);\r\n                    }\r\n                }\r\n            }\r\n            return out; // Array\r\n        }\r\n\r\n        function execute(array){\r\n            // execute the whole query, first we filter\r\n            var results = filter(array, query);\r\n            // next we sort\r\n            var sortSet = options && options.sort;\r\n            if(sortSet){\r\n                results.sort(typeof sortSet == \"function\" ? sortSet : function(a, b){\r\n                    for(var sort, i=0; sort = sortSet[i]; i++){\r\n                        var aValue = a[sort.attribute];\r\n                        var bValue = b[sort.attribute];\r\n                        // valueOf enables proper comparison of dates\r\n                        aValue = aValue != null ? aValue.valueOf() : aValue;\r\n                        bValue = bValue != null ? bValue.valueOf() : bValue;\r\n                        if (aValue != bValue){\r\n                            // modified by lwf 2016/07/09\r\n                            //return !!sort.descending == (aValue == null || aValue > bValue) ? -1 : 1;\r\n                            return !!sort.descending == (aValue == null || aValue > bValue) ? -1 : 1;\r\n                        }\r\n                    }\r\n                    return 0;\r\n                });\r\n            }\r\n            // now we paginate\r\n            if(options && (options.start || options.count)){\r\n                var total = results.length;\r\n                results = results.slice(options.start || 0, (options.start || 0) + (options.count || Infinity));\r\n                results.total = total;\r\n            }\r\n            return results;\r\n        }\r\n        execute.matches = query;\r\n        return execute;\r\n    };\r\n\r\n    var QueryResults = function(results){\r\n        // summary:\r\n        //      A function that wraps the results of a store query with additional\r\n        //      methods.\r\n        // description:\r\n        //      QueryResults is a basic wrapper that allows for array-like iteration\r\n        //      over any kind of returned data from a query.  While the simplest store\r\n        //      will return a plain array of data, other stores may return deferreds or\r\n        //      promises; this wrapper makes sure that *all* results can be treated\r\n        //      the same.\r\n        //\r\n        //      Additional methods include `forEach`, `filter` and `map`.\r\n        // results: Array|dojo/promise/Promise\r\n        //      The result set as an array, or a promise for an array.\r\n        // returns:\r\n        //      An array-like object that can be used for iterating over.\r\n        // example:\r\n        //      Query a store and iterate over the results.\r\n        //\r\n        //  |   store.query({ prime: true }).forEach(function(item){\r\n        //  |       //  do something\r\n        //  |   });\r\n\r\n        if(!results){\r\n            return results;\r\n        }\r\n\r\n        var isPromise = !!results.then;\r\n        // if it is a promise it may be frozen\r\n        if(isPromise){\r\n            results = Object.delegate(results);\r\n        }\r\n        function addIterativeMethod(method){\r\n            // Always add the iterative methods so a QueryResults is\r\n            // returned whether the environment is ES3 or ES5\r\n            results[method] = function(){\r\n                var args = arguments;\r\n                var result = Deferred.when(results, function(results){\r\n                    //Array.prototype.unshift.call(args, results);\r\n                    return QueryResults(Array.prototype[method].apply(results, args));\r\n                });\r\n                // forEach should only return the result of when()\r\n                // when we're wrapping a promise\r\n                if(method !== \"forEach\" || isPromise){\r\n                    return result;\r\n                }\r\n            };\r\n        }\r\n\r\n        addIterativeMethod(\"forEach\");\r\n        addIterativeMethod(\"filter\");\r\n        addIterativeMethod(\"map\");\r\n        if(results.total == null){\r\n            results.total = Deferred.when(results, function(results){\r\n                return results.length;\r\n            });\r\n        }\r\n        return results; // Object\r\n    };\r\n\r\n    var async = {\r\n        parallel : function(arr,args,ctx) {\r\n            var rets = [];\r\n            ctx = ctx || null;\r\n            args = args || [];\r\n\r\n            each(arr,function(i,func){\r\n                rets.push(func.apply(ctx,args));\r\n            });\r\n\r\n            return Deferred.all(rets);\r\n        },\r\n\r\n        series : function(arr,args,ctx) {\r\n            var rets = [],\r\n                d = new Deferred(),\r\n                p = d.promise;\r\n\r\n            ctx = ctx || null;\r\n            args = args || [];\r\n\r\n            d.resolve();\r\n            each(arr,function(i,func){\r\n                p = p.then(function(){\r\n                    return func.apply(ctx,args);\r\n                });\r\n                rets.push(p);\r\n            });\r\n\r\n            return Deferred.all(rets);\r\n        },\r\n\r\n        waterful : function(arr,args,ctx) {\r\n            var d = new Deferred(),\r\n                p = d.promise;\r\n\r\n            ctx = ctx || null;\r\n            args = args || [];\r\n\r\n            d.resolveWith(ctx,args);\r\n\r\n            each(arr,function(i,func){\r\n                p = p.then(func);\r\n            });\r\n            return p;\r\n        }\r\n    };\r\n\r\n    var ArrayStore = createClass({\r\n        \"klassName\": \"ArrayStore\",\r\n\r\n        \"queryEngine\": SimpleQueryEngine,\r\n        \r\n        \"idProperty\": \"id\",\r\n\r\n\r\n        get: function(id){\r\n            // summary:\r\n            //      Retrieves an object by its identity\r\n            // id: Number\r\n            //      The identity to use to lookup the object\r\n            // returns: Object\r\n            //      The object in the store that matches the given id.\r\n            return this.data[this.index[id]];\r\n        },\r\n\r\n        getIdentity: function(object){\r\n            return object[this.idProperty];\r\n        },\r\n\r\n        put: function(object, options){\r\n            var data = this.data,\r\n                index = this.index,\r\n                idProperty = this.idProperty;\r\n            var id = object[idProperty] = (options && \"id\" in options) ? options.id : idProperty in object ? object[idProperty] : Math.random();\r\n            if(id in index){\r\n                // object exists\r\n                if(options && options.overwrite === false){\r\n                    throw new Error(\"Object already exists\");\r\n                }\r\n                // replace the entry in data\r\n                data[index[id]] = object;\r\n            }else{\r\n                // add the new object\r\n                index[id] = data.push(object) - 1;\r\n            }\r\n            return id;\r\n        },\r\n\r\n        add: function(object, options){\r\n            (options = options || {}).overwrite = false;\r\n            // call put with overwrite being false\r\n            return this.put(object, options);\r\n        },\r\n\r\n        remove: function(id){\r\n            // summary:\r\n            //      Deletes an object by its identity\r\n            // id: Number\r\n            //      The identity to use to delete the object\r\n            // returns: Boolean\r\n            //      Returns true if an object was removed, falsy (undefined) if no object matched the id\r\n            var index = this.index;\r\n            var data = this.data;\r\n            if(id in index){\r\n                data.splice(index[id], 1);\r\n                // now we have to reindex\r\n                this.setData(data);\r\n                return true;\r\n            }\r\n        },\r\n        query: function(query, options){\r\n            // summary:\r\n            //      Queries the store for objects.\r\n            // query: Object\r\n            //      The query to use for retrieving objects from the store.\r\n            // options: dojo/store/api/Store.QueryOptions?\r\n            //      The optional arguments to apply to the resultset.\r\n            // returns: dojo/store/api/Store.QueryResults\r\n            //      The results of the query, extended with iterative methods.\r\n            //\r\n            // example:\r\n            //      Given the following store:\r\n            //\r\n            //  |   var store = new Memory({\r\n            //  |       data: [\r\n            //  |           {id: 1, name: \"one\", prime: false },\r\n            //  |           {id: 2, name: \"two\", even: true, prime: true},\r\n            //  |           {id: 3, name: \"three\", prime: true},\r\n            //  |           {id: 4, name: \"four\", even: true, prime: false},\r\n            //  |           {id: 5, name: \"five\", prime: true}\r\n            //  |       ]\r\n            //  |   });\r\n            //\r\n            //  ...find all items where \"prime\" is true:\r\n            //\r\n            //  |   var results = store.query({ prime: true });\r\n            //\r\n            //  ...or find all items where \"even\" is true:\r\n            //\r\n            //  |   var results = store.query({ even: true });\r\n            return QueryResults(this.queryEngine(query, options)(this.data));\r\n        },\r\n\r\n        setData: function(data){\r\n            // summary:\r\n            //      Sets the given data as the source for this store, and indexes it\r\n            // data: Object[]\r\n            //      An array of objects to use as the source of data.\r\n            if(data.items){\r\n                // just for convenience with the data format IFRS expects\r\n                this.idProperty = data.identifier || this.idProperty;\r\n                data = this.data = data.items;\r\n            }else{\r\n                this.data = data;\r\n            }\r\n            this.index = {};\r\n            for(var i = 0, l = data.length; i < l; i++){\r\n                this.index[data[i][this.idProperty]] = i;\r\n            }\r\n        },\r\n\r\n        init: function(options) {\r\n            for(var i in options){\r\n                this[i] = options[i];\r\n            }\r\n            this.setData(this.data || []);\r\n        }\r\n\r\n    });\r\n\r\n    var Xhr = (function(){\r\n        var jsonpID = 0,\r\n            key,\r\n            name,\r\n            rscript = /<script\\b[^<]*(?:(?!<\\/script>)<[^<]*)*<\\/script>/gi,\r\n            scriptTypeRE = /^(?:text|application)\\/javascript/i,\r\n            xmlTypeRE = /^(?:text|application)\\/xml/i,\r\n            jsonType = 'application/json',\r\n            htmlType = 'text/html',\r\n            blankRE = /^\\s*$/;\r\n\r\n        var XhrDefaultOptions = {\r\n            async: true,\r\n\r\n            // Default type of request\r\n            type: 'GET',\r\n            // Callback that is executed before request\r\n            beforeSend: noop,\r\n            // Callback that is executed if the request succeeds\r\n            success: noop,\r\n            // Callback that is executed the the server drops error\r\n            error: noop,\r\n            // Callback that is executed on request complete (both: error and success)\r\n            complete: noop,\r\n            // The context for the callbacks\r\n            context: null,\r\n            // Whether to trigger \"global\" Ajax events\r\n            global: true,\r\n\r\n            // MIME types mapping\r\n            // IIS returns Javascript as \"application/x-javascript\"\r\n            accepts: {\r\n                script: 'text/javascript, application/javascript, application/x-javascript',\r\n                json: 'application/json',\r\n                xml: 'application/xml, text/xml',\r\n                html: 'text/html',\r\n                text: 'text/plain'\r\n            },\r\n            // Whether the request is to another domain\r\n            crossDomain: false,\r\n            // Default timeout\r\n            timeout: 0,\r\n            // Whether data should be serialized to string\r\n            processData: true,\r\n            // Whether the browser should be allowed to cache GET responses\r\n            cache: true,\r\n\r\n            xhrFields : {\r\n                withCredentials : true\r\n            }\r\n        };\r\n\r\n        function mimeToDataType(mime) {\r\n            if (mime) {\r\n                mime = mime.split(';', 2)[0];\r\n            }\r\n            if (mime) {\r\n                if (mime == htmlType) {\r\n                    return \"html\";\r\n                } else if (mime == jsonType) {\r\n                    return \"json\";\r\n                } else if (scriptTypeRE.test(mime)) {\r\n                    return \"script\";\r\n                } else if (xmlTypeRE.test(mime)) {\r\n                    return \"xml\";\r\n                }\r\n            }\r\n            return \"text\";\r\n        }\r\n\r\n        function appendQuery(url, query) {\r\n            if (query == '') return url\r\n            return (url + '&' + query).replace(/[&?]{1,2}/, '?')\r\n        }\r\n\r\n        // serialize payload and append it to the URL for GET requests\r\n        function serializeData(options) {\r\n            options.data = options.data || options.query;\r\n            if (options.processData && options.data && type(options.data) != \"string\") {\r\n                options.data = param(options.data, options.traditional);\r\n            }\r\n            if (options.data && (!options.type || options.type.toUpperCase() == 'GET')) {\r\n                options.url = appendQuery(options.url, options.data);\r\n                options.data = undefined;\r\n            }\r\n        }\r\n\r\n        function serialize(params, obj, traditional, scope) {\r\n            var t, array = isArray(obj),\r\n                hash = isPlainObject(obj)\r\n            each(obj, function(key, value) {\r\n                t =type(value);\r\n                if (scope) key = traditional ? scope :\r\n                    scope + '[' + (hash || t == 'object' || t == 'array' ? key : '') + ']'\r\n                // handle data in serializeArray() format\r\n                if (!scope && array) params.add(value.name, value.value)\r\n                // recurse into nested objects\r\n                else if (t == \"array\" || (!traditional && t == \"object\"))\r\n                    serialize(params, value, traditional, key)\r\n                else params.add(key, value)\r\n            })\r\n        }\r\n\r\n        var param = function(obj, traditional) {\r\n            var params = []\r\n            params.add = function(key, value) {\r\n                if (isFunction(value)) value = value()\r\n                if (value == null) value = \"\"\r\n                this.push(escape(key) + '=' + escape(value))\r\n            }\r\n            serialize(params, obj, traditional)\r\n            return params.join('&').replace(/%20/g, '+')\r\n        };\r\n\r\n        var Xhr = Evented.inherit({\r\n            klassName : \"Xhr\",\r\n\r\n            _request  : function(args) {\r\n                var _ = this._,\r\n                    self = this,\r\n                    options = mixin({},XhrDefaultOptions,_.options,args),\r\n                    xhr = _.xhr = new XMLHttpRequest();\r\n\r\n                serializeData(options)\r\n\r\n                var dataType = options.dataType || options.handleAs,\r\n                    mime = options.mimeType || options.accepts[dataType],\r\n                    headers = options.headers,\r\n                    xhrFields = options.xhrFields,\r\n                    isFormData = options.data && options.data instanceof FormData,\r\n                    basicAuthorizationToken = options.basicAuthorizationToken,\r\n                    type = options.type,\r\n                    url = options.url,\r\n                    async = options.async,\r\n                    user = options.user , \r\n                    password = options.password,\r\n                    deferred = new Deferred(),\r\n                    contentType = isFormData ? false : 'application/x-www-form-urlencoded';\r\n\r\n                if (xhrFields) {\r\n                    for (name in xhrFields) {\r\n                        xhr[name] = xhrFields[name];\r\n                    }\r\n                }\r\n\r\n                if (mime && mime.indexOf(',') > -1) {\r\n                    mime = mime.split(',', 2)[0];\r\n                }\r\n                if (mime && xhr.overrideMimeType) {\r\n                    xhr.overrideMimeType(mime);\r\n                }\r\n\r\n                //if (dataType) {\r\n                //    xhr.responseType = dataType;\r\n                //}\r\n\r\n                var finish = function() {\r\n                    xhr.onloadend = noop;\r\n                    xhr.onabort = noop;\r\n                    xhr.onprogress = noop;\r\n                    xhr.ontimeout = noop;\r\n                    xhr = null;\r\n                }\r\n                var onloadend = function() {\r\n                    var result, error = false\r\n                    if ((xhr.status >= 200 && xhr.status < 300) || xhr.status == 304 || (xhr.status == 0 && getAbsoluteUrl(url).startsWith('file:'))) {\r\n                        dataType = dataType || mimeToDataType(options.mimeType || xhr.getResponseHeader('content-type'));\r\n\r\n                        result = xhr.responseText;\r\n                        try {\r\n                            if (dataType == 'script') {\r\n                                eval(result);\r\n                            } else if (dataType == 'xml') {\r\n                                result = xhr.responseXML;\r\n                            } else if (dataType == 'json') {\r\n                                result = blankRE.test(result) ? null : JSON.parse(result);\r\n                            } else if (dataType == \"blob\") {\r\n                                result = Blob([xhrObj.response]);\r\n                            } else if (dataType == \"arraybuffer\") {\r\n                                result = xhr.reponse;\r\n                            }\r\n                        } catch (e) { \r\n                            error = e;\r\n                        }\r\n\r\n                        if (error) {\r\n                            deferred.reject(error,xhr.status,xhr);\r\n                        } else {\r\n                            deferred.resolve(result,xhr.status,xhr);\r\n                        }\r\n                    } else {\r\n                        deferred.reject(new Error(xhr.statusText),xhr.status,xhr);\r\n                    }\r\n                    finish();\r\n                };\r\n\r\n                var onabort = function() {\r\n                    if (deferred) {\r\n                        deferred.reject(new Error(\"abort\"),xhr.status,xhr);\r\n                    }\r\n                    finish();                 \r\n                }\r\n \r\n                var ontimeout = function() {\r\n                    if (deferred) {\r\n                        deferred.reject(new Error(\"timeout\"),xhr.status,xhr);\r\n                    }\r\n                    finish();                 \r\n                }\r\n\r\n                var onprogress = function(evt) {\r\n                    if (deferred) {\r\n                        deferred.progress(evt,xhr.status,xhr);\r\n                    }\r\n                }\r\n\r\n                xhr.onloadend = onloadend;\r\n                xhr.onabort = onabort;\r\n                xhr.ontimeout = ontimeout;\r\n                xhr.onprogress = onprogress;\r\n\r\n                xhr.open(type, url, async, user, password);\r\n               \r\n                if (headers) {\r\n                    for ( var key in headers) {\r\n                        var value = headers[key];\r\n \r\n                        if(key.toLowerCase() === 'content-type'){\r\n                            contentType = headers[hdr];\r\n                        } else {\r\n                           xhr.setRequestHeader(key, value);\r\n                        }\r\n                    }\r\n                }   \r\n\r\n                if  (contentType && contentType !== false){\r\n                    xhr.setRequestHeader('Content-Type', contentType);\r\n                }\r\n\r\n                if(!headers || !('X-Requested-With' in headers)){\r\n                    xhr.setRequestHeader('X-Requested-With', 'XMLHttpRequest');\r\n                }\r\n\r\n\r\n                //If basicAuthorizationToken is defined set its value into \"Authorization\" header\r\n                if (basicAuthorizationToken) {\r\n                    xhr.setRequestHeader(\"Authorization\", basicAuthorizationToken);\r\n                }\r\n\r\n                xhr.send(options.data ? options.data : null);\r\n\r\n                return deferred.promise;\r\n\r\n            },\r\n\r\n            \"abort\": function() {\r\n                var _ = this._,\r\n                    xhr = _.xhr;\r\n\r\n                if (xhr) {\r\n                    xhr.abort();\r\n                }    \r\n            },\r\n\r\n\r\n            \"request\": function(args) {\r\n                return this._request(args);\r\n            },\r\n\r\n            get : function(args) {\r\n                args = args || {};\r\n                args.type = \"GET\";\r\n                return this._request(args);\r\n            },\r\n\r\n            post : function(args) {\r\n                args = args || {};\r\n                args.type = \"POST\";\r\n                return this._request(args);\r\n            },\r\n\r\n            patch : function(args) {\r\n                args = args || {};\r\n                args.type = \"PATCH\";\r\n                return this._request(args);\r\n            },\r\n\r\n            put : function(args) {\r\n                args = args || {};\r\n                args.type = \"PUT\";\r\n                return this._request(args);\r\n            },\r\n\r\n            del : function(args) {\r\n                args = args || {};\r\n                args.type = \"DELETE\";\r\n                return this._request(args);\r\n            },\r\n\r\n            \"init\": function(options) {\r\n                this._ = {\r\n                    options : options || {}\r\n                };\r\n            }\r\n        });\r\n\r\n        [\"request\",\"get\",\"post\",\"put\",\"del\",\"patch\"].forEach(function(name){\r\n            Xhr[name] = function(url,args) {\r\n                var xhr = new Xhr({\"url\" : url});\r\n                return xhr[name](args);\r\n            };\r\n        });\r\n\r\n        Xhr.defaultOptions = XhrDefaultOptions;\r\n        Xhr.param = param;\r\n\r\n        return Xhr;\r\n    })();\r\n\r\n    var Restful = Evented.inherit({\r\n        \"klassName\" : \"Restful\",\r\n\r\n        \"idAttribute\": \"id\",\r\n        \r\n        getBaseUrl : function(args) {\r\n            //$$baseEndpoint : \"/files/${fileId}/comments\",\r\n            var baseEndpoint = String.substitute(this.baseEndpoint,args),\r\n                baseUrl = this.server + this.basePath + baseEndpoint;\r\n            if (args[this.idAttribute]!==undefined) {\r\n                baseUrl = baseUrl + \"/\" + args[this.idAttribute]; \r\n            }\r\n            return baseUrl;\r\n        },\r\n        _head : function(args) {\r\n            //get resource metadata .\r\n            //args : id and other info for the resource ,ex\r\n            //{\r\n            //  \"id\" : 234,  // the own id, required\r\n            //  \"fileId\"   : 2 // the parent resource id, option by resource\r\n            //}\r\n        },\r\n        _get : function(args) {\r\n            //get resource ,one or list .\r\n            //args : id and other info for the resource ,ex\r\n            //{\r\n            //  \"id\" : 234,  // the own id, null if list\r\n            //  \"fileId\"   : 2 // the parent resource id, option by resource\r\n            //}\r\n            return Xhr.get(this.getBaseUrl(args),args);\r\n        },\r\n        _post  : function(args,verb) {\r\n            //create or move resource .\r\n            //args : id and other info for the resource ,ex\r\n            //{\r\n            //  \"id\" : 234,  // the own id, required\r\n            //  \"data\" : body // the own data,required\r\n            //  \"fileId\"   : 2 // the parent resource id, option by resource\r\n            //}\r\n            //verb : the verb ,ex: copy,touch,trash,untrash,watch\r\n            var url = this.getBaseUrl(args);\r\n            if (verb) {\r\n                url = url + \"/\" + verb;\r\n            }\r\n            return Xhr.post(url, args);\r\n        },\r\n\r\n        _put  : function(args,verb) {\r\n            //update resource .\r\n            //args : id and other info for the resource ,ex\r\n            //{\r\n            //  \"id\" : 234,  // the own id, required\r\n            //  \"data\" : body // the own data,required\r\n            //  \"fileId\"   : 2 // the parent resource id, option by resource\r\n            //}\r\n            //verb : the verb ,ex: copy,touch,trash,untrash,watch\r\n            var url = this.getBaseUrl(args);\r\n            if (verb) {\r\n                url = url + \"/\" + verb;\r\n            }\r\n            return Xhr.put(url, args);\r\n        },\r\n\r\n        _delete : function(args) {\r\n            //delete resource . \r\n            //args : id and other info for the resource ,ex\r\n            //{\r\n            //  \"id\" : 234,  // the own id, required\r\n            //  \"fileId\"   : 2 // the parent resource id, option by resource\r\n            //}         \r\n\r\n            // HTTP request : DELETE http://center.utilhub.com/registry/v1/apps/{appid}\r\n            var url = this.getBaseUrl(args);\r\n            return Xhr.del(url);\r\n        },\r\n\r\n        _patch : function(args){\r\n            //update resource metadata. \r\n            //args : id and other info for the resource ,ex\r\n            //{\r\n            //  \"id\" : 234,  // the own id, required\r\n            //  \"data\" : body // the own data,required\r\n            //  \"fileId\"   : 2 // the parent resource id, option by resource\r\n            //}\r\n            var url = this.getBaseUrl(args);\r\n            return Xhr.patch(url, args);\r\n        },\r\n        query: function(params) {\r\n            \r\n            return this._post(params);\r\n        },\r\n\r\n        retrieve: function(params) {\r\n            return this._get(params);\r\n        },\r\n\r\n        create: function(params) {\r\n            return this._post(params);\r\n        },\r\n\r\n        update: function(params) {\r\n            return this._put(params);\r\n        },\r\n\r\n        delete: function(params) {\r\n            // HTTP request : DELETE http://center.utilhub.com/registry/v1/apps/{appid}\r\n            return this._delete(params);\r\n        },\r\n\r\n        patch: function(params) {\r\n           // HTTP request : PATCH http://center.utilhub.com/registry/v1/apps/{appid}\r\n            return this._patch(params);\r\n        },\r\n        init: function(params) {\r\n            mixin(this,params);\r\n //           this._xhr = XHRx();\r\n       }\r\n\r\n\r\n    });\r\n\r\n    function langx() {\r\n        return langx;\r\n    }\r\n\r\n    mixin(langx, {\r\n        after: aspect(\"after\"),\r\n\r\n        allKeys: allKeys,\r\n\r\n        around: aspect(\"around\"),\r\n\r\n        ArrayStore : ArrayStore,\r\n\r\n        async : async,\r\n        \r\n        before: aspect(\"before\"),\r\n\r\n        camelCase: function(str) {\r\n            return str.replace(/-([\\da-z])/g, function(a) {\r\n                return a.toUpperCase().replace('-', '');\r\n            });\r\n        },\r\n\r\n        clone: clone,\r\n\r\n        compact: compact,\r\n\r\n        createEvent : createEvent,\r\n\r\n        dasherize: dasherize,\r\n\r\n        debounce: debounce,\r\n\r\n        defaults : createAssigner(allKeys, true),\r\n\r\n        delegate: delegate,\r\n\r\n        Deferred: Deferred,\r\n\r\n        Evented: Evented,\r\n\r\n        defer: defer,\r\n\r\n        deserializeValue: deserializeValue,\r\n\r\n        each: each,\r\n\r\n        first : function(items,n) {\r\n            if (n) {\r\n                return items.slice(0,n);\r\n            } else {\r\n                return items[0];\r\n            }\r\n        },\r\n\r\n        flatten: flatten,\r\n\r\n        funcArg: funcArg,\r\n\r\n        getQueryParams: getQueryParams,\r\n\r\n        has: has,\r\n\r\n        inArray: inArray,\r\n\r\n        isArray: isArray,\r\n\r\n        isArrayLike: isArrayLike,\r\n\r\n        isBoolean: isBoolean,\r\n\r\n        isDefined: function(v) {\r\n            return v !== undefined;\r\n        },\r\n\r\n        isDocument: isDocument,\r\n\r\n        isEmptyObject: isEmptyObject,\r\n\r\n        isEqual: isEqual,\r\n\r\n        isFunction: isFunction,\r\n\r\n        isHtmlNode: isHtmlNode,\r\n\r\n        isMatch: isMatch,\r\n\r\n        isNumber: isNumber,\r\n\r\n        isObject: isObject,\r\n\r\n        isPlainObject: isPlainObject,\r\n\r\n        isString: isString,\r\n\r\n        isSameOrigin: isSameOrigin,\r\n\r\n        isWindow: isWindow,\r\n\r\n        keys: keys,\r\n\r\n        klass: function(props, parent,mixins, options) {\r\n            return createClass(props, parent, mixins,options);\r\n        },\r\n\r\n        lowerFirst: function(str) {\r\n            return str.charAt(0).toLowerCase() + str.slice(1);\r\n        },\r\n\r\n        makeArray: makeArray,\r\n\r\n        map: map,\r\n\r\n        mixin: mixin,\r\n\r\n        noop : noop,\r\n\r\n        proxy: proxy,\r\n\r\n        removeItem: removeItem,\r\n\r\n        Restful: Restful,\r\n\r\n        result : result,\r\n        \r\n        returnTrue: function() {\r\n            return true;\r\n        },\r\n\r\n        returnFalse: function() {\r\n            return false;\r\n        },\r\n\r\n        safeMixin: safeMixin,\r\n\r\n        serializeValue: function(value) {\r\n            return JSON.stringify(value)\r\n        },\r\n\r\n        Stateful: Stateful,\r\n\r\n        substitute: substitute,\r\n\r\n        toPixel: toPixel,\r\n\r\n        trim: trim,\r\n\r\n        type: type,\r\n\r\n        uid: uid,\r\n\r\n        uniq: uniq,\r\n\r\n        uniqueId: uniqueId,\r\n\r\n        upperFirst: function(str) {\r\n            return str.charAt(0).toUpperCase() + str.slice(1);\r\n        },\r\n\r\n        URL: typeof window !== \"undefined\" ? window.URL || window.webkitURL : null,\r\n\r\n        values: values,\r\n\r\n        Xhr: Xhr\r\n\r\n    });\r\n\r\n    return skylark.langx = langx;\r\n});\ndefine('skylark-utils/langx',[\r\n    \"skylark-langx/langx\"\r\n], function(langx) {\r\n    return langx;\r\n});\r\n\ndefine('skylark-utils-interact/interact',[\r\n    \"skylark-utils/skylark\",\r\n    \"skylark-utils/langx\"\r\n], function(skylark, langx) {\r\n\t\r\n\tvar interact = skylark.interact = {\r\n\t};\r\n\r\n\treturn interact;\r\n});\r\n\r\n\ndefine('skylark-utils/styler',[\r\n    \"./skylark\",\r\n    \"./langx\"\r\n], function(skylark, langx) {\r\n    var every = Array.prototype.every,\r\n        forEach = Array.prototype.forEach,\r\n        camelCase = langx.camelCase,\r\n        dasherize = langx.dasherize;\r\n\r\n    function maybeAddPx(name, value) {\r\n        return (typeof value == \"number\" && !cssNumber[dasherize(name)]) ? value + \"px\" : value\r\n    }\r\n\r\n    var cssNumber = {\r\n            'column-count': 1,\r\n            'columns': 1,\r\n            'font-weight': 1,\r\n            'line-height': 1,\r\n            'opacity': 1,\r\n            'z-index': 1,\r\n            'zoom': 1\r\n        },\r\n        classReCache = {\r\n\r\n        };\r\n\r\n    function classRE(name) {\r\n        return name in classReCache ?\r\n            classReCache[name] : (classReCache[name] = new RegExp('(^|\\\\s)' + name + '(\\\\s|$)'));\r\n    }\r\n\r\n    // access className property while respecting SVGAnimatedString\r\n    function className(node, value) {\r\n        var klass = node.className || '',\r\n            svg = klass && klass.baseVal !== undefined\r\n\r\n        if (value === undefined) return svg ? klass.baseVal : klass\r\n        svg ? (klass.baseVal = value) : (node.className = value)\r\n    }\r\n\r\n\r\n    var elementDisplay = {};\r\n\r\n    function defaultDisplay(nodeName) {\r\n        var element, display\r\n        if (!elementDisplay[nodeName]) {\r\n            element = document.createElement(nodeName)\r\n            document.body.appendChild(element)\r\n            display = getComputedStyle(element, '').getPropertyValue(\"display\")\r\n            element.parentNode.removeChild(element)\r\n            display == \"none\" && (display = \"block\")\r\n            elementDisplay[nodeName] = display\r\n        }\r\n        return elementDisplay[nodeName]\r\n    }\r\n\r\n    function show(elm) {\r\n        styler.css(elm, \"display\", \"\");\r\n        if (styler.css(elm, \"display\") == \"none\") {\r\n            styler.css(elm, \"display\", defaultDisplay(elm.nodeName));\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function isInvisible(elm) {\r\n        return styler.css(elm, \"display\") == \"none\" || styler.css(elm, \"opacity\") == 0;\r\n    }\r\n\r\n    function hide(elm) {\r\n        styler.css(elm, \"display\", \"none\");\r\n        return this;\r\n    }\r\n\r\n    function addClass(elm, name) {\r\n        if (!name) return this\r\n        var cls = className(elm),\r\n            names;\r\n        if (langx.isString(name)) {\r\n            names = name.split(/\\s+/g);\r\n        } else {\r\n            names = name;\r\n        }\r\n        names.forEach(function(klass) {\r\n            var re = classRE(klass);\r\n            if (!cls.match(re)) {\r\n                cls += (cls ? \" \" : \"\") + klass;\r\n            }\r\n        });\r\n\r\n        className(elm, cls);\r\n\r\n        return this;\r\n    }\r\n\r\n    function css(elm, property, value) {\r\n        if (arguments.length < 3) {\r\n            var computedStyle,\r\n                computedStyle = getComputedStyle(elm, '')\r\n            if (langx.isString(property)) {\r\n                return elm.style[camelCase(property)] || computedStyle.getPropertyValue(property)\r\n            } else if (langx.isArrayLike(property)) {\r\n                var props = {}\r\n                forEach.call(property, function(prop) {\r\n                    props[prop] = (elm.style[camelCase(prop)] || computedStyle.getPropertyValue(prop))\r\n                })\r\n                return props\r\n            }\r\n        }\r\n\r\n        var css = '';\r\n        if (typeof(property) == 'string') {\r\n            if (!value && value !== 0) {\r\n                elm.style.removeProperty(dasherize(property));\r\n            } else {\r\n                css = dasherize(property) + \":\" + maybeAddPx(property, value)\r\n            }\r\n        } else {\r\n            for (key in property) {\r\n                if (property[key] === undefined) {\r\n                    continue;\r\n                }\r\n                if (!property[key] && property[key] !== 0) {\r\n                    elm.style.removeProperty(dasherize(key));\r\n                } else {\r\n                    css += dasherize(key) + ':' + maybeAddPx(key, property[key]) + ';'\r\n                }\r\n            }\r\n        }\r\n\r\n        elm.style.cssText += ';' + css;\r\n        return this;\r\n    }\r\n\r\n\r\n    function hasClass(elm, name) {\r\n        var re = classRE(name);\r\n        return elm.className && elm.className.match(re);\r\n    }\r\n\r\n    function removeClass(elm, name) {\r\n        if (name) {\r\n            var cls = className(elm),\r\n                names;\r\n\r\n            if (langx.isString(name)) {\r\n                names = name.split(/\\s+/g);\r\n            } else {\r\n                names = name;\r\n            }\r\n\r\n            names.forEach(function(klass) {\r\n                var re = classRE(klass);\r\n                if (cls.match(re)) {\r\n                    cls = cls.replace(re, \" \");\r\n                }\r\n            });\r\n\r\n            className(elm, cls.trim());\r\n        } else {\r\n            className(elm,\"\");\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    function toggleClass(elm, name, when) {\r\n        var self = this;\r\n        name.split(/\\s+/g).forEach(function(klass) {\r\n            if (when === undefined) {\r\n                when = !self.hasClass(elm, klass);\r\n            }\r\n            if (when) {\r\n                self.addClass(elm, klass);\r\n            } else {\r\n                self.removeClass(elm, klass)\r\n            }\r\n        });\r\n\r\n        return self;\r\n    }\r\n\r\n    var styler = function() {\r\n        return styler;\r\n    };\r\n\r\n    langx.mixin(styler, {\r\n        autocssfix: false,\r\n        cssHooks : {\r\n\r\n        },\r\n        \r\n        addClass: addClass,\r\n        className: className,\r\n        css: css,\r\n        hasClass: hasClass,\r\n        hide: hide,\r\n        isInvisible: isInvisible,\r\n        removeClass: removeClass,\r\n        show: show,\r\n        toggleClass: toggleClass\r\n    });\r\n\r\n    return skylark.styler = styler;\r\n});\r\n\ndefine('skylark-utils/noder',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./styler\"\r\n], function(skylark, langx, styler) {\r\n    var isIE = !!navigator.userAgent.match(/Trident/g) || !!navigator.userAgent.match(/MSIE/g),\r\n        fragmentRE = /^\\s*<(\\w+|!)[^>]*>/,\r\n        singleTagRE = /^<(\\w+)\\s*\\/?>(?:<\\/\\1>|)$/,\r\n        div = document.createElement(\"div\"),\r\n        table = document.createElement('table'),\r\n        tableBody = document.createElement('tbody'),\r\n        tableRow = document.createElement('tr'),\r\n        containers = {\r\n            'tr': tableBody,\r\n            'tbody': table,\r\n            'thead': table,\r\n            'tfoot': table,\r\n            'td': tableRow,\r\n            'th': tableRow,\r\n            '*': div\r\n        },\r\n        rootNodeRE = /^(?:body|html)$/i,\r\n        map = Array.prototype.map,\r\n        slice = Array.prototype.slice;\r\n\r\n    function ensureNodes(nodes, copyByClone) {\r\n        if (!langx.isArrayLike(nodes)) {\r\n            nodes = [nodes];\r\n        }\r\n        if (copyByClone) {\r\n            nodes = map.call(nodes, function(node) {\r\n                return node.cloneNode(true);\r\n            });\r\n        }\r\n        return langx.flatten(nodes);\r\n    }\r\n\r\n    function nodeName(elm, chkName) {\r\n        var name = elm.nodeName && elm.nodeName.toLowerCase();\r\n        if (chkName !== undefined) {\r\n            return name === chkName.toLowerCase();\r\n        }\r\n        return name;\r\n    };\r\n\r\n    function after(node, placing, copyByClone) {\r\n        var refNode = node,\r\n            parent = refNode.parentNode;\r\n        if (parent) {\r\n            var nodes = ensureNodes(placing, copyByClone),\r\n                refNode = refNode.nextSibling;\r\n\r\n            for (var i = 0; i < nodes.length; i++) {\r\n                if (refNode) {\r\n                    parent.insertBefore(nodes[i], refNode);\r\n                } else {\r\n                    parent.appendChild(nodes[i]);\r\n                }\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function append(node, placing, copyByClone) {\r\n        var parentNode = node,\r\n            nodes = ensureNodes(placing, copyByClone);\r\n        for (var i = 0; i < nodes.length; i++) {\r\n            parentNode.appendChild(nodes[i]);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function before(node, placing, copyByClone) {\r\n        var refNode = node,\r\n            parent = refNode.parentNode;\r\n        if (parent) {\r\n            var nodes = ensureNodes(placing, copyByClone);\r\n            for (var i = 0; i < nodes.length; i++) {\r\n                parent.insertBefore(nodes[i], refNode);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function contents(elm) {\r\n        if (nodeName(elm, \"iframe\")) {\r\n            return elm.contentDocument;\r\n        }\r\n        return elm.childNodes;\r\n    }\r\n\r\n    function createElement(tag, props,parent) {\r\n        var node = document.createElement(tag);\r\n        if (props) {\r\n            for (var name in props) {\r\n                node.setAttribute(name, props[name]);\r\n            }\r\n        }\r\n        if (parent) {\r\n            append(parent,node);\r\n        }\r\n        return node;\r\n    }\r\n\r\n    function createFragment(html) {\r\n        // A special case optimization for a single tag\r\n        html = langx.trim(html);\r\n        if (singleTagRE.test(html)) {\r\n            return [createElement(RegExp.$1)];\r\n        }\r\n\r\n        var name = fragmentRE.test(html) && RegExp.$1\r\n        if (!(name in containers)) {\r\n            name = \"*\"\r\n        }\r\n        var container = containers[name];\r\n        container.innerHTML = \"\" + html;\r\n        dom = slice.call(container.childNodes);\r\n\r\n        dom.forEach(function(node) {\r\n            container.removeChild(node);\r\n        })\r\n\r\n        return dom;\r\n    }\r\n\r\n    function clone(node, deep) {\r\n        var self = this,\r\n            clone;\r\n\r\n        // TODO: Add feature detection here in the future\r\n        if (!isIE || node.nodeType !== 1 || deep) {\r\n            return node.cloneNode(deep);\r\n        }\r\n\r\n        // Make a HTML5 safe shallow copy\r\n        if (!deep) {\r\n            clone = document.createElement(node.nodeName);\r\n\r\n            // Copy attribs\r\n            each(self.getAttribs(node), function(attr) {\r\n                self.setAttrib(clone, attr.nodeName, self.getAttrib(node, attr.nodeName));\r\n            });\r\n\r\n            return clone;\r\n        }\r\n    }\r\n\r\n    function contains(node, child) {\r\n        return isChildOf(child, node);\r\n    }\r\n\r\n    function createTextNode(text) {\r\n        return document.createTextNode(text);\r\n    }\r\n\r\n    function doc() {\r\n        return document;\r\n    }\r\n\r\n    function empty(node) {\r\n        while (node.hasChildNodes()) {\r\n            var child = node.firstChild;\r\n            node.removeChild(child);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function html(node, html) {\r\n        if (html === undefined) {\r\n            return node.innerHTML;\r\n        } else {\r\n            this.empty(node);\r\n            html = html || \"\";\r\n            if (langx.isString(html) || langx.isNumber(html)) {\r\n                node.innerHTML = html;\r\n            } else if (langx.isArrayLike(html)) {\r\n                for (var i = 0; i < html.length; i++) {\r\n                    node.appendChild(html[i]);\r\n                }\r\n            } else {\r\n                node.appendChild(html);\r\n            }\r\n        }\r\n    }\r\n\r\n    function isChildOf(node, parent,directly) {\r\n        if (directly) {\r\n            return node.parentNode === parent;\r\n        }\r\n        if (document.documentElement.contains) {\r\n            return parent.contains(node);\r\n        }\r\n        while (node) {\r\n            if (parent === node) {\r\n                return true;\r\n            }\r\n\r\n            node = node.parentNode;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    function isDoc(node) {\r\n        return node != null && node.nodeType == node.DOCUMENT_NODE\r\n    }\r\n\r\n    function ownerDoc(elm) {\r\n        if (!elm) {\r\n            return document;\r\n        }\r\n\r\n        if (elm.nodeType == 9) {\r\n            return elm;\r\n        }\r\n\r\n        return elm.ownerDocument;\r\n    }\r\n\r\n    function ownerWindow(elm) {\r\n        var doc = ownerDoc(elm);\r\n        return  doc.defaultView || doc.parentWindow;\r\n    } \r\n\r\n\r\n    function prepend(node, placing, copyByClone) {\r\n        var parentNode = node,\r\n            refNode = parentNode.firstChild,\r\n            nodes = ensureNodes(placing, copyByClone);\r\n        for (var i = 0; i < nodes.length; i++) {\r\n            if (refNode) {\r\n                parentNode.insertBefore(nodes[i], refNode);\r\n            } else {\r\n                parentNode.appendChild(nodes[i]);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n\r\n    function offsetParent(elm) {\r\n        var parent = elm.offsetParent || document.body;\r\n        while (parent && !rootNodeRE.test(parent.nodeName) && styler.css(parent, \"position\") == \"static\") {\r\n            parent = parent.offsetParent;\r\n        }\r\n        return parent;\r\n    }\r\n\r\n    function overlay(elm, params) {\r\n        var overlayDiv = createElement(\"div\", params);\r\n        styler.css(overlayDiv, {\r\n            position: \"absolute\",\r\n            top: 0,\r\n            left: 0,\r\n            width: \"100%\",\r\n            height: \"100%\",\r\n            zIndex: 0x7FFFFFFF,\r\n            opacity: 0.7\r\n        });\r\n        elm.appendChild(overlayDiv);\r\n        return overlayDiv;\r\n\r\n    }\r\n\r\n\r\n\r\n    function remove(node) {\r\n        if (node && node.parentNode) {\r\n            try {\r\n               node.parentNode.removeChild(node);\r\n            } catch (e) {\r\n                console.warn(\"The node is already removed\",e);\r\n            }\r\n         }\r\n        return this;\r\n    }\r\n\r\n    function replace(node, oldNode) {\r\n        oldNode.parentNode.replaceChild(node, oldNode);\r\n        return this;\r\n    }\r\n\r\n    function throb(elm, params) {\r\n        params = params || {};\r\n        var self = this,\r\n            text = params.text,\r\n            style = params.style,\r\n            time = params.time,\r\n            callback = params.callback,\r\n            timer,\r\n            throbber = this.createElement(\"div\", {\r\n                className: params.className || \"throbber\",\r\n                style: style\r\n            }),\r\n            _overlay = overlay(throbber, {\r\n                className: 'overlay fade'\r\n            }),\r\n            throb = this.createElement(\"div\", {\r\n                className: \"throb\"\r\n            }),\r\n            textNode = this.createTextNode(text || \"\"),\r\n            remove = function() {\r\n                if (timer) {\r\n                    clearTimeout(timer);\r\n                    timer = null;\r\n                }\r\n                if (throbber) {\r\n                    self.remove(throbber);\r\n                    throbber = null;\r\n                }\r\n            },\r\n            update = function(params) {\r\n                if (params && params.text && throbber) {\r\n                    textNode.nodeValue = params.text;\r\n                }\r\n            };\r\n        throb.appendChild(textNode);\r\n        throbber.appendChild(throb);\r\n        elm.appendChild(throbber);\r\n        var end = function() {\r\n            remove();\r\n            if (callback) callback();\r\n        };\r\n        if (time) {\r\n            timer = setTimeout(end, time);\r\n        }\r\n\r\n        return {\r\n            remove: remove,\r\n            update: update\r\n        };\r\n    }\r\n\r\n    function traverse(node, fn) {\r\n        fn(node)\r\n        for (var i = 0, len = node.childNodes.length; i < len; i++) {\r\n            traverse(node.childNodes[i], fn);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function reverse(node) {\r\n        var firstChild = node.firstChild;\r\n        for (var i = node.children.length - 1; i > 0; i--) {\r\n            if (i > 0) {\r\n                var child = node.children[i];\r\n                node.insertBefore(child, firstChild);\r\n            }\r\n        }\r\n    }\r\n\r\n    function wrapper(node, wrapperNode) {\r\n        if (langx.isString(wrapperNode)) {\r\n            wrapperNode = this.createFragment(wrapperNode).firstChild;\r\n        }\r\n        node.parentNode.insertBefore(wrapperNode, node);\r\n        wrapperNode.appendChild(node);\r\n    }\r\n\r\n    function wrapperInner(node, wrapperNode) {\r\n        var childNodes = slice.call(node.childNodes);\r\n        node.appendChild(wrapperNode);\r\n        for (var i = 0; i < childNodes.length; i++) {\r\n            wrapperNode.appendChild(childNodes[i]);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function unwrap(node) {\r\n        var child, parent = node.parentNode;\r\n        if (parent) {\r\n            if (this.isDoc(parent.parentNode)) return;\r\n            parent.parentNode.insertBefore(node, parent);\r\n        }\r\n    }\r\n\r\n    function noder() {\r\n        return noder;\r\n    }\r\n\r\n    langx.mixin(noder, {\r\n        body : function() {\r\n            return document.body;\r\n        },\r\n\r\n        clone: clone,\r\n        contents: contents,\r\n\r\n        createElement: createElement,\r\n\r\n        createFragment: createFragment,\r\n\r\n        contains: contains,\r\n\r\n        createTextNode: createTextNode,\r\n\r\n        doc: doc,\r\n\r\n        empty: empty,\r\n\r\n        html: html,\r\n\r\n        isChildOf: isChildOf,\r\n\r\n        isDoc: isDoc,\r\n\r\n        isWindow : langx.isWindow,\r\n\r\n        offsetParent : offsetParent,\r\n        \r\n        ownerDoc: ownerDoc,\r\n\r\n        ownerWindow : ownerWindow,\r\n\r\n        after: after,\r\n\r\n        before: before,\r\n\r\n        prepend: prepend,\r\n\r\n        append: append,\r\n\r\n        remove: remove,\r\n\r\n        replace: replace,\r\n\r\n        throb: throb,\r\n\r\n        traverse: traverse,\r\n\r\n        reverse: reverse,\r\n\r\n        wrapper: wrapper,\r\n\r\n        wrapperInner: wrapperInner,\r\n\r\n        unwrap: unwrap\r\n    });\r\n\r\n    return skylark.noder = noder;\r\n});\r\n\ndefine('skylark-utils/browser',[\r\n    \"./skylark\",\r\n    \"./langx\"\r\n], function(skylark,langx) {\r\n    var checkedCssProperties = {\r\n        \"transitionproperty\": \"TransitionProperty\",\r\n    };\r\n\r\n    var css3PropPrefix = \"\",\r\n        css3StylePrefix = \"\",\r\n        css3EventPrefix = \"\",\r\n\r\n        cssStyles = {},\r\n        cssProps = {},\r\n\r\n        vendorPrefix,\r\n        vendorPrefixRE,\r\n        vendorPrefixesRE = /^(Webkit|webkit|O|Moz|moz|ms)(.*)$/,\r\n\r\n        document = window.document,\r\n        testEl = document.createElement(\"div\"),\r\n\r\n        matchesSelector = testEl.webkitMatchesSelector ||\r\n        testEl.mozMatchesSelector ||\r\n        testEl.oMatchesSelector ||\r\n        testEl.matchesSelector,\r\n\r\n        testStyle = testEl.style;\r\n\r\n    for (var name in testStyle) {\r\n        var matched = name.match(vendorPrefixRE || vendorPrefixesRE);\r\n        if (matched) {\r\n            if (!vendorPrefixRE) {\r\n                vendorPrefix = matched[1];\r\n                vendorPrefixRE = new RegExp(\"^(\" + vendorPrefix + \")(.*)$\");\r\n\r\n                css3StylePrefix = vendorPrefix;\r\n                css3PropPrefix = '-' + vendorPrefix.toLowerCase() + '-';\r\n                css3EventPrefix = vendorPrefix.toLowerCase();\r\n            }\r\n\r\n            cssStyles[langx.lowerFirst(matched[2])] = name;\r\n            var cssPropName = langx.dasherize(matched[2]);\r\n            cssProps[cssPropName] = css3PropPrefix + cssPropName;\r\n\r\n        }\r\n    }\r\n\r\n\r\n    function normalizeCssEvent(name) {\r\n        return css3EventPrefix ? css3EventPrefix + name : name.toLowerCase();\r\n    }\r\n\r\n    function normalizeCssProperty(name) {\r\n        return cssProps[name] || name;\r\n    }\r\n\r\n    function normalizeStyleProperty(name) {\r\n        return cssStyles[name] || name;\r\n    }\r\n\r\n    function browser() {\r\n        return browser;\r\n    }\r\n\r\n    langx.mixin(browser, {\r\n        css3PropPrefix: css3PropPrefix,\r\n\r\n        normalizeStyleProperty: normalizeStyleProperty,\r\n\r\n        normalizeCssProperty: normalizeCssProperty,\r\n\r\n        normalizeCssEvent: normalizeCssEvent,\r\n\r\n        matchesSelector: matchesSelector,\r\n\r\n        location: function() {\r\n            return window.location;\r\n        },\r\n\r\n        support : {}\r\n\r\n    });\r\n\r\n    testEl = null;\r\n\r\n    return skylark.browser = browser;\r\n});\r\n\ndefine('skylark-utils/finder',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./browser\",\r\n    \"./noder\"\r\n], function(skylark, langx, browser, noder, velm) {\r\n    var local = {},\r\n        filter = Array.prototype.filter,\r\n        slice = Array.prototype.slice,\r\n        nativeMatchesSelector = browser.matchesSelector;\r\n\r\n    /*\r\n    ---\r\n    name: Slick.Parser\r\n    description: Standalone CSS3 Selector parser\r\n    provides: Slick.Parser\r\n    ...\r\n    */\r\n    ;\r\n    (function() {\r\n\r\n        var parsed,\r\n            separatorIndex,\r\n            combinatorIndex,\r\n            reversed,\r\n            cache = {},\r\n            reverseCache = {},\r\n            reUnescape = /\\\\/g;\r\n\r\n        var parse = function(expression, isReversed) {\r\n            if (expression == null) return null;\r\n            if (expression.Slick === true) return expression;\r\n            expression = ('' + expression).replace(/^\\s+|\\s+$/g, '');\r\n            reversed = !!isReversed;\r\n            var currentCache = (reversed) ? reverseCache : cache;\r\n            if (currentCache[expression]) return currentCache[expression];\r\n            parsed = {\r\n                Slick: true,\r\n                expressions: [],\r\n                raw: expression,\r\n                reverse: function() {\r\n                    return parse(this.raw, true);\r\n                }\r\n            };\r\n            separatorIndex = -1;\r\n            while (expression != (expression = expression.replace(regexp, parser)));\r\n            parsed.length = parsed.expressions.length;\r\n            return currentCache[parsed.raw] = (reversed) ? reverse(parsed) : parsed;\r\n        };\r\n\r\n        var reverseCombinator = function(combinator) {\r\n            if (combinator === '!') return ' ';\r\n            else if (combinator === ' ') return '!';\r\n            else if ((/^!/).test(combinator)) return combinator.replace(/^!/, '');\r\n            else return '!' + combinator;\r\n        };\r\n\r\n        var reverse = function(expression) {\r\n            var expressions = expression.expressions;\r\n            for (var i = 0; i < expressions.length; i++) {\r\n                var exp = expressions[i];\r\n                var last = {\r\n                    parts: [],\r\n                    tag: '*',\r\n                    combinator: reverseCombinator(exp[0].combinator)\r\n                };\r\n\r\n                for (var j = 0; j < exp.length; j++) {\r\n                    var cexp = exp[j];\r\n                    if (!cexp.reverseCombinator) cexp.reverseCombinator = ' ';\r\n                    cexp.combinator = cexp.reverseCombinator;\r\n                    delete cexp.reverseCombinator;\r\n                }\r\n\r\n                exp.reverse().push(last);\r\n            }\r\n            return expression;\r\n        };\r\n\r\n        var escapeRegExp = (function() {\r\n            // Credit: XRegExp 0.6.1 (c) 2007-2008 Steven Levithan <http://stevenlevithan.com/regex/xregexp/> MIT License\r\n            var from = /(?=[\\-\\[\\]{}()*+?.\\\\\\^$|,#\\s])/g,\r\n                to = '\\\\';\r\n            return function(string) {\r\n                return string.replace(from, to)\r\n            }\r\n        }())\r\n\r\n        var regexp = new RegExp(\r\n            \"^(?:\\\\s*(,)\\\\s*|\\\\s*(<combinator>+)\\\\s*|(\\\\s+)|(<unicode>+|\\\\*)|\\\\#(<unicode>+)|\\\\.(<unicode>+)|\\\\[\\\\s*(<unicode1>+)(?:\\\\s*([*^$!~|]?=)(?:\\\\s*(?:([\\\"']?)(.*?)\\\\9)))?\\\\s*\\\\](?!\\\\])|(:+)(<unicode>+)(?:\\\\((?:(?:([\\\"'])([^\\\\13]*)\\\\13)|((?:\\\\([^)]+\\\\)|[^()]*)+))\\\\))?)\"\r\n            .replace(/<combinator>/, '[' + escapeRegExp(\">+~`!@$%^&={}\\\\;</\") + ']')\r\n            .replace(/<unicode>/g, '(?:[\\\\w\\\\u00a1-\\\\uFFFF-]|\\\\\\\\[^\\\\s0-9a-f])')\r\n            .replace(/<unicode1>/g, '(?:[:\\\\w\\\\u00a1-\\\\uFFFF-]|\\\\\\\\[^\\\\s0-9a-f])')\r\n        );\r\n\r\n        function parser(\r\n            rawMatch,\r\n\r\n            separator,\r\n            combinator,\r\n            combinatorChildren,\r\n\r\n            tagName,\r\n            id,\r\n            className,\r\n\r\n            attributeKey,\r\n            attributeOperator,\r\n            attributeQuote,\r\n            attributeValue,\r\n\r\n            pseudoMarker,\r\n            pseudoClass,\r\n            pseudoQuote,\r\n            pseudoClassQuotedValue,\r\n            pseudoClassValue\r\n        ) {\r\n            if (separator || separatorIndex === -1) {\r\n                parsed.expressions[++separatorIndex] = [];\r\n                combinatorIndex = -1;\r\n                if (separator) return '';\r\n            }\r\n\r\n            if (combinator || combinatorChildren || combinatorIndex === -1) {\r\n                combinator = combinator || ' ';\r\n                var currentSeparator = parsed.expressions[separatorIndex];\r\n                if (reversed && currentSeparator[combinatorIndex])\r\n                    currentSeparator[combinatorIndex].reverseCombinator = reverseCombinator(combinator);\r\n                currentSeparator[++combinatorIndex] = {\r\n                    combinator: combinator,\r\n                    tag: '*'\r\n                };\r\n            }\r\n\r\n            var currentParsed = parsed.expressions[separatorIndex][combinatorIndex];\r\n\r\n            if (tagName) {\r\n                currentParsed.tag = tagName.replace(reUnescape, '');\r\n\r\n            } else if (id) {\r\n                currentParsed.id = id.replace(reUnescape, '');\r\n\r\n            } else if (className) {\r\n                className = className.replace(reUnescape, '');\r\n\r\n                if (!currentParsed.classList) currentParsed.classList = [];\r\n                if (!currentParsed.classes) currentParsed.classes = [];\r\n                currentParsed.classList.push(className);\r\n                currentParsed.classes.push({\r\n                    value: className,\r\n                    regexp: new RegExp('(^|\\\\s)' + escapeRegExp(className) + '(\\\\s|$)')\r\n                });\r\n\r\n            } else if (pseudoClass) {\r\n                pseudoClassValue = pseudoClassValue || pseudoClassQuotedValue;\r\n                pseudoClassValue = pseudoClassValue ? pseudoClassValue.replace(reUnescape, '') : null;\r\n\r\n                if (!currentParsed.pseudos) currentParsed.pseudos = [];\r\n                currentParsed.pseudos.push({\r\n                    key: pseudoClass.replace(reUnescape, ''),\r\n                    value: pseudoClassValue,\r\n                    type: pseudoMarker.length == 1 ? 'class' : 'element'\r\n                });\r\n\r\n            } else if (attributeKey) {\r\n                attributeKey = attributeKey.replace(reUnescape, '');\r\n                attributeValue = (attributeValue || '').replace(reUnescape, '');\r\n\r\n                var test, regexp;\r\n\r\n                switch (attributeOperator) {\r\n                    case '^=':\r\n                        regexp = new RegExp('^' + escapeRegExp(attributeValue));\r\n                        break;\r\n                    case '$=':\r\n                        regexp = new RegExp(escapeRegExp(attributeValue) + '$');\r\n                        break;\r\n                    case '~=':\r\n                        regexp = new RegExp('(^|\\\\s)' + escapeRegExp(attributeValue) + '(\\\\s|$)');\r\n                        break;\r\n                    case '|=':\r\n                        regexp = new RegExp('^' + escapeRegExp(attributeValue) + '(-|$)');\r\n                        break;\r\n                    case '=':\r\n                        test = function(value) {\r\n                            return attributeValue == value;\r\n                        };\r\n                        break;\r\n                    case '*=':\r\n                        test = function(value) {\r\n                            return value && value.indexOf(attributeValue) > -1;\r\n                        };\r\n                        break;\r\n                    case '!=':\r\n                        test = function(value) {\r\n                            return attributeValue != value;\r\n                        };\r\n                        break;\r\n                    default:\r\n                        test = function(value) {\r\n                            return !!value;\r\n                        };\r\n                }\r\n\r\n                if (attributeValue == '' && (/^[*$^]=$/).test(attributeOperator)) test = function() {\r\n                    return false;\r\n                };\r\n\r\n                if (!test) test = function(value) {\r\n                    return value && regexp.test(value);\r\n                };\r\n\r\n                if (!currentParsed.attributes) currentParsed.attributes = [];\r\n                currentParsed.attributes.push({\r\n                    key: attributeKey,\r\n                    operator: attributeOperator,\r\n                    value: attributeValue,\r\n                    test: test\r\n                });\r\n\r\n            }\r\n\r\n            return '';\r\n        };\r\n\r\n        // Slick NS\r\n\r\n        var Slick = (this.Slick || {});\r\n\r\n        Slick.parse = function(expression) {\r\n            return parse(expression);\r\n        };\r\n\r\n        Slick.escapeRegExp = escapeRegExp;\r\n\r\n        if (!this.Slick) this.Slick = Slick;\r\n\r\n    }).apply(local);\r\n\r\n\r\n    var simpleClassSelectorRE = /^\\.([\\w-]*)$/,\r\n        simpleIdSelectorRE = /^#([\\w-]*)$/,\r\n        rinputs = /^(?:input|select|textarea|button)$/i,\r\n        rheader = /^h\\d$/i,\r\n        slice = Array.prototype.slice;\r\n\r\n\r\n    local.parseSelector = local.Slick.parse;\r\n\r\n\r\n    var pseudos = local.pseudos = {\r\n        // custom pseudos\r\n        \"button\": function( elem ) {\r\n            var name = elem.nodeName.toLowerCase();\r\n            return name === \"input\" && elem.type === \"button\" || name === \"button\";\r\n        },\r\n\r\n        'checked': function(elm) {\r\n            return !!elm.checked;\r\n        },\r\n\r\n        'contains': function(elm, idx, nodes, text) {\r\n            if ($(this).text().indexOf(text) > -1) return this\r\n        },\r\n\r\n        'disabled': function(elm) {\r\n            return !!elm.disabled;\r\n        },\r\n\r\n        'enabled': function(elm) {\r\n            return !elm.disabled;\r\n        },\r\n\r\n        'eq': function(elm, idx, nodes, value) {\r\n            return (idx == value);\r\n        },\r\n\r\n        'even' : function(elm, idx, nodes, value) {\r\n            return (idx % 2) === 0;\r\n        },\r\n\r\n        'focus': function(elm) {\r\n            return document.activeElement === elm && (elm.href || elm.type || elm.tabindex);\r\n        },\r\n\r\n        'first': function(elm, idx) {\r\n            return (idx === 0);\r\n        },\r\n\r\n        'gt': function(elm, idx, nodes, value) {\r\n            return (idx > value);\r\n        },\r\n\r\n        'has': function(elm, idx, nodes, sel) {\r\n            return find(elm, sel);\r\n        },\r\n\r\n        // Element/input types\r\n        \"header\": function( elem ) {\r\n            return rheader.test( elem.nodeName );\r\n        },\r\n\r\n        'hidden': function(elm) {\r\n            return !local.pseudos[\"visible\"](elm);\r\n        },\r\n\r\n        \"input\": function( elem ) {\r\n            return rinputs.test( elem.nodeName );\r\n        },\r\n\r\n        'last': function(elm, idx, nodes) {\r\n            return (idx === nodes.length - 1);\r\n        },\r\n\r\n        'lt': function(elm, idx, nodes, value) {\r\n            return (idx < value);\r\n        },\r\n\r\n        'not': function(elm, idx, nodes, sel) {\r\n            return !matches(elm, sel);\r\n        },\r\n\r\n        'odd' : function(elm, idx, nodes, value) {\r\n            return (idx % 2) === 1;\r\n        },\r\n\r\n        'parent': function(elm) {\r\n            return !!elm.parentNode;\r\n        },\r\n\r\n        'selected': function(elm) {\r\n            return !!elm.selected;\r\n        },\r\n\r\n        'text': function(elm){\r\n            return elm.type === \"text\";\r\n        },\r\n\r\n        'visible': function(elm) {\r\n            return elm.offsetWidth && elm.offsetWidth\r\n        }\r\n    };\r\n\r\n    [\"first\",\"eq\",\"last\"].forEach(function(item){\r\n        pseudos[item].isArrayFilter = true;\r\n    });\r\n\r\n\r\n\r\n    pseudos[\"nth\"] = pseudos[\"eq\"];\r\n\r\n    function createInputPseudo( type ) {\r\n        return function( elem ) {\r\n            var name = elem.nodeName.toLowerCase();\r\n            return name === \"input\" && elem.type === type;\r\n        };\r\n    }\r\n\r\n    function createButtonPseudo( type ) {\r\n        return function( elem ) {\r\n            var name = elem.nodeName.toLowerCase();\r\n            return (name === \"input\" || name === \"button\") && elem.type === type;\r\n        };\r\n    }\r\n\r\n    // Add button/input type pseudos\r\n    for ( i in { radio: true, checkbox: true, file: true, password: true, image: true } ) {\r\n        pseudos[ i ] = createInputPseudo( i );\r\n    }\r\n    for ( i in { submit: true, reset: true } ) {\r\n        pseudos[ i ] = createButtonPseudo( i );\r\n    }\r\n\r\n\r\n    local.divide = function(cond) {\r\n        var nativeSelector = \"\",\r\n            customPseudos = [],\r\n            tag,\r\n            id,\r\n            classes,\r\n            attributes,\r\n            pseudos;\r\n\r\n\r\n        if (id = cond.id) {\r\n            nativeSelector += (\"#\" + id);\r\n        }\r\n        if (classes = cond.classes) {\r\n            for (var i = classes.length; i--;) {\r\n                nativeSelector += (\".\" + classes[i].value);\r\n            }\r\n        }\r\n        if (attributes = cond.attributes) {\r\n            for (var i = 0; i < attributes.length; i++) {\r\n                if (attributes[i].operator) {\r\n                    nativeSelector += (\"[\" + attributes[i].key + attributes[i].operator + JSON.stringify(attributes[i].value)  +\"]\");\r\n                } else {\r\n                    nativeSelector += (\"[\" + attributes[i].key + \"]\");\r\n                }\r\n            }\r\n        }\r\n        if (pseudos = cond.pseudos) {\r\n            for (i = pseudos.length; i--;) {\r\n                part = pseudos[i];\r\n                if (this.pseudos[part.key]) {\r\n                    customPseudos.push(part);\r\n                } else {\r\n                    if (part.value !== undefined) {\r\n                        nativeSelector += (\":\" + part.key + \"(\" + JSON.stringify(part))\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (tag = cond.tag) {\r\n            nativeSelector = tag.toUpperCase() + nativeSelector;\r\n        }\r\n\r\n        if (!nativeSelector) {\r\n            nativeSelector = \"*\";\r\n        }\r\n\r\n        return {\r\n            nativeSelector: nativeSelector,\r\n            customPseudos: customPseudos\r\n        }\r\n\r\n    };\r\n\r\n    local.check = function(node, cond, idx, nodes,arrayFilte) {\r\n        var tag,\r\n            id,\r\n            classes,\r\n            attributes,\r\n            pseudos,\r\n\r\n            i, part, cls, pseudo;\r\n\r\n        if (!arrayFilte) {\r\n            if (tag = cond.tag) {\r\n                var nodeName = node.nodeName.toUpperCase();\r\n                if (tag == '*') {\r\n                    if (nodeName < '@') return false; // Fix for comment nodes and closed nodes\r\n                } else {\r\n                    if (nodeName != (tag || \"\").toUpperCase()) return false;\r\n                }\r\n            }\r\n\r\n            if (id = cond.id) {\r\n                if (node.getAttribute('id') != id) {\r\n                    return false;\r\n                }\r\n            }\r\n\r\n\r\n            if (classes = cond.classes) {\r\n                for (i = classes.length; i--;) {\r\n                    cls = node.getAttribute('class');\r\n                    if (!(cls && classes[i].regexp.test(cls))) return false;\r\n                }\r\n            }\r\n\r\n            if (attributes = cond.attributes) {\r\n                 for (i = attributes.length; i--;) {\r\n                    part = attributes[i];\r\n                    if (part.operator ? !part.test(node.getAttribute(part.key)) : !node.hasAttribute(part.key)) return false;\r\n                }\r\n            }\r\n\r\n        }\r\n        if (pseudos = cond.pseudos) {\r\n            for (i = pseudos.length; i--;) {\r\n                part = pseudos[i];\r\n                if (pseudo = this.pseudos[part.key]) {\r\n                    if ((arrayFilte && pseudo.isArrayFilter) || (!arrayFilte && !pseudo.isArrayFilter)) {\r\n                        if (!pseudo(node, idx, nodes, part.value)) {\r\n                            return false;\r\n                        }\r\n                    }\r\n                } else {\r\n                    if (!arrayFilte && !nativeMatchesSelector.call(node, part.key)) {\r\n                        return false;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    local.match = function(node, selector) {\r\n\r\n        var parsed ;\r\n\r\n        if (langx.isString(selector)) {\r\n            parsed = local.Slick.parse(selector);\r\n        } else {\r\n            parsed = selector;            \r\n        }\r\n        \r\n        if (!parsed) {\r\n            return true;\r\n        }\r\n\r\n        // simple (single) selectors\r\n        var expressions = parsed.expressions,\r\n            simpleExpCounter = 0,\r\n            i,\r\n            currentExpression;\r\n        for (i = 0;\r\n            (currentExpression = expressions[i]); i++) {\r\n            if (currentExpression.length == 1) {\r\n                var exp = currentExpression[0];\r\n                if (this.check(node,exp)) {\r\n                    return true;\r\n                }\r\n                simpleExpCounter++;\r\n            }\r\n        }\r\n\r\n        if (simpleExpCounter == parsed.length) {\r\n            return false;\r\n        }\r\n\r\n        var nodes = this.query(document, parsed),\r\n            item;\r\n        for (i = 0; item = nodes[i++];) {\r\n            if (item === node) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n\r\n\r\n    local.filterSingle = function(nodes, exp){\r\n        var matchs = filter.call(nodes, function(node, idx) {\r\n            return local.check(node, exp, idx, nodes,false);\r\n        });    \r\n\r\n        matchs = filter.call(matchs, function(node, idx) {\r\n            return local.check(node, exp, idx, matchs,true);\r\n        }); \r\n        return matchs;\r\n    };\r\n\r\n    local.filter = function(nodes, selector) {\r\n        var parsed;\r\n\r\n        if (langx.isString(selector)) {\r\n            parsed = local.Slick.parse(selector);\r\n        } else {\r\n            return local.filterSingle(nodes,selector);           \r\n        }\r\n\r\n        // simple (single) selectors\r\n        var expressions = parsed.expressions,\r\n            i,\r\n            currentExpression,\r\n            ret = [];\r\n        for (i = 0;\r\n            (currentExpression = expressions[i]); i++) {\r\n            if (currentExpression.length == 1) {\r\n                var exp = currentExpression[0];\r\n\r\n                var matchs = local.filterSingle(nodes,exp);  \r\n\r\n                ret = langx.uniq(ret.concat(matchs));\r\n            } else {\r\n                throw new Error(\"not supported selector:\" + selector);\r\n            }\r\n        }\r\n\r\n        return ret;\r\n \r\n    };    \r\n\r\n    local.combine = function(elm, bit) {\r\n        var op = bit.combinator,\r\n            cond = bit,\r\n            node1,\r\n            nodes = [];\r\n\r\n        switch (op) {\r\n            case '>': // direct children\r\n                nodes = children(elm, cond);\r\n                break;\r\n            case '+': // next sibling\r\n                node1 = nextSibling(elm, cond, true);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '^': // first child\r\n                node1 = firstChild(elm, cond, true);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '~': // next siblings\r\n                nodes = nextSiblings(elm, cond);\r\n                break;\r\n            case '++': // next sibling and previous sibling\r\n                var prev = previousSibling(elm, cond, true),\r\n                    next = nextSibling(elm, cond, true);\r\n                if (prev) {\r\n                    nodes.push(prev);\r\n                }\r\n                if (next) {\r\n                    nodes.push(next);\r\n                }\r\n                break;\r\n            case '~~': // next siblings and previous siblings\r\n                nodes = siblings(elm, cond);\r\n                break;\r\n            case '!': // all parent nodes up to document\r\n                nodes = ancestors(elm, cond);\r\n                break;\r\n            case '!>': // direct parent (one level)\r\n                node1 = parent(elm, cond);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '!+': // previous sibling\r\n                nodes = previousSibling(elm, cond, true);\r\n                break;\r\n            case '!^': // last child\r\n                node1 = lastChild(elm, cond, true);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '!~': // previous siblings\r\n                nodes = previousSiblings(elm, cond);\r\n                break;\r\n            default:\r\n                var divided = this.divide(bit);\r\n                nodes = slice.call(elm.querySelectorAll(divided.nativeSelector));\r\n                if (divided.customPseudos) {\r\n                    for (var i = divided.customPseudos.length - 1; i >= 0; i--) {\r\n                        nodes = filter.call(nodes, function(item, idx) {\r\n                            return local.check(item, {\r\n                                pseudos: [divided.customPseudos[i]]\r\n                            }, idx, nodes,false)\r\n                        });\r\n\r\n                        nodes = filter.call(nodes, function(item, idx) {\r\n                            return local.check(item, {\r\n                                pseudos: [divided.customPseudos[i]]\r\n                            }, idx, nodes,true)\r\n                        });                        \r\n                    }\r\n                }\r\n                break;\r\n\r\n        }\r\n        return nodes;\r\n    }\r\n\r\n    local.query = function(node, selector, single) {\r\n\r\n\r\n        var parsed = this.Slick.parse(selector);\r\n\r\n        var\r\n            founds = [],\r\n            currentExpression, currentBit,\r\n            expressions = parsed.expressions;\r\n\r\n        for (var i = 0;\r\n            (currentExpression = expressions[i]); i++) {\r\n            var currentItems = [node],\r\n                found;\r\n            for (var j = 0;\r\n                (currentBit = currentExpression[j]); j++) {\r\n                found = langx.map(currentItems, function(item, i) {\r\n                    return local.combine(item, currentBit)\r\n                });\r\n                if (found) {\r\n                    currentItems = found;\r\n                }\r\n            }\r\n            if (found) {\r\n                founds = founds.concat(found);\r\n            }\r\n        }\r\n\r\n        return founds;\r\n    }\r\n\r\n\r\n    function ancestor(node, selector, root) {\r\n        var rootIsSelector = root && langx.isString(root);\r\n        while (node = node.parentNode) {\r\n            if (matches(node, selector)) {\r\n                return node;\r\n            }\r\n            if (root) {\r\n                if (rootIsSelector) {\r\n                    if (matches(node,root)) {\r\n                        break;\r\n                    }\r\n                } else if (node == root) {\r\n                    break;\r\n                }\r\n            } \r\n        }\r\n        return null;\r\n    }\r\n\r\n    function ancestors(node, selector,root) {\r\n        var ret = [],\r\n            rootIsSelector = root && langx.isString(root);\r\n        while ((node = node.parentNode) && (node.nodeType !== 9)) {\r\n            ret.push(node);\r\n            if (root) {\r\n                if (rootIsSelector) {\r\n                    if (matches(node,root)) {\r\n                        break;\r\n                    }\r\n                } else if (node == root) {\r\n                    break;\r\n                }\r\n            } \r\n\r\n        }\r\n\r\n        if (selector) {\r\n            ret = local.filter(ret,selector);\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    function byId(id, doc) {\r\n        doc = doc || noder.doc();\r\n        return doc.getElementById(id);\r\n    }\r\n\r\n    function children(node, selector) {\r\n        var childNodes = node.childNodes,\r\n            ret = [];\r\n        for (var i = 0; i < childNodes.length; i++) {\r\n            var node = childNodes[i];\r\n            if (node.nodeType == 1) {\r\n                ret.push(node);\r\n            }\r\n        }\r\n        if (selector) {\r\n            ret = local.filter(ret,selector);\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    function closest(node, selector) {\r\n        while (node && !(matches(node, selector))) {\r\n            node = node.parentNode;\r\n        }\r\n\r\n        return node;\r\n    }\r\n\r\n    function descendants(elm, selector) {\r\n        // Selector\r\n        try {\r\n            return slice.call(elm.querySelectorAll(selector));\r\n        } catch (matchError) {\r\n            //console.log(matchError);\r\n        }\r\n        return local.query(elm, selector);\r\n    }\r\n\r\n    function descendant(elm, selector) {\r\n        // Selector\r\n        try {\r\n            return elm.querySelector(selector);\r\n        } catch (matchError) {\r\n            //console.log(matchError);\r\n        }\r\n        var nodes = local.query(elm, selector);\r\n        if (nodes.length > 0) {\r\n            return nodes[0];\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    function find(elm,selector) {\r\n        if (!selector) {\r\n            selector = elm;\r\n            elm = document.body;\r\n        }\r\n        if (matches(elm,selector)) {\r\n            return elm;\r\n        } else {\r\n            return descendant(elm, selector);\r\n        }\r\n    }\r\n\r\n    function findAll(elm,selector) {\r\n        if (!selector) {\r\n            selector = elm;\r\n            elm = document.body;\r\n        }\r\n        return descendants(elm, selector);\r\n    }\r\n\r\n    function firstChild(elm, selector, first) {\r\n        var childNodes = elm.childNodes,\r\n            node = childNodes[0];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (first) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    function lastChild(elm, selector, last) {\r\n        var childNodes = elm.childNodes,\r\n            node = childNodes[childNodes.length - 1];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (last) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.previousSibling;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    function matches(elm, selector) {\r\n        if (!selector || !elm || elm.nodeType !== 1) {\r\n            return false\r\n        }\r\n\r\n        if (langx.isString(selector)) {\r\n            try {\r\n                return nativeMatchesSelector.call(elm, selector.replace(/\\[([^=]+)=\\s*([^'\"\\]]+?)\\s*\\]/g, '[$1=\"$2\"]'));\r\n            } catch (matchError) {\r\n                //console.log(matchError);\r\n            }\r\n            return local.match(elm, selector);\r\n        } else if (langx.isArrayLike(selector)) {\r\n            return langx.inArray(elm,selector) > -1;\r\n        } else if (langx.isPlainObject(selector)){    \r\n            return local.check(elm, selector);\r\n        } else {\r\n            return elm === selector;\r\n        }\r\n\r\n    }\r\n\r\n    function nextSibling(elm, selector, adjacent) {\r\n        var node = elm.nextSibling;\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (adjacent) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    function nextSiblings(elm, selector) {\r\n        var node = elm.nextSibling,\r\n            ret = [];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    ret.push(node);\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n        return ret;\r\n    }\r\n\r\n\r\n    function parent(elm, selector) {\r\n        var node = elm.parentNode;\r\n        if (node && (!selector || matches(node, selector))) {\r\n            return node;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    function previousSibling(elm, selector, adjacent) {\r\n        var node = elm.previousSibling;\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (adjacent) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.previousSibling;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    function previousSiblings(elm, selector) {\r\n        var node = elm.previousSibling,\r\n            ret = [];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    ret.push(node);\r\n                }\r\n            }\r\n            node = node.previousSibling;\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    function siblings(elm, selector) {\r\n        var node = elm.parentNode.firstChild,\r\n            ret = [];\r\n        while (node) {\r\n            if (node.nodeType == 1 && node !== elm) {\r\n                if (!selector || matches(node, selector)) {\r\n                    ret.push(node);\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    var finder = function() {\r\n        return finder;\r\n    };\r\n\r\n    langx.mixin(finder, {\r\n\r\n        ancestor: ancestor,\r\n\r\n        ancestors: ancestors,\r\n\r\n        byId: byId,\r\n\r\n        children: children,\r\n\r\n        closest: closest,\r\n\r\n        descendant: descendant,\r\n\r\n        descendants: descendants,\r\n\r\n        find: find,\r\n\r\n        findAll: findAll,\r\n\r\n        firstChild: firstChild,\r\n\r\n        lastChild: lastChild,\r\n\r\n        matches: matches,\r\n\r\n        nextSibling: nextSibling,\r\n\r\n        nextSiblings: nextSiblings,\r\n\r\n        parent: parent,\r\n\r\n        previousSibling: previousSibling,\r\n\r\n        previousSiblings: previousSiblings,\r\n\r\n        pseudos: local.pseudos,\r\n\r\n        siblings: siblings\r\n    });\r\n\r\n    return skylark.finder = finder;\r\n});\r\n\ndefine('skylark-utils/datax',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./finder\"\r\n], function(skylark, langx, finder) {\r\n    var map = Array.prototype.map,\r\n        filter = Array.prototype.filter,\r\n        camelCase = langx.camelCase,\r\n        deserializeValue = langx.deserializeValue,\r\n\r\n        capitalRE = /([A-Z])/g,\r\n        propMap = {\r\n            'tabindex': 'tabIndex',\r\n            'readonly': 'readOnly',\r\n            'for': 'htmlFor',\r\n            'class': 'className',\r\n            'maxlength': 'maxLength',\r\n            'cellspacing': 'cellSpacing',\r\n            'cellpadding': 'cellPadding',\r\n            'rowspan': 'rowSpan',\r\n            'colspan': 'colSpan',\r\n            'usemap': 'useMap',\r\n            'frameborder': 'frameBorder',\r\n            'contenteditable': 'contentEditable'\r\n        };\r\n\r\n    function setAttribute(elm, name, value) {\r\n        if (value == null) {\r\n            elm.removeAttribute(name);\r\n        } else {\r\n            elm.setAttribute(name, value);\r\n        }\r\n    }\r\n\r\n    function aria(elm,name,value) {\r\n        return this.attr(elm, \"aria-\"+name, value);\r\n    }\r\n\r\n    function attr(elm, name, value) {\r\n        if (value === undefined) {\r\n            if (typeof name === \"object\") {\r\n                for (var attrName in name) {\r\n                    attr(elm, attrName, name[attrName]);\r\n                }\r\n                return this;\r\n            } else {\r\n                if (elm.hasAttribute && elm.hasAttribute(name)) {\r\n                    return elm.getAttribute(name);\r\n                }\r\n            }\r\n        } else {\r\n            elm.setAttribute(name, value);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    // Read all \"data-*\" attributes from a node\r\n    function _attributeData(elm) {\r\n        var store = {}\r\n        langx.each(elm.attributes || [], function(i, attr) {\r\n            if (attr.name.indexOf('data-') == 0) {\r\n                store[camelCase(attr.name.replace('data-', ''))] = deserializeValue(attr.value);\r\n            }\r\n        })\r\n        return store;\r\n    }\r\n\r\n    function _store(elm, confirm) {\r\n        var store = elm[\"_$_store\"];\r\n        if (!store && confirm) {\r\n            store = elm[\"_$_store\"] = _attributeData(elm);\r\n        }\r\n        return store;\r\n    }\r\n\r\n    function _getData(elm, name) {\r\n        if (name === undefined) {\r\n            return _store(elm, true);\r\n        } else {\r\n            var store = _store(elm);\r\n            if (store) {\r\n                if (name in store) {\r\n                    return store[name];\r\n                }\r\n                var camelName = camelCase(name);\r\n                if (camelName in store) {\r\n                    return store[camelName];\r\n                }\r\n            }\r\n            var attrName = 'data-' + name.replace(capitalRE, \"-$1\").toLowerCase()\r\n            return attr(elm, attrName);\r\n        }\r\n\r\n    }\r\n\r\n    function _setData(elm, name, value) {\r\n        var store = _store(elm, true);\r\n        store[camelCase(name)] = value;\r\n    }\r\n\r\n\r\n    function data(elm, name, value) {\r\n\r\n        if (value === undefined) {\r\n            if (typeof name === \"object\") {\r\n                for (var dataAttrName in name) {\r\n                    _setData(elm, dataAttrName, name[dataAttrName]);\r\n                }\r\n                return this;\r\n            } else {\r\n                return _getData(elm, name);\r\n            }\r\n        } else {\r\n            _setData(elm, name, value);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function cleanData(elm) {\r\n        if (elm[\"_$_store\"]) {\r\n            delete elm[\"_$_store\"];\r\n        }\r\n    }\r\n\r\n    function removeData(elm, names) {\r\n        if (langx.isString(names)) {\r\n            names = names.split(/\\s+/);\r\n        }\r\n        var store = _store(elm, true);\r\n        names.forEach(function(name) {\r\n            delete store[name];\r\n        });\r\n        return this;\r\n    }\r\n\r\n    function pluck(nodes, property) {\r\n        return map.call(nodes, function(elm) {\r\n            return elm[property];\r\n        });\r\n    }\r\n\r\n    function prop(elm, name, value) {\r\n        name = propMap[name] || name;\r\n        if (value === undefined) {\r\n            return elm[name];\r\n        } else {\r\n            elm[name] = value;\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function removeAttr(elm, name) {\r\n        name.split(' ').forEach(function(attr) {\r\n            setAttribute(elm, attr);\r\n        });\r\n        return this;\r\n    }\r\n\r\n    function removeProp(elm, name) {\r\n        name.split(' ').forEach(function(prop) {\r\n            delete elm[prop];\r\n        });\r\n        return this;\r\n    }\r\n\r\n    function text(elm, txt) {\r\n        if (txt === undefined) {\r\n            return elm.textContent;\r\n        } else {\r\n            elm.textContent = txt == null ? '' : '' + txt;\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function val(elm, value) {\r\n        if (value === undefined) {\r\n            if (elm.multiple) {\r\n                // select multiple values\r\n                var selectedOptions = filter.call(finder.find(elm, \"option\"), (function(option) {\r\n                    return option.selected;\r\n                }));\r\n                return pluck(selectedOptions, \"value\");\r\n            } else {\r\n                return elm.value;\r\n            }\r\n        } else {\r\n            elm.value = value;\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function datax() {\r\n        return datax;\r\n    }\r\n\r\n    langx.mixin(datax, {\r\n        aria: aria,\r\n        \r\n        attr: attr,\r\n\r\n        cleanData : cleanData,\r\n        \r\n        data: data,\r\n\r\n        pluck: pluck,\r\n\r\n        prop: prop,\r\n\r\n        removeAttr: removeAttr,\r\n\r\n        removeData: removeData,\r\n\r\n        removeProp: removeProp,\r\n\r\n        text: text,\r\n\r\n        val: val\r\n    });\r\n\r\n    return skylark.datax = datax;\r\n});\r\n\ndefine('skylark-utils/geom',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./noder\",\r\n    \"./styler\"\r\n], function(skylark, langx, noder,styler) {\r\n    var rootNodeRE = /^(?:body|html)$/i,\r\n        px = langx.toPixel,\r\n        offsetParent = noder.offsetParent,\r\n        cachedScrollbarWidth;\r\n\r\n\r\n    function scrollbarWidth() {\r\n        if ( cachedScrollbarWidth !== undefined ) {\r\n            return cachedScrollbarWidth;\r\n        }\r\n        var w1, w2,\r\n            div = noder.createFragment( \"<div style=\" +\r\n                \"'display:block;position:absolute;width:200px;height:200px;overflow:hidden;'>\" +\r\n                \"<div style='height:300px;width:auto;'></div></div>\" )[0],\r\n            innerDiv = div.childNodes[0];\r\n\r\n        noder.append(document.body,div);\r\n\r\n        w1 = innerDiv.offsetWidth;\r\n        \r\n        styler.css( div, \"overflow\", \"scroll\" );\r\n\r\n        w2 = innerDiv.offsetWidth;\r\n\r\n        if ( w1 === w2 ) {\r\n            w2 = div[0].clientWidth;\r\n        }\r\n\r\n        noder.remove(div);\r\n\r\n        return ( cachedScrollbarWidth = w1 - w2 );\r\n    }\r\n\r\n    function borderExtents(elm) {\r\n        var s = getComputedStyle(elm);\r\n        return {\r\n            left: px(s.borderLeftWidth , elm),\r\n            top: px(s.borderTopWidth, elm),\r\n            right: px(s.borderRightWidth, elm),\r\n            bottom: px(s.borderBottomWidth, elm)\r\n        }\r\n    }\r\n\r\n    //viewport coordinate\r\n    function boundingPosition(elm, coords) {\r\n        if (coords === undefined) {\r\n            return rootNodeRE.test(elm.nodeName) ? { top: 0, left: 0 } : elm.getBoundingClientRect();\r\n        } else {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                parentOffset = boundingPosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            relativePosition(elm, {\r\n                top: coords.top - parentOffset.top - mex.top - pbex.top,\r\n                left: coords.left - parentOffset.left - mex.left - pbex.left\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function boundingRect(elm, coords) {\r\n        if (coords === undefined) {\r\n            return elm.getBoundingClientRect()\r\n        } else {\r\n            boundingPosition(elm, coords);\r\n            size(elm, coords);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function clientHeight(elm, value) {\r\n        if (value == undefined) {\r\n            return clientSize(elm).height;\r\n        } else {\r\n            return clientSize(elm, {\r\n                height: value\r\n            });\r\n        }\r\n    }\r\n\r\n    function clientSize(elm, dimension) {\r\n        if (dimension == undefined) {\r\n            return {\r\n                width: elm.clientWidth,\r\n                height: elm.clientHeight\r\n            }\r\n        } else {\r\n            var isBorderBox = (styler.css(elm, \"box-sizing\") === \"border-box\"),\r\n                props = {\r\n                    width: dimension.width,\r\n                    height: dimension.height\r\n                };\r\n            if (!isBorderBox) {\r\n                var pex = paddingExtents(elm);\r\n\r\n                if (props.width !== undefined) {\r\n                    props.width = props.width - pex.left - pex.right;\r\n                }\r\n\r\n                if (props.height !== undefined) {\r\n                    props.height = props.height - pex.top - pex.bottom;\r\n                }\r\n            } else {\r\n                var bex = borderExtents(elm);\r\n\r\n                if (props.width !== undefined) {\r\n                    props.width = props.width + bex.left + bex.right;\r\n                }\r\n\r\n                if (props.height !== undefined) {\r\n                    props.height = props.height + bex.top + bex.bottom;\r\n                }\r\n\r\n            }\r\n            styler.css(elm, props);\r\n            return this;\r\n        }\r\n        return {\r\n            width: elm.clientWidth,\r\n            height: elm.clientHeight\r\n        };\r\n    }\r\n\r\n    function clientWidth(elm, value) {\r\n        if (value == undefined) {\r\n            return clientSize(elm).width;\r\n        } else {\r\n            clientSize(elm, {\r\n                width: value\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function contentRect(elm) {\r\n        var cs = clientSize(elm),\r\n            pex = paddingExtents(elm);\r\n\r\n\r\n        //// On Opera, offsetLeft includes the parent's border\r\n        //if(has(\"opera\")){\r\n        //    pe.l += be.l;\r\n        //    pe.t += be.t;\r\n        //}\r\n        return {\r\n            left: pex.left,\r\n            top: pex.top,\r\n            width: cs.width - pex.left - pex.right,\r\n            height: cs.height - pex.top - pex.bottom\r\n        };\r\n    }\r\n\r\n    function getDocumentSize(doc) {\r\n        var documentElement = doc.documentElement,\r\n            body = doc.body,\r\n            max = Math.max,\r\n            scrollWidth = max(documentElement.scrollWidth, body.scrollWidth),\r\n            clientWidth = max(documentElement.clientWidth, body.clientWidth),\r\n            offsetWidth = max(documentElement.offsetWidth, body.offsetWidth),\r\n            scrollHeight = max(documentElement.scrollHeight, body.scrollHeight),\r\n            clientHeight = max(documentElement.clientHeight, body.clientHeight),\r\n            offsetHeight = max(documentElement.offsetHeight, body.offsetHeight);\r\n\r\n        return {\r\n            width: scrollWidth < offsetWidth ? clientWidth : scrollWidth,\r\n            height: scrollHeight < offsetHeight ? clientHeight : scrollHeight\r\n        };\r\n    }\r\n\r\n    function height(elm, value) {\r\n        if (value == undefined) {\r\n            return size(elm).height;\r\n        } else {\r\n            size(elm, {\r\n                height: value\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function marginExtents(elm) {\r\n        var s = getComputedStyle(elm);\r\n        return {\r\n            left: px(s.marginLeft),\r\n            top: px(s.marginTop),\r\n            right: px(s.marginRight),\r\n            bottom: px(s.marginBottom),\r\n        }\r\n    }\r\n\r\n    function marginRect(elm) {\r\n        var obj = this.relativeRect(elm),\r\n            me = this.marginExtents(elm);\r\n\r\n        return {\r\n                left: obj.left,\r\n                top: obj.top,\r\n                width: obj.width + me.left + me.right,\r\n                height: obj.height + me.top + me.bottom\r\n            };\r\n    }\r\n\r\n\r\n    function marginSize(elm) {\r\n        var obj = this.size(elm),\r\n            me = this.marginExtents(elm);\r\n\r\n        return {\r\n                width: obj.width + me.left + me.right,\r\n                height: obj.height + me.top + me.bottom\r\n            };\r\n    }\r\n\r\n    function paddingExtents(elm) {\r\n        var s = getComputedStyle(elm);\r\n        return {\r\n            left: px(s.paddingLeft),\r\n            top: px(s.paddingTop),\r\n            right: px(s.paddingRight),\r\n            bottom: px(s.paddingBottom),\r\n        }\r\n    }\r\n\r\n    //coordinate to the document\r\n    function pagePosition(elm, coords) {\r\n        if (coords === undefined) {\r\n            var obj = elm.getBoundingClientRect()\r\n            return {\r\n                left: obj.left + window.pageXOffset,\r\n                top: obj.top + window.pageYOffset\r\n            }\r\n        } else {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                parentOffset = pagePosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            relativePosition(elm, {\r\n                top: coords.top - parentOffset.top - mex.top - pbex.top,\r\n                left: coords.left - parentOffset.left - mex.left - pbex.left\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function pageRect(elm, coords) {\r\n        if (coords === undefined) {\r\n            var obj = elm.getBoundingClientRect()\r\n            return {\r\n                left: obj.left + window.pageXOffset,\r\n                top: obj.top + window.pageYOffset,\r\n                width: Math.round(obj.width),\r\n                height: Math.round(obj.height)\r\n            }\r\n        } else {\r\n            pagePosition(elm, coords);\r\n            size(elm, coords);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    // coordinate relative to it's parent\r\n    function relativePosition(elm, coords) {\r\n        if (coords == undefined) {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                offset = boundingPosition(elm),\r\n                parentOffset = boundingPosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            // Subtract parent offsets and element margins\r\n            return {\r\n                top: offset.top - parentOffset.top - pbex.top,// - mex.top,\r\n                left: offset.left - parentOffset.left - pbex.left,// - mex.left\r\n            }\r\n        } else {\r\n            var props = {\r\n                top: coords.top,\r\n                left: coords.left\r\n            }\r\n\r\n            if (styler.css(elm, \"position\") == \"static\") {\r\n                props['position'] = \"relative\";\r\n            }\r\n            styler.css(elm, props);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function relativeRect(elm, coords) {\r\n        if (coords === undefined) {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                offset = boundingRect(elm),\r\n                parentOffset = boundingPosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            // Subtract parent offsets and element margins\r\n            return {\r\n                top: offset.top - parentOffset.top - pbex.top, // - mex.top,\r\n                left: offset.left - parentOffset.left - pbex.left, // - mex.left,\r\n                width: offset.width,\r\n                height: offset.height\r\n            }\r\n        } else {\r\n            relativePosition(elm, coords);\r\n            size(elm, coords);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function scrollIntoView(elm, align) {\r\n        function getOffset(elm, rootElm) {\r\n            var x, y, parent = elm;\r\n\r\n            x = y = 0;\r\n            while (parent && parent != rootElm && parent.nodeType) {\r\n                x += parent.offsetLeft || 0;\r\n                y += parent.offsetTop || 0;\r\n                parent = parent.offsetParent;\r\n            }\r\n\r\n            return { x: x, y: y };\r\n        }\r\n\r\n        var parentElm = elm.parentNode;\r\n        var x, y, width, height, parentWidth, parentHeight;\r\n        var pos = getOffset(elm, parentElm);\r\n\r\n        x = pos.x;\r\n        y = pos.y;\r\n        width = elm.offsetWidth;\r\n        height = elm.offsetHeight;\r\n        parentWidth = parentElm.clientWidth;\r\n        parentHeight = parentElm.clientHeight;\r\n\r\n        if (align == \"end\") {\r\n            x -= parentWidth - width;\r\n            y -= parentHeight - height;\r\n        } else if (align == \"center\") {\r\n            x -= (parentWidth / 2) - (width / 2);\r\n            y -= (parentHeight / 2) - (height / 2);\r\n        }\r\n\r\n        parentElm.scrollLeft = x;\r\n        parentElm.scrollTop = y;\r\n\r\n        return this;\r\n    }\r\n\r\n    function scrollLeft(elm, value) {\r\n        var hasScrollLeft = \"scrollLeft\" in elm;\r\n        if (value === undefined) {\r\n            return hasScrollLeft ? elm.scrollLeft : elm.pageXOffset\r\n        } else {\r\n            if (hasScrollLeft) {\r\n                elm.scrollLeft = value;\r\n            } else {\r\n                elm.scrollTo(value, elm.scrollY);\r\n            }\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function scrollTop(elm, value) {\r\n        var hasScrollTop = \"scrollTop\" in elm;\r\n\r\n        if (value === undefined) {\r\n            return hasScrollTop ? elm.scrollTop : elm.pageYOffset\r\n        } else {\r\n            if (hasScrollTop) {\r\n                elm.scrollTop = value;\r\n            } else {\r\n                elm.scrollTo(elm.scrollX, value);\r\n            }\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function size(elm, dimension) {\r\n        if (dimension == undefined) {\r\n            if (langx.isWindow(elm)) {\r\n                return {\r\n                    width: elm.innerWidth,\r\n                    height: elm.innerHeight\r\n                }\r\n\r\n            } else if (langx.isDocument(elm)) {\r\n                return getDocumentSize(document);\r\n            } else {\r\n                return {\r\n                    width: elm.offsetWidth,\r\n                    height: elm.offsetHeight\r\n                }\r\n            }\r\n        } else {\r\n            var isBorderBox = (styler.css(elm, \"box-sizing\") === \"border-box\"),\r\n                props = {\r\n                    width: dimension.width,\r\n                    height: dimension.height\r\n                };\r\n            if (!isBorderBox) {\r\n                var pex = paddingExtents(elm),\r\n                    bex = borderExtents(elm);\r\n\r\n                if (props.width !== undefined && props.width !== \"\" && props.width !== null) {\r\n                    props.width = props.width - pex.left - pex.right - bex.left - bex.right;\r\n                }\r\n\r\n                if (props.height !== undefined && props.height !== \"\" && props.height !== null) {\r\n                    props.height = props.height - pex.top - pex.bottom - bex.top - bex.bottom;\r\n                }\r\n            }\r\n            styler.css(elm, props);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function width(elm, value) {\r\n        if (value == undefined) {\r\n            return size(elm).width;\r\n        } else {\r\n            size(elm, {\r\n                width: value\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function geom() {\r\n        return geom;\r\n    }\r\n\r\n    langx.mixin(geom, {\r\n        borderExtents: borderExtents,\r\n        //viewport coordinate\r\n        boundingPosition: boundingPosition,\r\n\r\n        boundingRect: boundingRect,\r\n\r\n        clientHeight: clientHeight,\r\n\r\n        clientSize: clientSize,\r\n\r\n        clientWidth: clientWidth,\r\n\r\n        contentRect: contentRect,\r\n\r\n        getDocumentSize: getDocumentSize,\r\n\r\n        height: height,\r\n\r\n        marginExtents: marginExtents,\r\n\r\n        marginRect : marginRect,\r\n\r\n        marginSize : marginSize,\r\n\r\n        offsetParent: offsetParent,\r\n\r\n        paddingExtents: paddingExtents,\r\n\r\n        //coordinate to the document\r\n        pagePosition: pagePosition,\r\n\r\n        pageRect: pageRect,\r\n\r\n        // coordinate relative to it's parent\r\n        relativePosition: relativePosition,\r\n\r\n        relativeRect: relativeRect,\r\n\r\n        scrollbarWidth : scrollbarWidth,\r\n\r\n        scrollIntoView: scrollIntoView,\r\n\r\n        scrollLeft: scrollLeft,\r\n\r\n        scrollTop: scrollTop,\r\n\r\n        size: size,\r\n\r\n        width: width\r\n    });\r\n\r\n    return skylark.geom = geom;\r\n});\r\n\ndefine('skylark-utils/eventer',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./browser\",\r\n    \"./finder\",\r\n    \"./noder\",\r\n    \"./datax\"\r\n], function(skylark, langx, browser, finder, noder, datax) {\r\n    var mixin = langx.mixin,\r\n        each = langx.each,\r\n        slice = Array.prototype.slice,\r\n        uid = langx.uid,\r\n        ignoreProperties = /^([A-Z]|returnValue$|layer[XY]$)/,\r\n        eventMethods = {\r\n            preventDefault: \"isDefaultPrevented\",\r\n            stopImmediatePropagation: \"isImmediatePropagationStopped\",\r\n            stopPropagation: \"isPropagationStopped\"\r\n        },\r\n        readyRE = /complete|loaded|interactive/;\r\n\r\n    function compatible(event, source) {\r\n        if (source || !event.isDefaultPrevented) {\r\n            if (!source) {\r\n                source = event;\r\n            }\r\n\r\n            langx.each(eventMethods, function(name, predicate) {\r\n                var sourceMethod = source[name];\r\n                event[name] = function() {\r\n                    this[predicate] = langx.returnTrue;\r\n                    return sourceMethod && sourceMethod.apply(source, arguments);\r\n                }\r\n                event[predicate] = langx.returnFalse;\r\n            });\r\n        }\r\n        return event;\r\n    }\r\n\r\n    function parse(event) {\r\n        var segs = (\"\" + event).split(\".\");\r\n        return {\r\n            type: segs[0],\r\n            ns: segs.slice(1).sort().join(\" \")\r\n        };\r\n    }\r\n\r\n    //create a custom dom event\r\n    var createEvent = (function() {\r\n        var EventCtors = [\r\n                window[\"CustomEvent\"], // 0 default\r\n                window[\"CompositionEvent\"], // 1\r\n                window[\"DragEvent\"], // 2\r\n                window[\"Event\"], // 3\r\n                window[\"FocusEvent\"], // 4\r\n                window[\"KeyboardEvent\"], // 5\r\n                window[\"MessageEvent\"], // 6\r\n                window[\"MouseEvent\"], // 7\r\n                window[\"MouseScrollEvent\"], // 8\r\n                window[\"MouseWheelEvent\"], // 9\r\n                window[\"MutationEvent\"], // 10\r\n                window[\"ProgressEvent\"], // 11\r\n                window[\"TextEvent\"], // 12\r\n                window[\"TouchEvent\"], // 13\r\n                window[\"UIEvent\"], // 14\r\n                window[\"WheelEvent\"], // 15\r\n                window[\"ClipboardEvent\"] // 16\r\n            ],\r\n            NativeEvents = {\r\n                \"compositionstart\": 1, // CompositionEvent\r\n                \"compositionend\": 1, // CompositionEvent\r\n                \"compositionupdate\": 1, // CompositionEvent\r\n\r\n                \"beforecopy\": 16, // ClipboardEvent\r\n                \"beforecut\": 16, // ClipboardEvent\r\n                \"beforepaste\": 16, // ClipboardEvent\r\n                \"copy\": 16, // ClipboardEvent\r\n                \"cut\": 16, // ClipboardEvent\r\n                \"paste\": 16, // ClipboardEvent\r\n\r\n                \"drag\": 2, // DragEvent\r\n                \"dragend\": 2, // DragEvent\r\n                \"dragenter\": 2, // DragEvent\r\n                \"dragexit\": 2, // DragEvent\r\n                \"dragleave\": 2, // DragEvent\r\n                \"dragover\": 2, // DragEvent\r\n                \"dragstart\": 2, // DragEvent\r\n                \"drop\": 2, // DragEvent\r\n\r\n                \"abort\": 3, // Event\r\n                \"change\": 3, // Event\r\n                \"error\": 3, // Event\r\n                \"selectionchange\": 3, // Event\r\n                \"submit\": 3, // Event\r\n                \"reset\": 3, // Event\r\n\r\n                \"focus\": 4, // FocusEvent\r\n                \"blur\": 4, // FocusEvent\r\n                \"focusin\": 4, // FocusEvent\r\n                \"focusout\": 4, // FocusEvent\r\n\r\n                \"keydown\": 5, // KeyboardEvent\r\n                \"keypress\": 5, // KeyboardEvent\r\n                \"keyup\": 5, // KeyboardEvent\r\n\r\n                \"message\": 6, // MessageEvent\r\n\r\n                \"click\": 7, // MouseEvent\r\n                \"contextmenu\": 7, // MouseEvent\r\n                \"dblclick\": 7, // MouseEvent\r\n                \"mousedown\": 7, // MouseEvent\r\n                \"mouseup\": 7, // MouseEvent\r\n                \"mousemove\": 7, // MouseEvent\r\n                \"mouseover\": 7, // MouseEvent\r\n                \"mouseout\": 7, // MouseEvent\r\n                \"mouseenter\": 7, // MouseEvent\r\n                \"mouseleave\": 7, // MouseEvent\r\n\r\n\r\n                \"textInput\": 12, // TextEvent\r\n\r\n                \"touchstart\": 13, // TouchEvent\r\n                \"touchmove\": 13, // TouchEvent\r\n                \"touchend\": 13, // TouchEvent\r\n\r\n                \"load\": 14, // UIEvent\r\n                \"resize\": 14, // UIEvent\r\n                \"select\": 14, // UIEvent\r\n                \"scroll\": 14, // UIEvent\r\n                \"unload\": 14, // UIEvent,\r\n\r\n                \"wheel\": 15 // WheelEvent\r\n            }\r\n        ;\r\n\r\n        function getEventCtor(type) {\r\n            var idx = NativeEvents[type];\r\n            if (!idx) {\r\n                idx = 0;\r\n            }\r\n            return EventCtors[idx];\r\n        }\r\n\r\n        return function(type, props) {\r\n            //create a custom dom event\r\n\r\n            if (langx.isString(type)) {\r\n                props = props || {};\r\n            } else {\r\n                props = type || {};\r\n                type = props.type || \"\";\r\n            }\r\n            var parsed = parse(type);\r\n            type = parsed.type;\r\n\r\n            props = langx.mixin({\r\n                bubbles: true,\r\n                cancelable: true\r\n            }, props);\r\n\r\n            if (parsed.ns) {\r\n                props.namespace = parsed.ns;\r\n            }\r\n\r\n            var ctor = getEventCtor(type),\r\n                e = new ctor(type, props);\r\n\r\n            langx.safeMixin(e, props);\r\n\r\n            return compatible(e);\r\n        };\r\n    })();\r\n\r\n    function createProxy(src,props) {\r\n        var key,\r\n            proxy = {\r\n                originalEvent: src\r\n            };\r\n        for (key in src) {\r\n            if (key !== \"keyIdentifier\" && !ignoreProperties.test(key) && src[key] !== undefined) {\r\n                proxy[key] = src[key];\r\n            }\r\n        }\r\n        if (props) {\r\n            langx.mixin(proxy,props);\r\n        }\r\n        return compatible(proxy, src);\r\n    }\r\n\r\n    var\r\n        specialEvents = {},\r\n        focusinSupported = \"onfocusin\" in window,\r\n        focus = { focus: \"focusin\", blur: \"focusout\" },\r\n        hover = { mouseenter: \"mouseover\", mouseleave: \"mouseout\" },\r\n        realEvent = function(type) {\r\n            return hover[type] || (focusinSupported && focus[type]) || type;\r\n        },\r\n        handlers = {},\r\n        EventBindings = langx.klass({\r\n            init: function(target, event) {\r\n                this._target = target;\r\n                this._event = event;\r\n                this._bindings = [];\r\n            },\r\n\r\n            add: function(fn, options) {\r\n                var bindings = this._bindings,\r\n                    binding = {\r\n                        fn: fn,\r\n                        options: langx.mixin({}, options)\r\n                    };\r\n\r\n                bindings.push(binding);\r\n\r\n                var self = this;\r\n                if (!self._listener) {\r\n                    self._listener = function(domEvt) {\r\n                        var elm = this,\r\n                            e = createProxy(domEvt),\r\n                            args = domEvt._args,\r\n                            bindings = self._bindings,\r\n                            ns = e.namespace;\r\n\r\n                        if (langx.isDefined(args)) {\r\n                            args = [e].concat(args);\r\n                        } else {\r\n                            args = [e];\r\n                        }\r\n\r\n                        langx.each(bindings,function(idx,binding) {\r\n                            var match = elm;\r\n                            if (e.isImmediatePropagationStopped && e.isImmediatePropagationStopped()) {\r\n                                return false;\r\n                            }\r\n                            var fn = binding.fn,\r\n                                options = binding.options || {},\r\n                                selector = options.selector,\r\n                                one = options.one,\r\n                                data = options.data;\r\n\r\n                            if (ns && ns != options.ns && options.ns.indexOf(ns)===-1) {\r\n                                return ;\r\n                            }\r\n                            if (selector) {\r\n                                match = finder.closest(e.target, selector);\r\n                                if (match && match !== elm) {\r\n                                    langx.mixin(e, {\r\n                                        currentTarget: match,\r\n                                        liveFired: elm\r\n                                    });\r\n                                } else {\r\n                                    return ;\r\n                                }\r\n                            }\r\n\r\n                            var originalEvent = self._event;\r\n                            if (originalEvent in hover) {\r\n                                var related = e.relatedTarget;\r\n                                if (related && (related === match || noder.contains(match, related))) {\r\n                                    return;\r\n                                }\r\n                            }                           \r\n\r\n                            if (langx.isDefined(data)) {\r\n                                e.data = data;\r\n                            }\r\n\r\n                            if (one) {\r\n                                self.remove(fn, options);\r\n                            }\r\n\r\n                            var result = fn.apply(match, args);\r\n\r\n                            if (result === false) {\r\n                                e.preventDefault();\r\n                                e.stopPropagation();\r\n                            }\r\n                        });;\r\n                    };\r\n\r\n                    var event = self._event;\r\n/*\r\n                    if (event in hover) {\r\n                        var l = self._listener;\r\n                        self._listener = function(e) {\r\n                            var related = e.relatedTarget;\r\n                            if (!related || (related !== this && !noder.contains(this, related))) {\r\n                                return l.apply(this, arguments);\r\n                            }\r\n                        }\r\n                    }\r\n*/\r\n\r\n                    if (self._target.addEventListener) {\r\n                        self._target.addEventListener(realEvent(event), self._listener, false);\r\n                    } else {\r\n                        console.warn(\"invalid eventer object\", self._target);\r\n                    }\r\n                }\r\n\r\n            },\r\n            remove: function(fn, options) {\r\n                options = langx.mixin({}, options);\r\n\r\n                function matcherFor(ns) {\r\n                    return new RegExp(\"(?:^| )\" + ns.replace(\" \", \" .* ?\") + \"(?: |$)\");\r\n                }\r\n                var matcher;\r\n                if (options.ns) {\r\n                    matcher = matcherFor(options.ns);\r\n                }\r\n\r\n                this._bindings = this._bindings.filter(function(binding) {\r\n                    var removing = (!fn || fn === binding.fn) &&\r\n                        (!matcher || matcher.test(binding.options.ns)) &&\r\n                        (!options.selector || options.selector == binding.options.selector);\r\n\r\n                    return !removing;\r\n                });\r\n                if (this._bindings.length == 0) {\r\n                    if (this._target.removeEventListener) {\r\n                        this._target.removeEventListener(realEvent(this._event), this._listener, false);\r\n                    }\r\n                    this._listener = null;\r\n                }\r\n            }\r\n        }),\r\n        EventsHandler = langx.klass({\r\n            init: function(elm) {\r\n                this._target = elm;\r\n                this._handler = {};\r\n            },\r\n\r\n            // add a event listener\r\n            // selector Optional\r\n            register: function(event, callback, options) {\r\n                // Seperate the event from the namespace\r\n                var parsed = parse(event),\r\n                    event = parsed.type,\r\n                    specialEvent = specialEvents[event],\r\n                    bindingEvent = specialEvent && (specialEvent.bindType || specialEvent.bindEventName);\r\n\r\n                var events = this._handler;\r\n\r\n                // Check if there is already a handler for this event\r\n                if (events[event] === undefined) {\r\n                    events[event] = new EventBindings(this._target, bindingEvent || event);\r\n                }\r\n\r\n                // Register the new callback function\r\n                events[event].add(callback, langx.mixin({\r\n                    ns: parsed.ns\r\n                }, options)); // options:{selector:xxx}\r\n            },\r\n\r\n            // remove a event listener\r\n            unregister: function(event, fn, options) {\r\n                // Check for parameter validtiy\r\n                var events = this._handler,\r\n                    parsed = parse(event);\r\n                event = parsed.type;\r\n\r\n                if (event) {\r\n                    var listener = events[event];\r\n\r\n                    if (listener) {\r\n                        listener.remove(fn, langx.mixin({\r\n                            ns: parsed.ns\r\n                        }, options));\r\n                    }\r\n                } else {\r\n                    //remove all events\r\n                    for (event in events) {\r\n                        var listener = events[event];\r\n                        listener.remove(fn, langx.mixin({\r\n                            ns: parsed.ns\r\n                        }, options));\r\n                    }\r\n                }\r\n            }\r\n        }),\r\n\r\n        findHandler = function(elm) {\r\n            var id = uid(elm),\r\n                handler = handlers[id];\r\n            if (!handler) {\r\n                handler = handlers[id] = new EventsHandler(elm);\r\n            }\r\n            return handler;\r\n        };\r\n\r\n    function off(elm, events, selector, callback) {\r\n        var $this = this\r\n        if (langx.isPlainObject(events)) {\r\n            langx.each(events, function(type, fn) {\r\n                off(elm, type, selector, fn);\r\n            })\r\n            return $this;\r\n        }\r\n\r\n        if (!langx.isString(selector) && !langx.isFunction(callback) && callback !== false) {\r\n            callback = selector;\r\n            selector = undefined;\r\n        }\r\n\r\n        if (callback === false) {\r\n            callback = langx.returnFalse;\r\n        }\r\n\r\n        if (typeof events == \"string\") {\r\n            if (events.indexOf(\",\") > -1) {\r\n                events = events.split(\",\");\r\n            } else {\r\n                events = events.split(/\\s/);\r\n            }\r\n        }\r\n\r\n        var handler = findHandler(elm);\r\n\r\n        if (events) events.forEach(function(event) {\r\n\r\n            handler.unregister(event, callback, {\r\n                selector: selector,\r\n            });\r\n        });\r\n        return this;\r\n    }\r\n\r\n    function on(elm, events, selector, data, callback, one) {\r\n\r\n        var autoRemove, delegator;\r\n        if (langx.isPlainObject(events)) {\r\n            langx.each(events, function(type, fn) {\r\n                on(elm, type, selector, data, fn, one);\r\n            });\r\n            return this;\r\n        }\r\n\r\n        if (!langx.isString(selector) && !langx.isFunction(callback)) {\r\n            callback = data;\r\n            data = selector;\r\n            selector = undefined;\r\n        }\r\n\r\n        if (langx.isFunction(data)) {\r\n            callback = data;\r\n            data = undefined;\r\n        }\r\n\r\n        if (callback === false) {\r\n            callback = langx.returnFalse;\r\n        }\r\n\r\n        if (typeof events == \"string\") {\r\n            if (events.indexOf(\",\") > -1) {\r\n                events = events.split(\",\");\r\n            } else {\r\n                events = events.split(/\\s/);\r\n            }\r\n        }\r\n\r\n        var handler = findHandler(elm);\r\n\r\n        events.forEach(function(event) {\r\n            if (event == \"ready\") {\r\n                return ready(callback);\r\n            }\r\n            handler.register(event, callback, {\r\n                data: data,\r\n                selector: selector,\r\n                one: !!one\r\n            });\r\n        });\r\n        return this;\r\n    }\r\n\r\n    function one(elm, events, selector, data, callback) {\r\n        on(elm, events, selector, data, callback, 1);\r\n\r\n        return this;\r\n    }\r\n\r\n    function stop(event) {\r\n        if (window.document.all) {\r\n            event.keyCode = 0;\r\n        }\r\n        if (event.preventDefault) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function trigger(evented, type, args) {\r\n        var e;\r\n        if (type instanceof Event) {\r\n            e = type;\r\n        } else {\r\n            e = createEvent(type, args);\r\n        }\r\n        e._args = args;\r\n\r\n        var fn = (evented.dispatchEvent || evented.trigger);\r\n        if (fn) {\r\n            fn.call(evented, e);\r\n        } else {\r\n            console.warn(\"The evented parameter is not a eventable object\");\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    function ready(callback) {\r\n        // need to check if document.body exists for IE as that browser reports\r\n        // document ready when it hasn't yet created the body elm\r\n        if (readyRE.test(document.readyState) && document.body) {\r\n            langx.defer(callback);\r\n        } else {\r\n            document.addEventListener('DOMContentLoaded', callback, false);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    var keyCodeLookup = {\r\n        \"backspace\": 8,\r\n        \"comma\": 188,\r\n        \"delete\": 46,\r\n        \"down\": 40,\r\n        \"end\": 35,\r\n        \"enter\": 13,\r\n        \"escape\": 27,\r\n        \"home\": 36,\r\n        \"left\": 37,\r\n        \"page_down\": 34,\r\n        \"page_up\": 33,\r\n        \"period\": 190,\r\n        \"right\": 39,\r\n        \"space\": 32,\r\n        \"tab\": 9,\r\n        \"up\": 38        \r\n    };\r\n    //example:\r\n    //shortcuts(elm).add(\"CTRL+ALT+SHIFT+X\",function(){console.log(\"test!\")});\r\n    function shortcuts(elm) {\r\n\r\n        var registry = datax.data(elm, \"shortcuts\");\r\n        if (!registry) {\r\n            registry = {};\r\n            datax.data(elm, \"shortcuts\", registry);\r\n            var run = function(shortcut, event) {\r\n                var n = event.metaKey || event.ctrlKey;\r\n                if (shortcut.ctrl == n && shortcut.alt == event.altKey && shortcut.shift == event.shiftKey) {\r\n                    if (event.keyCode == shortcut.keyCode || event.charCode && event.charCode == shortcut.charCode) {\r\n                        event.preventDefault();\r\n                        if (\"keydown\" == event.type) {\r\n                            shortcut.fn(event);\r\n                        }\r\n                        return true;\r\n                    }\r\n                }\r\n            };\r\n            on(elm, \"keyup keypress keydown\", function(event) {\r\n                if (!(/INPUT|TEXTAREA/.test(event.target.nodeName))) {\r\n                    for (var key in registry) {\r\n                        run(registry[key], event);\r\n                    }\r\n                }\r\n            });\r\n\r\n        }\r\n\r\n        return {\r\n            add: function(pattern, fn) {\r\n                var shortcutKeys;\r\n                if (pattern.indexOf(\",\") > -1) {\r\n                    shortcutKeys = pattern.toLowerCase().split(\",\");\r\n                } else {\r\n                    shortcutKeys = pattern.toLowerCase().split(\" \");\r\n                }\r\n                shortcutKeys.forEach(function(shortcutKey) {\r\n                    var setting = {\r\n                        fn: fn,\r\n                        alt: false,\r\n                        ctrl: false,\r\n                        shift: false\r\n                    };\r\n                    shortcutKey.split(\"+\").forEach(function(key) {\r\n                        switch (key) {\r\n                            case \"alt\":\r\n                            case \"ctrl\":\r\n                            case \"shift\":\r\n                                setting[key] = true;\r\n                                break;\r\n                            default:\r\n                                setting.charCode = key.charCodeAt(0);\r\n                                setting.keyCode = keyCodeLookup[key] || key.toUpperCase().charCodeAt(0);\r\n                        }\r\n                    });\r\n                    var regKey = (setting.ctrl ? \"ctrl\" : \"\") + \",\" + (setting.alt ? \"alt\" : \"\") + \",\" + (setting.shift ? \"shift\" : \"\") + \",\" + setting.keyCode;\r\n                    registry[regKey] = setting;\r\n                })\r\n            }\r\n\r\n        };\r\n\r\n    }\r\n\r\n    function eventer() {\r\n        return eventer;\r\n    }\r\n\r\n    langx.mixin(eventer, {\r\n        create: createEvent,\r\n\r\n        keys : keyCodeLookup,\r\n\r\n        off: off,\r\n\r\n        on: on,\r\n\r\n        one: one,\r\n\r\n        proxy: createProxy,\r\n\r\n        ready: ready,\r\n\r\n        shortcuts: shortcuts,\r\n\r\n        special : specialEvents,\r\n\r\n        stop: stop,\r\n\r\n        trigger: trigger\r\n\r\n    });\r\n\r\n    return skylark.eventer = eventer;\r\n});\r\n\ndefine('skylark-utils-interact/mover',[\r\n    \"./interact\",\r\n    \"skylark-utils/langx\",\r\n    \"skylark-utils/noder\",\r\n    \"skylark-utils/datax\",\r\n    \"skylark-utils/geom\",\r\n    \"skylark-utils/eventer\",\r\n    \"skylark-utils/styler\"\r\n],function(interact, langx,noder,datax,geom,eventer,styler){\r\n    var on = eventer.on,\r\n        off = eventer.off,\r\n        attr = datax.attr,\r\n        removeAttr = datax.removeAttr,\r\n        offset = geom.pagePosition,\r\n        addClass = styler.addClass,\r\n        height = geom.height,\r\n        some = Array.prototype.some,\r\n        map = Array.prototype.map;\r\n\r\n    function _place(/*DomNode*/ node, choices, layoutNode, aroundNodeCoords){\r\n        // summary:\r\n        //      Given a list of spots to put node, put it at the first spot where it fits,\r\n        //      of if it doesn't fit anywhere then the place with the least overflow\r\n        // choices: Array\r\n        //      Array of elements like: {corner: 'TL', pos: {x: 10, y: 20} }\r\n        //      Above example says to put the top-left corner of the node at (10,20)\r\n        // layoutNode: Function(node, aroundNodeCorner, nodeCorner, size)\r\n        //      for things like tooltip, they are displayed differently (and have different dimensions)\r\n        //      based on their orientation relative to the parent.   This adjusts the popup based on orientation.\r\n        //      It also passes in the available size for the popup, which is useful for tooltips to\r\n        //      tell them that their width is limited to a certain amount.   layoutNode() may return a value expressing\r\n        //      how much the popup had to be modified to fit into the available space.   This is used to determine\r\n        //      what the best placement is.\r\n        // aroundNodeCoords: Object\r\n        //      Size of aroundNode, ex: {w: 200, h: 50}\r\n\r\n        // get {x: 10, y: 10, w: 100, h:100} type obj representing position of\r\n        // viewport over document\r\n\r\n        var doc = noder.ownerDoc(node),\r\n            win = noder.ownerWindow(doc),\r\n            view = geom.size(win);\r\n\r\n        view.left = 0;\r\n        view.top = 0;\r\n\r\n        if(!node.parentNode || String(node.parentNode.tagName).toLowerCase() != \"body\"){\r\n            doc.body.appendChild(node);\r\n        }\r\n\r\n        var best = null;\r\n\r\n        some.apply(choices, function(choice){\r\n            var corner = choice.corner;\r\n            var pos = choice.pos;\r\n            var overflow = 0;\r\n\r\n            // calculate amount of space available given specified position of node\r\n            var spaceAvailable = {\r\n                w: {\r\n                    'L': view.left + view.width - pos.x,\r\n                    'R': pos.x - view.left,\r\n                    'M': view.width\r\n                }[corner.charAt(1)],\r\n\r\n                h: {\r\n                    'T': view.top + view.height - pos.y,\r\n                    'B': pos.y - view.top,\r\n                    'M': view.height\r\n                }[corner.charAt(0)]\r\n            };\r\n\r\n            if(layoutNode){\r\n                var res = layoutNode(node, choice.aroundCorner, corner, spaceAvailable, aroundNodeCoords);\r\n                overflow = typeof res == \"undefined\" ? 0 : res;\r\n            }\r\n\r\n            var bb = geom.size(node);\r\n\r\n            // coordinates and size of node with specified corner placed at pos,\r\n            // and clipped by viewport\r\n            var\r\n                startXpos = {\r\n                    'L': pos.x,\r\n                    'R': pos.x - bb.width,\r\n                    'M': Math.max(view.left, Math.min(view.left + view.width, pos.x + (bb.width >> 1)) - bb.width) // M orientation is more flexible\r\n                }[corner.charAt(1)],\r\n\r\n                startYpos = {\r\n                    'T': pos.y,\r\n                    'B': pos.y - bb.height,\r\n                    'M': Math.max(view.top, Math.min(view.top + view.height, pos.y + (bb.height >> 1)) - bb.height)\r\n                }[corner.charAt(0)],\r\n\r\n                startX = Math.max(view.left, startXpos),\r\n                startY = Math.max(view.top, startYpos),\r\n                endX = Math.min(view.left + view.width, startXpos + bb.width),\r\n                endY = Math.min(view.top + view.height, startYpos + bb.height),\r\n                width = endX - startX,\r\n                height = endY - startY;\r\n\r\n            overflow += (bb.width - width) + (bb.height - height);\r\n\r\n            if(best == null || overflow < best.overflow){\r\n                best = {\r\n                    corner: corner,\r\n                    aroundCorner: choice.aroundCorner,\r\n                    left: startX,\r\n                    top: startY,\r\n                    width: width,\r\n                    height: height,\r\n                    overflow: overflow,\r\n                    spaceAvailable: spaceAvailable\r\n                };\r\n            }\r\n\r\n            return !overflow;\r\n        });\r\n\r\n        // In case the best position is not the last one we checked, need to call\r\n        // layoutNode() again.\r\n        if(best.overflow && layoutNode){\r\n            layoutNode(node, best.aroundCorner, best.corner, best.spaceAvailable, aroundNodeCoords);\r\n        }\r\n\r\n\r\n        geom.boundingPosition(node,best);\r\n\r\n        return best;\r\n    }\r\n\r\n    function at(node, pos, corners, padding, layoutNode){\r\n        var choices = map.apply(corners, function(corner){\r\n            var c = {\r\n                corner: corner,\r\n                aroundCorner: reverse[corner],  // so TooltipDialog.orient() gets aroundCorner argument set\r\n                pos: {x: pos.x,y: pos.y}\r\n            };\r\n            if(padding){\r\n                c.pos.x += corner.charAt(1) == 'L' ? padding.x : -padding.x;\r\n                c.pos.y += corner.charAt(0) == 'T' ? padding.y : -padding.y;\r\n            }\r\n            return c;\r\n        });\r\n\r\n        return _place(node, choices, layoutNode);\r\n    }\r\n\r\n    function around(\r\n        /*DomNode*/     node,\r\n        /*DomNode|__Rectangle*/ anchor,\r\n        /*String[]*/    positions,\r\n        /*Boolean*/     leftToRight,\r\n        /*Function?*/   layoutNode){\r\n\r\n        // summary:\r\n        //      Position node adjacent or kitty-corner to anchor\r\n        //      such that it's fully visible in viewport.\r\n        // description:\r\n        //      Place node such that corner of node touches a corner of\r\n        //      aroundNode, and that node is fully visible.\r\n        // anchor:\r\n        //      Either a DOMNode or a rectangle (object with x, y, width, height).\r\n        // positions:\r\n        //      Ordered list of positions to try matching up.\r\n        //\r\n        //      - before: places drop down to the left of the anchor node/widget, or to the right in the case\r\n        //          of RTL scripts like Hebrew and Arabic; aligns either the top of the drop down\r\n        //          with the top of the anchor, or the bottom of the drop down with bottom of the anchor.\r\n        //      - after: places drop down to the right of the anchor node/widget, or to the left in the case\r\n        //          of RTL scripts like Hebrew and Arabic; aligns either the top of the drop down\r\n        //          with the top of the anchor, or the bottom of the drop down with bottom of the anchor.\r\n        //      - before-centered: centers drop down to the left of the anchor node/widget, or to the right\r\n        //          in the case of RTL scripts like Hebrew and Arabic\r\n        //      - after-centered: centers drop down to the right of the anchor node/widget, or to the left\r\n        //          in the case of RTL scripts like Hebrew and Arabic\r\n        //      - above-centered: drop down is centered above anchor node\r\n        //      - above: drop down goes above anchor node, left sides aligned\r\n        //      - above-alt: drop down goes above anchor node, right sides aligned\r\n        //      - below-centered: drop down is centered above anchor node\r\n        //      - below: drop down goes below anchor node\r\n        //      - below-alt: drop down goes below anchor node, right sides aligned\r\n        // layoutNode: Function(node, aroundNodeCorner, nodeCorner)\r\n        //      For things like tooltip, they are displayed differently (and have different dimensions)\r\n        //      based on their orientation relative to the parent.   This adjusts the popup based on orientation.\r\n        // leftToRight:\r\n        //      True if widget is LTR, false if widget is RTL.   Affects the behavior of \"above\" and \"below\"\r\n        //      positions slightly.\r\n        // example:\r\n        //  |   placeAroundNode(node, aroundNode, {'BL':'TL', 'TR':'BR'});\r\n        //      This will try to position node such that node's top-left corner is at the same position\r\n        //      as the bottom left corner of the aroundNode (ie, put node below\r\n        //      aroundNode, with left edges aligned).   If that fails it will try to put\r\n        //      the bottom-right corner of node where the top right corner of aroundNode is\r\n        //      (ie, put node above aroundNode, with right edges aligned)\r\n        //\r\n\r\n        // If around is a DOMNode (or DOMNode id), convert to coordinates.\r\n        var aroundNodePos;\r\n        if(typeof anchor == \"string\" || \"offsetWidth\" in anchor || \"ownerSVGElement\" in anchor){\r\n            aroundNodePos = domGeometry.position(anchor, true);\r\n\r\n            // For above and below dropdowns, subtract width of border so that popup and aroundNode borders\r\n            // overlap, preventing a double-border effect.  Unfortunately, difficult to measure the border\r\n            // width of either anchor or popup because in both cases the border may be on an inner node.\r\n            if(/^(above|below)/.test(positions[0])){\r\n                var anchorBorder = domGeometry.getBorderExtents(anchor),\r\n                    anchorChildBorder = anchor.firstChild ? domGeometry.getBorderExtents(anchor.firstChild) : {t:0,l:0,b:0,r:0},\r\n                    nodeBorder =  domGeometry.getBorderExtents(node),\r\n                    nodeChildBorder = node.firstChild ? domGeometry.getBorderExtents(node.firstChild) : {t:0,l:0,b:0,r:0};\r\n                aroundNodePos.y += Math.min(anchorBorder.t + anchorChildBorder.t, nodeBorder.t + nodeChildBorder.t);\r\n                aroundNodePos.h -=  Math.min(anchorBorder.t + anchorChildBorder.t, nodeBorder.t+ nodeChildBorder.t) +\r\n                    Math.min(anchorBorder.b + anchorChildBorder.b, nodeBorder.b + nodeChildBorder.b);\r\n            }\r\n        }else{\r\n            aroundNodePos = anchor;\r\n        }\r\n\r\n        // Compute position and size of visible part of anchor (it may be partially hidden by ancestor nodes w/scrollbars)\r\n        if(anchor.parentNode){\r\n            // ignore nodes between position:relative and position:absolute\r\n            var sawPosAbsolute = domStyle.getComputedStyle(anchor).position == \"absolute\";\r\n            var parent = anchor.parentNode;\r\n            while(parent && parent.nodeType == 1 && parent.nodeName != \"BODY\"){  //ignoring the body will help performance\r\n                var parentPos = domGeometry.position(parent, true),\r\n                    pcs = domStyle.getComputedStyle(parent);\r\n                if(/relative|absolute/.test(pcs.position)){\r\n                    sawPosAbsolute = false;\r\n                }\r\n                if(!sawPosAbsolute && /hidden|auto|scroll/.test(pcs.overflow)){\r\n                    var bottomYCoord = Math.min(aroundNodePos.y + aroundNodePos.h, parentPos.y + parentPos.h);\r\n                    var rightXCoord = Math.min(aroundNodePos.x + aroundNodePos.w, parentPos.x + parentPos.w);\r\n                    aroundNodePos.x = Math.max(aroundNodePos.x, parentPos.x);\r\n                    aroundNodePos.y = Math.max(aroundNodePos.y, parentPos.y);\r\n                    aroundNodePos.h = bottomYCoord - aroundNodePos.y;\r\n                    aroundNodePos.w = rightXCoord - aroundNodePos.x;\r\n                }\r\n                if(pcs.position == \"absolute\"){\r\n                    sawPosAbsolute = true;\r\n                }\r\n                parent = parent.parentNode;\r\n            }\r\n        }           \r\n\r\n        var x = aroundNodePos.x,\r\n            y = aroundNodePos.y,\r\n            width = \"w\" in aroundNodePos ? aroundNodePos.w : (aroundNodePos.w = aroundNodePos.width),\r\n            height = \"h\" in aroundNodePos ? aroundNodePos.h : (kernel.deprecated(\"place.around: dijit/place.__Rectangle: { x:\"+x+\", y:\"+y+\", height:\"+aroundNodePos.height+\", width:\"+width+\" } has been deprecated.  Please use { x:\"+x+\", y:\"+y+\", h:\"+aroundNodePos.height+\", w:\"+width+\" }\", \"\", \"2.0\"), aroundNodePos.h = aroundNodePos.height);\r\n\r\n        // Convert positions arguments into choices argument for _place()\r\n        var choices = [];\r\n        function push(aroundCorner, corner){\r\n            choices.push({\r\n                aroundCorner: aroundCorner,\r\n                corner: corner,\r\n                pos: {\r\n                    x: {\r\n                        'L': x,\r\n                        'R': x + width,\r\n                        'M': x + (width >> 1)\r\n                    }[aroundCorner.charAt(1)],\r\n                    y: {\r\n                        'T': y,\r\n                        'B': y + height,\r\n                        'M': y + (height >> 1)\r\n                    }[aroundCorner.charAt(0)]\r\n                }\r\n            })\r\n        }\r\n        array.forEach(positions, function(pos){\r\n            var ltr =  leftToRight;\r\n            switch(pos){\r\n                case \"above-centered\":\r\n                    push(\"TM\", \"BM\");\r\n                    break;\r\n                case \"below-centered\":\r\n                    push(\"BM\", \"TM\");\r\n                    break;\r\n                case \"after-centered\":\r\n                    ltr = !ltr;\r\n                    // fall through\r\n                case \"before-centered\":\r\n                    push(ltr ? \"ML\" : \"MR\", ltr ? \"MR\" : \"ML\");\r\n                    break;\r\n                case \"after\":\r\n                    ltr = !ltr;\r\n                    // fall through\r\n                case \"before\":\r\n                    push(ltr ? \"TL\" : \"TR\", ltr ? \"TR\" : \"TL\");\r\n                    push(ltr ? \"BL\" : \"BR\", ltr ? \"BR\" : \"BL\");\r\n                    break;\r\n                case \"below-alt\":\r\n                    ltr = !ltr;\r\n                    // fall through\r\n                case \"below\":\r\n                    // first try to align left borders, next try to align right borders (or reverse for RTL mode)\r\n                    push(ltr ? \"BL\" : \"BR\", ltr ? \"TL\" : \"TR\");\r\n                    push(ltr ? \"BR\" : \"BL\", ltr ? \"TR\" : \"TL\");\r\n                    break;\r\n                case \"above-alt\":\r\n                    ltr = !ltr;\r\n                    // fall through\r\n                case \"above\":\r\n                    // first try to align left borders, next try to align right borders (or reverse for RTL mode)\r\n                    push(ltr ? \"TL\" : \"TR\", ltr ? \"BL\" : \"BR\");\r\n                    push(ltr ? \"TR\" : \"TL\", ltr ? \"BR\" : \"BL\");\r\n                    break;\r\n                default:\r\n                    // To assist dijit/_base/place, accept arguments of type {aroundCorner: \"BL\", corner: \"TL\"}.\r\n                    // Not meant to be used directly.  Remove for 2.0.\r\n                    push(pos.aroundCorner, pos.corner);\r\n            }\r\n        });\r\n\r\n        var position = _place(node, choices, layoutNode, {w: width, h: height});\r\n        position.aroundNodePos = aroundNodePos;\r\n\r\n        return position;\r\n    }\r\n\r\n    function movable(elm, params) {\r\n        function updateWithTouchData(e) {\r\n            var keys, i;\r\n\r\n            if (e.changedTouches) {\r\n                keys = \"screenX screenY pageX pageY clientX clientY\".split(' ');\r\n                for (i = 0; i < keys.length; i++) {\r\n                    e[keys[i]] = e.changedTouches[0][keys[i]];\r\n                }\r\n            }\r\n        }\r\n\r\n        params = params || {};\r\n        var handleEl = params.handle || elm,\r\n            auto = params.auto === false ? false : true,\r\n            constraints = params.constraints,\r\n            overlayDiv,\r\n            doc = params.document || document,\r\n            downButton,\r\n            start,\r\n            stop,\r\n            drag,\r\n            startX,\r\n            startY,\r\n            originalPos,\r\n            size,\r\n            startedCallback = params.started,\r\n            movingCallback = params.moving,\r\n            stoppedCallback = params.stopped,\r\n\r\n            start = function(e) {\r\n                var docSize = geom.getDocumentSize(doc),\r\n                    cursor;\r\n\r\n                updateWithTouchData(e);\r\n\r\n                e.preventDefault();\r\n                downButton = e.button;\r\n                //handleEl = getHandleEl();\r\n                startX = e.screenX;\r\n                startY = e.screenY;\r\n\r\n                originalPos = geom.relativePosition(elm);\r\n                size = geom.size(elm);\r\n\r\n                // Grab cursor from handle so we can place it on overlay\r\n                cursor = styler.css(handleEl, \"curosr\");\r\n\r\n                overlayDiv = noder.createElement(\"div\");\r\n                styler.css(overlayDiv, {\r\n                    position: \"absolute\",\r\n                    top: 0,\r\n                    left: 0,\r\n                    width: docSize.width,\r\n                    height: docSize.height,\r\n                    zIndex: 0x7FFFFFFF,\r\n                    opacity: 0.0001,\r\n                    cursor: cursor\r\n                });\r\n                noder.append(doc.body, overlayDiv);\r\n\r\n                eventer.on(doc, \"mousemove touchmove\", move).on(doc, \"mouseup touchend\", stop);\r\n\r\n                if (startedCallback) {\r\n                    startedCallback(e);\r\n                }\r\n            },\r\n\r\n            move = function(e) {\r\n                updateWithTouchData(e);\r\n\r\n                if (e.button !== 0) {\r\n                    return stop(e);\r\n                }\r\n\r\n                e.deltaX = e.screenX - startX;\r\n                e.deltaY = e.screenY - startY;\r\n\r\n                if (auto) {\r\n                    var l = originalPos.left + e.deltaX,\r\n                        t = originalPos.top + e.deltaY;\r\n                    if (constraints) {\r\n\r\n                        if (l < constraints.minX) {\r\n                            l = constraints.minX;\r\n                        }\r\n\r\n                        if (l > constraints.maxX) {\r\n                            l = constraints.maxX;\r\n                        }\r\n\r\n                        if (t < constraints.minY) {\r\n                            t = constraints.minY;\r\n                        }\r\n\r\n                        if (t > constraints.maxY) {\r\n                            t = constraints.maxY;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                geom.relativePosition(elm, {\r\n                    left: l,\r\n                    top: t\r\n                })\r\n\r\n                e.preventDefault();\r\n                if (movingCallback) {\r\n                    movingCallback(e);\r\n                }\r\n            },\r\n\r\n            stop = function(e) {\r\n                updateWithTouchData(e);\r\n\r\n                eventer.off(doc, \"mousemove touchmove\", move).off(doc, \"mouseup touchend\", stop);\r\n\r\n                noder.remove(overlayDiv);\r\n\r\n                if (stoppedCallback) {\r\n                    stoppedCallback(e);\r\n                }\r\n            };\r\n\r\n        eventer.on(handleEl, \"mousedown touchstart\", start);\r\n\r\n        return {\r\n            // destroys the dragger.\r\n            remove: function() {\r\n                eventer.off(handleEl);\r\n            }\r\n        }\r\n    }\r\n\r\n    function mover(){\r\n      return mover;\r\n    }\r\n\r\n    langx.mixin(mover, {\r\n        around : around,\r\n\r\n        at: at, \r\n\r\n        movable: movable\r\n\r\n    });\r\n\r\n    return interact.mover = mover;\r\n});\r\n\ndefine('skylark-utils/fx',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./browser\",\r\n    \"./geom\",\r\n    \"./styler\",\r\n    \"./eventer\"\r\n], function(skylark, langx, browser, geom, styler, eventer) {\r\n    var animationName,\r\n        animationDuration,\r\n        animationTiming,\r\n        animationDelay,\r\n        transitionProperty,\r\n        transitionDuration,\r\n        transitionTiming,\r\n        transitionDelay,\r\n\r\n        animationEnd = browser.normalizeCssEvent('AnimationEnd'),\r\n        transitionEnd = browser.normalizeCssEvent('TransitionEnd'),\r\n\r\n        supportedTransforms = /^((translate|rotate|scale)(X|Y|Z|3d)?|matrix(3d)?|perspective|skew(X|Y)?)$/i,\r\n        transform = browser.css3PropPrefix + \"transform\",\r\n        cssReset = {};\r\n\r\n\r\n    cssReset[animationName = browser.normalizeCssProperty(\"animation-name\")] =\r\n        cssReset[animationDuration = browser.normalizeCssProperty(\"animation-duration\")] =\r\n        cssReset[animationDelay = browser.normalizeCssProperty(\"animation-delay\")] =\r\n        cssReset[animationTiming = browser.normalizeCssProperty(\"animation-timing-function\")] = \"\";\r\n\r\n    cssReset[transitionProperty = browser.normalizeCssProperty(\"transition-property\")] =\r\n        cssReset[transitionDuration = browser.normalizeCssProperty(\"transition-duration\")] =\r\n        cssReset[transitionDelay = browser.normalizeCssProperty(\"transition-delay\")] =\r\n        cssReset[transitionTiming = browser.normalizeCssProperty(\"transition-timing-function\")] = \"\";\r\n\r\n\r\n\r\n    function animate(elm, properties, duration, ease, callback, delay) {\r\n        var key,\r\n            cssValues = {},\r\n            cssProperties = [],\r\n            transforms = \"\",\r\n            that = this,\r\n            endEvent,\r\n            wrappedCallback,\r\n            fired = false,\r\n            hasScrollTop = false;\r\n\r\n        if (langx.isPlainObject(duration)) {\r\n            ease = duration.easing;\r\n            callback = duration.complete;\r\n            delay = duration.delay;\r\n            duration = duration.duration;\r\n        }\r\n\r\n        if (langx.isString(duration)) {\r\n            duration = fx.speeds[duration];\r\n        }\r\n        if (duration === undefined) {\r\n            duration = fx.speeds.normal;\r\n        }\r\n        duration = duration / 1000;\r\n        if (fx.off) {\r\n            duration = 0;\r\n        }\r\n\r\n        if (langx.isFunction(ease)) {\r\n            callback = ease;\r\n            eace = \"swing\";\r\n        } else {\r\n            ease = ease || \"swing\";\r\n        }\r\n\r\n        if (delay) {\r\n            delay = delay / 1000;\r\n        } else {\r\n            delay = 0;\r\n        }\r\n\r\n        if (langx.isString(properties)) {\r\n            // keyframe animation\r\n            cssValues[animationName] = properties;\r\n            cssValues[animationDuration] = duration + \"s\";\r\n            cssValues[animationTiming] = ease;\r\n            endEvent = animationEnd;\r\n        } else {\r\n            // CSS transitions\r\n            for (key in properties) {\r\n                if (supportedTransforms.test(key)) {\r\n                    transforms += key + \"(\" + properties[key] + \") \";\r\n                } else {\r\n                    if (key === \"scrollTop\") {\r\n                        hasScrollTop = true;\r\n                    }\r\n                    cssValues[key] = properties[key];\r\n                    cssProperties.push(langx.dasherize(key));\r\n                }\r\n            }\r\n            endEvent = transitionEnd;\r\n        }\r\n\r\n        if (transforms) {\r\n            cssValues[transform] = transforms;\r\n            cssProperties.push(transform);\r\n        }\r\n\r\n        if (duration > 0 && langx.isPlainObject(properties)) {\r\n            cssValues[transitionProperty] = cssProperties.join(\", \");\r\n            cssValues[transitionDuration] = duration + \"s\";\r\n            cssValues[transitionDelay] = delay + \"s\";\r\n            cssValues[transitionTiming] = ease;\r\n        }\r\n\r\n        wrappedCallback = function(event) {\r\n            fired = true;\r\n            if (event) {\r\n                if (event.target !== event.currentTarget) {\r\n                    return // makes sure the event didn't bubble from \"below\"\r\n                }\r\n                eventer.off(event.target, endEvent, wrappedCallback)\r\n            } else {\r\n                eventer.off(elm, animationEnd, wrappedCallback) // triggered by setTimeout\r\n            }\r\n            styler.css(elm, cssReset);\r\n            callback && callback.call(this);\r\n        };\r\n\r\n        if (duration > 0) {\r\n            eventer.on(elm, endEvent, wrappedCallback);\r\n            // transitionEnd is not always firing on older Android phones\r\n            // so make sure it gets fired\r\n            langx.debounce(function() {\r\n                if (fired) {\r\n                    return;\r\n                }\r\n                wrappedCallback.call(that);\r\n            }, ((duration + delay) * 1000) + 25)();\r\n        }\r\n\r\n        // trigger page reflow so new elements can animate\r\n        elm.clientLeft;\r\n\r\n        styler.css(elm, cssValues);\r\n\r\n        if (duration <= 0) {\r\n            langx.debounce(function() {\r\n                if (fired) {\r\n                    return;\r\n                }\r\n                wrappedCallback.call(that);\r\n            }, 0)();\r\n        }\r\n\r\n        if (hasScrollTop) {\r\n            scrollToTop(elm, properties[\"scrollTop\"], duration, callback);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    function show(elm, speed, callback) {\r\n        styler.show(elm);\r\n        if (speed) {\r\n            if (!callback && langx.isFunction(speed)) {\r\n                callback = speed;\r\n                speed = \"normal\";\r\n            }\r\n            styler.css(elm, \"opacity\", 0)\r\n            animate(elm, { opacity: 1, scale: \"1,1\" }, speed, callback);\r\n        }\r\n        return this;\r\n    }\r\n\r\n\r\n    function hide(elm, speed, callback) {\r\n        if (speed) {\r\n            if (!callback && langx.isFunction(speed)) {\r\n                callback = speed;\r\n                speed = \"normal\";\r\n            }\r\n            animate(elm, { opacity: 0, scale: \"0,0\" }, speed, function() {\r\n                styler.hide(elm);\r\n                if (callback) {\r\n                    callback.call(elm);\r\n                }\r\n            });\r\n        } else {\r\n            styler.hide(elm);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function scrollToTop(elm, pos, speed, callback) {\r\n        var scrollFrom = parseInt(elm.scrollTop),\r\n            i = 0,\r\n            runEvery = 5, // run every 5ms\r\n            freq = speed * 1000 / runEvery,\r\n            scrollTo = parseInt(pos);\r\n\r\n        var interval = setInterval(function() {\r\n            i++;\r\n\r\n            if (i <= freq) elm.scrollTop = (scrollTo - scrollFrom) / freq * i + scrollFrom;\r\n\r\n            if (i >= freq + 1) {\r\n                clearInterval(interval);\r\n                if (callback) langx.debounce(callback, 1000)();\r\n            }\r\n        }, runEvery);\r\n    }\r\n\r\n    function toggle(elm, speed, callback) {\r\n        if (styler.isInvisible(elm)) {\r\n            show(elm, speed, callback);\r\n        } else {\r\n            hide(elm, speed, callback);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function fadeTo(elm, speed, opacity, easing, callback) {\r\n        animate(elm, { opacity: opacity }, speed, easing, callback);\r\n        return this;\r\n    }\r\n\r\n    function fadeIn(elm, speed, easing, callback) {\r\n        var target = styler.css(elm, \"opacity\");\r\n        if (target > 0) {\r\n            styler.css(elm, \"opacity\", 0);\r\n        } else {\r\n            target = 1;\r\n        }\r\n        styler.show(elm);\r\n\r\n        fadeTo(elm, speed, target, easing, callback);\r\n\r\n        return this;\r\n    }\r\n\r\n    function fadeOut(elm, speed, easing, callback) {\r\n        var _elm = elm,\r\n            complete,\r\n            options = {};\r\n\r\n        if (langx.isPlainObject(speed)) {\r\n            options.easing = speed.easing;\r\n            options.duration = speed.duration;\r\n            complete = speed.complete;\r\n        } else {\r\n            options.duration = speed;\r\n            if (callback) {\r\n                complete = callback;\r\n                options.easing = easing;\r\n            } else {\r\n                complete = easing;\r\n            }\r\n        }\r\n        options.complete = function() {\r\n            styler.hide(elm);\r\n            if (complete) {\r\n                complete.call(elm);\r\n            }\r\n        }\r\n\r\n        fadeTo(elm, options, 0);\r\n\r\n        return this;\r\n    }\r\n\r\n    function fadeToggle(elm, speed, ceasing, allback) {\r\n        if (styler.isInvisible(elm)) {\r\n            fadeIn(elm, speed, easing, callback);\r\n        } else {\r\n            fadeOut(elm, speed, easing, callback);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function slideDown(elm,duration,callback) {    \r\n    \r\n        // get the element position to restore it then\r\n        var position = styler.css(elm,'position');\r\n        \r\n        // show element if it is hidden\r\n        show(elm);\r\n        \r\n        // place it so it displays as usually but hidden\r\n        styler.css(elm,{\r\n            position: 'absolute',\r\n            visibility: 'hidden'\r\n        });\r\n        \r\n        // get naturally height, margin, padding\r\n        var marginTop = styler.css(elm,'margin-top');\r\n        var marginBottom = styler.css(elm,'margin-bottom');\r\n        var paddingTop = styler.css(elm,'padding-top');\r\n        var paddingBottom = styler.css(elm,'padding-bottom');\r\n        var height = styler.css(elm,'height');\r\n        \r\n        // set initial css for animation\r\n        styler.css(elm,{\r\n            position: position,\r\n            visibility: 'visible',\r\n            overflow: 'hidden',\r\n            height: 0,\r\n            marginTop: 0,\r\n            marginBottom: 0,\r\n            paddingTop: 0,\r\n            paddingBottom: 0\r\n        });\r\n        \r\n        // animate to gotten height, margin and padding\r\n        animate(elm,{\r\n            height: height,\r\n            marginTop: marginTop,\r\n            marginBottom: marginBottom,\r\n            paddingTop: paddingTop,\r\n            paddingBottom: paddingBottom\r\n        }, {\r\n            duration : duration,\r\n            complete: function(){\r\n                if (callback) {\r\n                    callback.apply(elm); \r\n                }\r\n            }    \r\n        }\r\n    );\r\n        \r\n        return this;\r\n    };\r\n\r\n    function slideUp(elm,duration,callback) {\r\n        // active the function only if the element is visible\r\n        if (geom.height(elm) > 0) {\r\n                   \r\n            // get the element position to restore it then\r\n            var position = styler.css(elm,'position');\r\n            \r\n            // get the element height, margin and padding to restore them then\r\n            var height = styler.css(elm,'height');\r\n            var marginTop = styler.css(elm,'margin-top');\r\n            var marginBottom = styler.css(elm,'margin-bottom');\r\n            var paddingTop = styler.css(elm,'padding-top');\r\n            var paddingBottom = styler.css(elm,'padding-bottom');\r\n            \r\n            // set initial css for animation\r\n            styler.css(elm,{\r\n                visibility: 'visible',\r\n                overflow: 'hidden',\r\n                height: height,\r\n                marginTop: marginTop,\r\n                marginBottom: marginBottom,\r\n                paddingTop: paddingTop,\r\n                paddingBottom: paddingBottom\r\n            });\r\n            \r\n            // animate element height, margin and padding to zero\r\n            animate(elm,{\r\n                height: 0,\r\n                marginTop: 0,\r\n                marginBottom: 0,\r\n                paddingTop: 0,\r\n                paddingBottom: 0\r\n            }, { \r\n                // callback : restore the element position, height, margin and padding to original values\r\n                duration: duration,\r\n                queue: false,\r\n                complete: function(){\r\n                    hide(elm);\r\n                    styler.css(elm,{\r\n                        visibility: 'visible',\r\n                        overflow: 'hidden',\r\n                        height: height,\r\n                        marginTop: marginTop,\r\n                        marginBottom: marginBottom,\r\n                        paddingTop: paddingTop,\r\n                        paddingBottom: paddingBottom\r\n                    });\r\n                    if (callback) {\r\n                        callback.apply(elm); \r\n                    }\r\n                }\r\n            });\r\n        }\r\n        return this;\r\n    };\r\n    \r\n    /* SlideToggle */\r\n    function slideToggle(elm,duration,callback) {\r\n    \r\n        // if the element is hidden, slideDown !\r\n        if (geom.height(elm) == 0) {\r\n            slideDown(elm,duration,callback);\r\n        } \r\n        // if the element is visible, slideUp !\r\n        else {\r\n            slideUp(elm,duration,callback);\r\n        }\r\n        return this;\r\n    };\r\n\r\n\r\n    function fx() {\r\n        return fx;\r\n    }\r\n\r\n    langx.mixin(fx, {\r\n        off: false,\r\n\r\n        speeds: {\r\n            normal: 400,\r\n            fast: 200,\r\n            slow: 600\r\n        },\r\n\r\n        animate: animate,\r\n        fadeIn: fadeIn,\r\n        fadeOut: fadeOut,\r\n        fadeTo: fadeTo,\r\n        fadeToggle: fadeToggle,\r\n        hide: hide,\r\n        scrollToTop: scrollToTop,\r\n\r\n        slideDown : slideDown,\r\n        slideToggle : slideToggle,\r\n        slideUp : slideUp,\r\n        show: show,\r\n        toggle: toggle\r\n    });\r\n\r\n    return skylark.fx = fx;\r\n});\ndefine('skylark-utils/query',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./noder\",\r\n    \"./datax\",\r\n    \"./eventer\",\r\n    \"./finder\",\r\n    \"./geom\",\r\n    \"./styler\",\r\n    \"./fx\"\r\n], function(skylark, langx, noder, datax, eventer, finder, geom, styler, fx) {\r\n    var some = Array.prototype.some,\r\n        push = Array.prototype.push,\r\n        every = Array.prototype.every,\r\n        concat = Array.prototype.concat,\r\n        slice = Array.prototype.slice,\r\n        map = Array.prototype.map,\r\n        filter = Array.prototype.filter,\r\n        forEach = Array.prototype.forEach,\r\n        indexOf = Array.prototype.indexOf,\r\n        isQ;\r\n\r\n    var rquickExpr = /^(?:[^#<]*(<[\\w\\W]+>)[^>]*$|#([\\w\\-]*)$)/;\r\n\r\n    var funcArg = langx.funcArg,\r\n        isArrayLike = langx.isArrayLike,\r\n        isString = langx.isString,\r\n        uniq = langx.uniq,\r\n        isFunction = langx.isFunction;\r\n\r\n    var type = langx.type,\r\n        isArray = langx.isArray,\r\n\r\n        isWindow = langx.isWindow,\r\n\r\n        isDocument = langx.isDocument,\r\n\r\n        isObject = langx.isObject,\r\n\r\n        isPlainObject = langx.isPlainObject,\r\n\r\n        compact = langx.compact,\r\n\r\n        flatten = langx.flatten,\r\n\r\n        camelCase = langx.camelCase,\r\n\r\n        dasherize = langx.dasherize,\r\n        children = finder.children;\r\n\r\n    function wrapper_map(func, context) {\r\n        return function() {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            var result = $.map(self, function(elem, idx) {\r\n                return func.apply(context, [elem].concat(params));\r\n            });\r\n            return $(uniq(result));\r\n        }\r\n    }\r\n\r\n    function wrapper_selector(func, context, last) {\r\n        return function(selector) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            var result = this.map(function(idx, elem) {\r\n                // if (elem.nodeType == 1) {\r\n                if (elem.querySelector) {\r\n                    return func.apply(context, last ? [elem] : [elem, selector]);\r\n                }\r\n            });\r\n            if (last && selector) {\r\n                return result.filter(selector);\r\n            } else {\r\n                return result;\r\n            }\r\n        }\r\n    }\r\n\r\n    function wrapper_selector_until(func, context, last) {\r\n        return function(util, selector) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            if (selector === undefined) {\r\n                selector = util;\r\n                util = undefined;\r\n            }\r\n            var result = this.map(function(idx, elem) {\r\n                // if (elem.nodeType == 1) {\r\n                if (elem.querySelector) {\r\n                    return func.apply(context, last ? [elem, util] : [elem, selector, util]);\r\n                }\r\n            });\r\n            if (last && selector) {\r\n                return result.filter(selector);\r\n            } else {\r\n                return result;\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    function wrapper_every_act(func, context) {\r\n        return function() {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            this.each(function(idx) {\r\n                func.apply(context, [this].concat(params));\r\n            });\r\n            return self;\r\n        }\r\n    }\r\n\r\n    function wrapper_every_act_firstArgFunc(func, context, oldValueFunc) {\r\n        return function(arg1) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            forEach.call(self, function(elem, idx) {\r\n                var newArg1 = funcArg(elem, arg1, idx, oldValueFunc(elem));\r\n                func.apply(context, [elem, arg1].concat(params.slice(1)));\r\n            });\r\n            return self;\r\n        }\r\n    }\r\n\r\n    function wrapper_some_chk(func, context) {\r\n        return function() {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            return some.call(self, function(elem) {\r\n                return func.apply(context, [elem].concat(params));\r\n            });\r\n        }\r\n    }\r\n\r\n    function wrapper_name_value(func, context, oldValueFunc) {\r\n        return function(name, value) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n\r\n            if (langx.isPlainObject(name) || langx.isDefined(value)) {\r\n                forEach.call(self, function(elem, idx) {\r\n                    var newValue;\r\n                    if (oldValueFunc) {\r\n                        newValue = funcArg(elem, value, idx, oldValueFunc(elem, name));\r\n                    } else {\r\n                        newValue = value\r\n                    }\r\n                    func.apply(context, [elem].concat(params));\r\n                });\r\n                return self;\r\n            } else {\r\n                if (self[0]) {\r\n                    return func.apply(context, [self[0], name]);\r\n                }\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    function wrapper_value(func, context, oldValueFunc) {\r\n        return function(value) {\r\n            var self = this;\r\n\r\n            if (langx.isDefined(value)) {\r\n                forEach.call(self, function(elem, idx) {\r\n                    var newValue;\r\n                    if (oldValueFunc) {\r\n                        newValue = funcArg(elem, value, idx, oldValueFunc(elem));\r\n                    } else {\r\n                        newValue = value\r\n                    }\r\n                    func.apply(context, [elem, newValue]);\r\n                });\r\n                return self;\r\n            } else {\r\n                if (self[0]) {\r\n                    return func.apply(context, [self[0]]);\r\n                }\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    var NodeList = langx.klass({\r\n        klassName: \"SkNodeList\",\r\n        init: function(selector, context) {\r\n            var self = this,\r\n                match, nodes, node, props;\r\n\r\n            if (selector) {\r\n                self.context = context = context || noder.doc();\r\n\r\n                if (isString(selector)) {\r\n                    // a html string or a css selector is expected\r\n                    self.selector = selector;\r\n\r\n                    if (selector.charAt(0) === \"<\" && selector.charAt(selector.length - 1) === \">\" && selector.length >= 3) {\r\n                        match = [null, selector, null];\r\n                    } else {\r\n                        match = rquickExpr.exec(selector);\r\n                    }\r\n\r\n                    if (match) {\r\n                        if (match[1]) {\r\n                            // if selector is html\r\n                            nodes = noder.createFragment(selector);\r\n\r\n                            if (langx.isPlainObject(context)) {\r\n                                props = context;\r\n                            }\r\n\r\n                        } else {\r\n                            node = finder.byId(match[2], noder.ownerDoc(context));\r\n\r\n                            if (node) {\r\n                                // if selector is id\r\n                                nodes = [node];\r\n                            }\r\n\r\n                        }\r\n                    } else {\r\n                        // if selector is css selector\r\n                        if (langx.isString(context)) {\r\n                            context = finder.find(context);\r\n                        }\r\n\r\n                        nodes = finder.descendants(context, selector);\r\n                    }\r\n                } else {\r\n                    if (isArray(selector)) {\r\n                        // a dom node array is expected\r\n                        nodes = selector;\r\n                    } else {\r\n                        // a dom node is expected\r\n                        nodes = [selector];\r\n                    }\r\n                    //self.add(selector, false);\r\n                }\r\n            }\r\n\r\n\r\n            if (nodes) {\r\n\r\n                push.apply(self, nodes);\r\n\r\n                if (props) {\r\n                    for ( var name  in props ) {\r\n                        // Properties of context are called as methods if possible\r\n                        if ( langx.isFunction( this[ name ] ) ) {\r\n                            this[ name ]( props[ name ] );\r\n                        } else {\r\n                            this.attr( name, props[ name ] );\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            return self;\r\n        }\r\n    });\r\n\r\n    var query = (function() {\r\n        isQ = function(object) {\r\n            return object instanceof NodeList;\r\n        }\r\n        init = function(selector, context) {\r\n            return new NodeList(selector, context);\r\n        }\r\n\r\n        var $ = function(selector, context) {\r\n            if (isFunction(selector)) {\r\n                eventer.ready(function() {\r\n                    selector($);\r\n                });\r\n            } else if (isQ(selector)) {\r\n                return selector;\r\n            } else {\r\n                if (context && isQ(context) && isString(selector)) {\r\n                    return context.find(selector);\r\n                }\r\n                return init(selector, context);\r\n            }\r\n        };\r\n\r\n        $.fn = NodeList.prototype;\r\n        langx.mixin($.fn, {\r\n            // `map` and `slice` in the jQuery API work differently\r\n            // from their array counterparts\r\n            length : 0,\r\n\r\n            map: function(fn) {\r\n                return $(uniq(langx.map(this, function(el, i) {\r\n                    return fn.call(el, i, el)\r\n                })));\r\n            },\r\n\r\n            slice: function() {\r\n                return $(slice.apply(this, arguments))\r\n            },\r\n\r\n            forEach: function() {\r\n                return forEach.apply(this,arguments);\r\n            },\r\n\r\n            get: function(idx) {\r\n                return idx === undefined ? slice.call(this) : this[idx >= 0 ? idx : idx + this.length]\r\n            },\r\n\r\n            indexOf: function() {\r\n                return indexOf.apply(this,arguments);\r\n            },\r\n\r\n            toArray: function() {\r\n                return slice.call(this);\r\n            },\r\n\r\n            size: function() {\r\n                return this.length\r\n            },\r\n\r\n            remove: wrapper_every_act(noder.remove, noder),\r\n\r\n            each: function(callback) {\r\n                langx.each(this, callback);\r\n                return this;\r\n            },\r\n\r\n            filter: function(selector) {\r\n                if (isFunction(selector)) return this.not(this.not(selector))\r\n                return $(filter.call(this, function(element) {\r\n                    return finder.matches(element, selector)\r\n                }))\r\n            },\r\n\r\n            add: function(selector, context) {\r\n                return $(uniq(this.toArray().concat($(selector, context).toArray())));\r\n            },\r\n\r\n            is: function(selector) {\r\n                if (this.length > 0) {\r\n                    var self = this;\r\n                    if (langx.isString(selector)) {\r\n                        return some.call(self,function(elem) {\r\n                            return finder.matches(elem, selector);\r\n                        });\r\n                    } else if (langx.isArrayLike(selector)) {\r\n                       return some.call(self,function(elem) {\r\n                            return langx.inArray(elem, selector);\r\n                        });\r\n                    } else if (langx.isHtmlNode(selector)) {\r\n                       return some.call(self,function(elem) {\r\n                            return elem ==  selector;\r\n                        });\r\n                    }\r\n                }\r\n                return false;\r\n            },\r\n            \r\n            not: function(selector) {\r\n                var nodes = []\r\n                if (isFunction(selector) && selector.call !== undefined)\r\n                    this.each(function(idx) {\r\n                        if (!selector.call(this, idx)) nodes.push(this)\r\n                    })\r\n                else {\r\n                    var excludes = typeof selector == 'string' ? this.filter(selector) :\r\n                        (isArrayLike(selector) && isFunction(selector.item)) ? slice.call(selector) : $(selector)\r\n                    this.forEach(function(el) {\r\n                        if (excludes.indexOf(el) < 0) nodes.push(el)\r\n                    })\r\n                }\r\n                return $(nodes)\r\n            },\r\n\r\n            has: function(selector) {\r\n                return this.filter(function() {\r\n                    return isObject(selector) ?\r\n                        noder.contains(this, selector) :\r\n                        $(this).find(selector).size()\r\n                })\r\n            },\r\n\r\n            eq: function(idx) {\r\n                return idx === -1 ? this.slice(idx) : this.slice(idx, +idx + 1);\r\n            },\r\n\r\n            first: function() {\r\n                return this.eq(0);\r\n            },\r\n\r\n            last: function() {\r\n                return this.eq(-1);\r\n            },\r\n\r\n            find: wrapper_selector(finder.descendants, finder),\r\n\r\n            closest: wrapper_selector(finder.closest, finder),\r\n            /*\r\n                        closest: function(selector, context) {\r\n                            var node = this[0],\r\n                                collection = false\r\n                            if (typeof selector == 'object') collection = $(selector)\r\n                            while (node && !(collection ? collection.indexOf(node) >= 0 : finder.matches(node, selector)))\r\n                                node = node !== context && !isDocument(node) && node.parentNode\r\n                            return $(node)\r\n                        },\r\n            */\r\n\r\n\r\n            parents: wrapper_selector(finder.ancestors, finder),\r\n\r\n            parentsUntil: wrapper_selector_until(finder.ancestors, finder),\r\n\r\n\r\n            parent: wrapper_selector(finder.parent, finder),\r\n\r\n            children: wrapper_selector(finder.children, finder),\r\n\r\n            contents: wrapper_map(noder.contents, noder),\r\n\r\n            empty: wrapper_every_act(noder.empty, noder),\r\n\r\n            // `pluck` is borrowed from Prototype.js\r\n            pluck: function(property) {\r\n                return langx.map(this, function(el) {\r\n                    return el[property]\r\n                })\r\n            },\r\n\r\n            pushStack : function(elms) {\r\n                var ret = $(elms);\r\n                ret.prevObject = this;\r\n                return ret;\r\n            },\r\n            \r\n            show: wrapper_every_act(fx.show, fx),\r\n\r\n            replaceWith: function(newContent) {\r\n                return this.before(newContent).remove();\r\n            },\r\n\r\n            wrap: function(structure) {\r\n                var func = isFunction(structure)\r\n                if (this[0] && !func)\r\n                    var dom = $(structure).get(0),\r\n                        clone = dom.parentNode || this.length > 1\r\n\r\n                return this.each(function(index) {\r\n                    $(this).wrapAll(\r\n                        func ? structure.call(this, index) :\r\n                        clone ? dom.cloneNode(true) : dom\r\n                    )\r\n                })\r\n            },\r\n\r\n            wrapAll: function(wrappingElement) {\r\n                if (this[0]) {\r\n                    $(this[0]).before(wrappingElement = $(wrappingElement));\r\n                    var children;\r\n                    // drill down to the inmost element\r\n                    while ((children = wrappingElement.children()).length) {\r\n                        wrappingElement = children.first();\r\n                    }\r\n                    $(wrappingElement).append(this);\r\n                }\r\n                return this\r\n            },\r\n\r\n            wrapInner: function(wrappingElement) {\r\n                var func = isFunction(wrappingElement)\r\n                return this.each(function(index) {\r\n                    var self = $(this),\r\n                        contents = self.contents(),\r\n                        dom = func ? wrappingElement.call(this, index) : wrappingElement\r\n                    contents.length ? contents.wrapAll(dom) : self.append(dom)\r\n                })\r\n            },\r\n\r\n            unwrap: function(selector) {\r\n                if (this.parent().children().length === 0) {\r\n                    // remove dom without text\r\n                    this.parent(selector).not(\"body\").each(function() {\r\n                        $(this).replaceWith(document.createTextNode(this.childNodes[0].textContent));\r\n                    });\r\n                } else {\r\n                    this.parent().each(function() {\r\n                        $(this).replaceWith($(this).children())\r\n                    });\r\n                }\r\n                return this\r\n            },\r\n\r\n            clone: function() {\r\n                return this.map(function() {\r\n                    return this.cloneNode(true)\r\n                })\r\n            },\r\n\r\n            hide: wrapper_every_act(fx.hide, fx),\r\n\r\n            toggle: function(setting) {\r\n                return this.each(function() {\r\n                    var el = $(this);\r\n                    (setting === undefined ? el.css(\"display\") == \"none\" : setting) ? el.show(): el.hide()\r\n                })\r\n            },\r\n\r\n            prev: function(selector) {\r\n                return $(this.pluck('previousElementSibling')).filter(selector || '*')\r\n            },\r\n\r\n            prevAll: wrapper_selector(finder.previousSibling, finder),\r\n\r\n            next: function(selector) {\r\n                return $(this.pluck('nextElementSibling')).filter(selector || '*')\r\n            },\r\n\r\n            nextAll: wrapper_selector(finder.nextSiblings, finder),\r\n\r\n            siblings: wrapper_selector(finder.siblings, finder),\r\n\r\n            html: wrapper_value(noder.html, noder, noder.html),\r\n\r\n            text: wrapper_value(datax.text, datax, datax.text),\r\n\r\n            attr: wrapper_name_value(datax.attr, datax, datax.attr),\r\n\r\n            removeAttr: wrapper_every_act(datax.removeAttr, datax),\r\n\r\n            prop: wrapper_name_value(datax.prop, datax, datax.prop),\r\n\r\n            removeProp: wrapper_every_act(datax.removeProp, datax),\r\n\r\n            data: wrapper_name_value(datax.data, datax, datax.data),\r\n\r\n            removeData: wrapper_every_act(datax.removeData, datax),\r\n\r\n            val: wrapper_value(datax.val, datax, datax.val),\r\n\r\n            offset: wrapper_value(geom.pagePosition, geom, geom.pagePosition),\r\n\r\n            style: wrapper_name_value(styler.css, styler),\r\n\r\n            css: wrapper_name_value(styler.css, styler),\r\n\r\n            index: function(elem) {\r\n                if (elem) {\r\n                    return this.indexOf($(elem)[0]);\r\n                } else {\r\n                    return this.parent().children().indexOf(this[0]);\r\n                }\r\n            },\r\n\r\n            //hasClass(name)\r\n            hasClass: wrapper_some_chk(styler.hasClass, styler),\r\n\r\n            //addClass(name)\r\n            addClass: wrapper_every_act_firstArgFunc(styler.addClass, styler, styler.className),\r\n\r\n            //removeClass(name)\r\n            removeClass: wrapper_every_act_firstArgFunc(styler.removeClass, styler, styler.className),\r\n\r\n            //toogleClass(name,when)\r\n            toggleClass: wrapper_every_act_firstArgFunc(styler.toggleClass, styler, styler.className),\r\n\r\n            scrollTop: wrapper_value(geom.scrollTop, geom),\r\n\r\n            scrollLeft: wrapper_value(geom.scrollLeft, geom),\r\n\r\n            position: function() {\r\n                if (!this.length) return\r\n\r\n                var elem = this[0];\r\n\r\n                return geom.relativePosition(elem);\r\n            },\r\n\r\n            offsetParent: wrapper_map(geom.offsetParent, geom)\r\n        });\r\n\r\n        // for now\r\n        $.fn.detach = $.fn.remove;\r\n\r\n        $.fn.hover = function(fnOver, fnOut) {\r\n            return this.mouseenter(fnOver).mouseleave(fnOut || fnOver);\r\n        };\r\n\r\n        $.fn.size = wrapper_value(geom.size, geom);\r\n\r\n        $.fn.width = wrapper_value(geom.width, geom, geom.width);\r\n\r\n        $.fn.height = wrapper_value(geom.height, geom, geom.height);\r\n\r\n        $.fn.clientSize = wrapper_value(geom.clientSize, geom.clientSize);\r\n\r\n        ['width', 'height'].forEach(function(dimension) {\r\n            var offset, Dimension = dimension.replace(/./, function(m) {\r\n                return m[0].toUpperCase()\r\n            });\r\n\r\n            $.fn['outer' + Dimension] = function(margin, value) {\r\n                if (arguments.length) {\r\n                    if (typeof margin !== 'boolean') {\r\n                        value = margin;\r\n                        margin = false;\r\n                    }\r\n                } else {\r\n                    margin = false;\r\n                    value = undefined;\r\n                }\r\n\r\n                if (value === undefined) {\r\n                    var el = this[0];\r\n                    if (!el) {\r\n                        return undefined;\r\n                    }\r\n                    var cb = geom.size(el);\r\n                    if (margin) {\r\n                        var me = geom.marginExtents(el);\r\n                        cb.width = cb.width + me.left + me.right;\r\n                        cb.height = cb.height + me.top + me.bottom;\r\n                    }\r\n                    return dimension === \"width\" ? cb.width : cb.height;\r\n                } else {\r\n                    return this.each(function(idx, el) {\r\n                        var mb = {};\r\n                        var me = geom.marginExtents(el);\r\n                        if (dimension === \"width\") {\r\n                            mb.width = value;\r\n                            if (margin) {\r\n                                mb.width = mb.width - me.left - me.right\r\n                            }\r\n                        } else {\r\n                            mb.height = value;\r\n                            if (margin) {\r\n                                mb.height = mb.height - me.top - me.bottom;\r\n                            }\r\n                        }\r\n                        geom.size(el, mb);\r\n                    })\r\n\r\n                }\r\n            };\r\n        })\r\n\r\n        $.fn.innerWidth = wrapper_value(geom.clientWidth, geom, geom.clientWidth);\r\n\r\n        $.fn.innerHeight = wrapper_value(geom.clientHeight, geom, geom.clientHeight);\r\n\r\n\r\n        var traverseNode = noder.traverse;\r\n\r\n        function wrapper_node_operation(func, context, oldValueFunc) {\r\n            return function(html) {\r\n                var argType, nodes = langx.map(arguments, function(arg) {\r\n                    argType = type(arg)\r\n                    return argType == \"object\" || argType == \"array\" || arg == null ?\r\n                        arg : noder.createFragment(arg)\r\n                });\r\n                if (nodes.length < 1) {\r\n                    return this\r\n                }\r\n                this.each(function(idx) {\r\n                    func.apply(context, [this, nodes, idx > 0]);\r\n                });\r\n                return this;\r\n            }\r\n        }\r\n\r\n\r\n        $.fn.after = wrapper_node_operation(noder.after, noder);\r\n\r\n        $.fn.prepend = wrapper_node_operation(noder.prepend, noder);\r\n\r\n        $.fn.before = wrapper_node_operation(noder.before, noder);\r\n\r\n        $.fn.append = wrapper_node_operation(noder.append, noder);\r\n\r\n\r\n        langx.each( {\r\n            appendTo: \"append\",\r\n            prependTo: \"prepend\",\r\n            insertBefore: \"before\",\r\n            insertAfter: \"after\",\r\n            replaceAll: \"replaceWith\"\r\n        }, function( name, original ) {\r\n            $.fn[ name ] = function( selector ) {\r\n                var elems,\r\n                    ret = [],\r\n                    insert = $( selector ),\r\n                    last = insert.length - 1,\r\n                    i = 0;\r\n\r\n                for ( ; i <= last; i++ ) {\r\n                    elems = i === last ? this : this.clone( true );\r\n                    $( insert[ i ] )[ original ]( elems );\r\n\r\n                    // Support: Android <=4.0 only, PhantomJS 1 only\r\n                    // .get() because push.apply(_, arraylike) throws on ancient WebKit\r\n                    push.apply( ret, elems.get() );\r\n                }\r\n\r\n                return this.pushStack( ret );\r\n            };\r\n        } );\r\n\r\n/*\r\n        $.fn.insertAfter = function(html) {\r\n            $(html).after(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.insertBefore = function(html) {\r\n            $(html).before(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.appendTo = function(html) {\r\n            $(html).append(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.prependTo = function(html) {\r\n            $(html).prepend(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.replaceAll = function(selector) {\r\n            $(selector).replaceWith(this);\r\n            return this;\r\n        };\r\n*/\r\n        return $;\r\n    })();\r\n\r\n    (function($) {\r\n        $.fn.on = wrapper_every_act(eventer.on, eventer);\r\n\r\n        $.fn.off = wrapper_every_act(eventer.off, eventer);\r\n\r\n        $.fn.trigger = wrapper_every_act(eventer.trigger, eventer);\r\n\r\n\r\n        ('focusin focusout focus blur load resize scroll unload click dblclick ' +\r\n            'mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave ' +\r\n            'change select keydown keypress keyup error').split(' ').forEach(function(event) {\r\n            $.fn[event] = function(data, callback) {\r\n                return (0 in arguments) ?\r\n                    this.on(event, data, callback) :\r\n                    this.trigger(event)\r\n            }\r\n        });\r\n\r\n\r\n        $.fn.one = function(event, selector, data, callback) {\r\n            if (!langx.isString(selector) && !langx.isFunction(callback)) {\r\n                callback = data;\r\n                data = selector;\r\n                selector = null;\r\n            }\r\n\r\n            if (langx.isFunction(data)) {\r\n                callback = data;\r\n                data = null;\r\n            }\r\n\r\n            return this.on(event, selector, data, callback, 1)\r\n        };\r\n\r\n        $.fn.animate = wrapper_every_act(fx.animate, fx);\r\n\r\n        $.fn.show = wrapper_every_act(fx.show, fx);\r\n        $.fn.hide = wrapper_every_act(fx.hide, fx);\r\n        $.fn.toogle = wrapper_every_act(fx.toogle, fx);\r\n        $.fn.fadeTo = wrapper_every_act(fx.fadeTo, fx);\r\n        $.fn.fadeIn = wrapper_every_act(fx.fadeIn, fx);\r\n        $.fn.fadeOut = wrapper_every_act(fx.fadeOut, fx);\r\n        $.fn.fadeToggle = wrapper_every_act(fx.fadeToggle, fx);\r\n\r\n        $.fn.slideDown = wrapper_every_act(fx.slideDown, fx);\r\n        $.fn.slideToggle = wrapper_every_act(fx.slideToggle, fx);\r\n        $.fn.slideUp = wrapper_every_act(fx.slideUp, fx);\r\n    })(query);\r\n\r\n\r\n    (function($) {\r\n        $.fn.end = function() {\r\n            return this.prevObject || $()\r\n        }\r\n\r\n        $.fn.andSelf = function() {\r\n            return this.add(this.prevObject || $())\r\n        }\r\n\r\n        $.fn.addBack = function(selector) {\r\n            if (this.prevObject) {\r\n                if (selector) {\r\n                    return this.add(this.prevObject.filter(selector));\r\n                } else {\r\n                    return this.add(this.prevObject);\r\n                }\r\n            } else {\r\n                return this;\r\n            }\r\n        }\r\n\r\n        'filter,add,not,eq,first,last,find,closest,parents,parent,children,siblings'.split(',').forEach(function(property) {\r\n            var fn = $.fn[property]\r\n            $.fn[property] = function() {\r\n                var ret = fn.apply(this, arguments)\r\n                ret.prevObject = this\r\n                return ret\r\n            }\r\n        })\r\n    })(query);\r\n\r\n\r\n    (function($) {\r\n        $.fn.query = $.fn.find;\r\n\r\n        $.fn.place = function(refNode, position) {\r\n            // summary:\r\n            //      places elements of this node list relative to the first element matched\r\n            //      by queryOrNode. Returns the original NodeList. See: `dojo/dom-construct.place`\r\n            // queryOrNode:\r\n            //      may be a string representing any valid CSS3 selector or a DOM node.\r\n            //      In the selector case, only the first matching element will be used\r\n            //      for relative positioning.\r\n            // position:\r\n            //      can be one of:\r\n            //\r\n            //      -   \"last\" (default)\r\n            //      -   \"first\"\r\n            //      -   \"before\"\r\n            //      -   \"after\"\r\n            //      -   \"only\"\r\n            //      -   \"replace\"\r\n            //\r\n            //      or an offset in the childNodes\r\n            if (langx.isString(refNode)) {\r\n                refNode = finder.descendant(refNode);\r\n            } else if (isQ(refNode)) {\r\n                refNode = refNode[0];\r\n            }\r\n            return this.each(function(i, node) {\r\n                switch (position) {\r\n                    case \"before\":\r\n                        noder.before(refNode, node);\r\n                        break;\r\n                    case \"after\":\r\n                        noder.after(refNode, node);\r\n                        break;\r\n                    case \"replace\":\r\n                        noder.replace(refNode, node);\r\n                        break;\r\n                    case \"only\":\r\n                        noder.empty(refNode);\r\n                        noder.append(refNode, node);\r\n                        break;\r\n                    case \"first\":\r\n                        noder.prepend(refNode, node);\r\n                        break;\r\n                        // else fallthrough...\r\n                    default: // aka: last\r\n                        noder.append(refNode, node);\r\n                }\r\n            });\r\n        };\r\n\r\n        $.fn.addContent = function(content, position) {\r\n            if (content.template) {\r\n                content = langx.substitute(content.template, content);\r\n            }\r\n            return this.append(content);\r\n        };\r\n\r\n        $.fn.replaceClass = function(newClass, oldClass) {\r\n            this.removeClass(oldClass);\r\n            this.addClass(newClass);\r\n            return this;\r\n        };\r\n\r\n    })(query);\r\n\r\n\r\n    return skylark.query = query;\r\n\r\n});\ndefine('skylark-utils-interact/resizer',[\r\n    \"./interact\",\r\n    \"skylark-utils/langx\",\r\n    \"skylark-utils/noder\",\r\n    \"skylark-utils/datax\",\r\n    \"skylark-utils/finder\",\r\n    \"skylark-utils/geom\",\r\n    \"skylark-utils/eventer\",\r\n    \"./mover\",\r\n    \"skylark-utils/styler\",\r\n    \"skylark-utils/query\"\r\n],function(interact, langx,noder,datax,finder,geom,eventer,mover,styler,$){\r\n    var on = eventer.on,\r\n        off = eventer.off,\r\n        attr = datax.attr,\r\n        removeAttr = datax.removeAttr,\r\n        offset = geom.pagePosition,\r\n        addClass = styler.addClass,\r\n        height = geom.height,\r\n        some = Array.prototype.some,\r\n        map = Array.prototype.map;\r\n\r\n\r\n\r\n    function resizable(elm, params) {\r\n\r\n        var defaultOptions = {\r\n            // prevents browser level actions like forward back gestures\r\n            touchActionNone: true,\r\n\r\n            direction : {\r\n                top: false, \r\n                left: false, \r\n                right: true, \r\n                bottom: true\r\n            },\r\n            // selector for handle that starts dragging\r\n            handle : {\r\n                border : true,\r\n                grabber: \"\",\r\n                selector: true\r\n            }\r\n        };\r\n\r\n        params = params || {};\r\n        var handle = params.handle || {},\r\n            handleEl,\r\n            direction = params.direction || defaultOptions.direction,\r\n            startSize,\r\n            currentSize,\r\n            startedCallback = params.started,\r\n            movingCallback = params.moving,\r\n            stoppedCallback = params.stopped;\r\n\r\n        if (langx.isString(handle)) {\r\n            handleEl = finder.find(elm,handle);\r\n        } else if (langx.isHtmlNode(handle)) {\r\n            handleEl = handle;\r\n        }\r\n        mover.movable(handleEl,{\r\n            auto : false,\r\n            started : function(e) {\r\n                startSize = geom.size(elm);\r\n                if (startedCallback) {\r\n                    startedCallback(e);\r\n                }\r\n            },\r\n            moving : function(e) {\r\n                currentSize = {\r\n                };\r\n                if (direction.left || direction.right) {\r\n                    currentSize.width = startSize.width + e.deltaX;\r\n                } else {\r\n                    currentSize.width = startSize.width;\r\n                }\r\n\r\n                if (direction.top || direction.bottom) {\r\n                    currentSize.height = startSize.height + e.deltaY;\r\n                } else {\r\n                    currentSize.height = startSize.height;\r\n                }\r\n\r\n                geom.size(elm,currentSize);\r\n\r\n                if (movingCallback) {\r\n                    movingCallback(e);\r\n                }\r\n            },\r\n            stopped: function(e) {\r\n                if (stoppedCallback) {\r\n                    stoppedCallback(e);\r\n                }                \r\n            }\r\n        });\r\n        \r\n        return {\r\n            // destroys the dragger.\r\n            remove: function() {\r\n                eventer.off(handleEl);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    $.fn.resizable = function(params) {\r\n        this.each(function(el){\r\n            resizable(this,params);\r\n        });\r\n    };\r\n\r\n    function resizer(){\r\n      return resizer;\r\n    }\r\n\r\n    langx.mixin(resizer, {\r\n        resizable: resizable\r\n    });\r\n\r\n    return interact.resizer = resizer;\r\n});\r\n\ndefine('skylark-utils-interact/selector',[\r\n    \"./interact\",\r\n    \"skylark-utils/langx\",\r\n    \"skylark-utils/noder\",\r\n    \"skylark-utils/datax\",\r\n    \"skylark-utils/geom\",\r\n    \"skylark-utils/eventer\",\r\n    \"./mover\",\r\n    \"skylark-utils/styler\",\r\n    \"skylark-utils/query\"\r\n],function(interact, langx,noder,datax,geom,eventer,mover,styler,$){\r\n    var on = eventer.on,\r\n        off = eventer.off,\r\n        attr = datax.attr,\r\n        removeAttr = datax.removeAttr,\r\n        offset = geom.pagePosition,\r\n        addClass = styler.addClass,\r\n        height = geom.height,\r\n        some = Array.prototype.some,\r\n        map = Array.prototype.map;\r\n\r\n\r\n\r\n    var options = {\r\n        // Function which returns custom X and Y coordinates of the mouse\r\n            mousePosFetcher: null,\r\n            // Indicates custom target updating strategy\r\n            updateTarget: null,\r\n            // Function which gets HTMLElement as an arg and returns it relative position\r\n            ratioDefault: 0,\r\n            posFetcher: null,\r\n\r\n            started: null,\r\n            moving: null,\r\n            ended: null,\r\n\r\n            // Resize unit step\r\n            step: 1,\r\n\r\n            // Minimum dimension\r\n            minDim: 32,\r\n\r\n            // Maximum dimension\r\n            maxDim: '',\r\n\r\n            // Unit used for height resizing\r\n            unitHeight: 'px',\r\n\r\n            // Unit used for width resizing\r\n            unitWidth: 'px',\r\n\r\n            // The key used for height resizing\r\n            keyHeight: 'height',\r\n\r\n            // The key used for width resizing\r\n            keyWidth: 'width',\r\n\r\n            // If true, will override unitHeight and unitWidth, on start, with units\r\n            // from the current focused element (currently used only in SelectComponent)\r\n            currentUnit: 1,\r\n\r\n            // Handlers\r\n            direction : {\r\n                tl: 1, // Top left\r\n                tc: 1, // Top center\r\n                tr: 1, // Top right\r\n                cl: 1, // Center left\r\n                cr: 1, // Center right\r\n                bl: 1, // Bottom left\r\n                bc: 1, // Bottom center\r\n                br: 1 // Bottom right,\r\n            },\r\n            handler : {\r\n                border : true,\r\n                grabber: \"\",\r\n                selector: true\r\n            }\r\n        } ,\r\n\r\n\r\n        currentPos,\r\n        startRect,\r\n        currentRect,\r\n        delta;\r\n\r\n    var classPrefix = \"\",\r\n        container,\r\n        handlers,\r\n        target,\r\n        direction ={\r\n            left : true,\r\n            right : true,\r\n            top : true,\r\n            bottom : true\r\n        },\r\n        startSize,\r\n        currentSize,\r\n\r\n        startedCallback,\r\n        resizingCallback,\r\n        stoppedCallback;\r\n\r\n\r\n\r\n    function init (options) {\r\n        options = options || {};\r\n        classPrefix = options.classPrefix || \"\";\r\n\r\n        var appendTo = options.appendTo || document.body;\r\n        container = noder.createElement('div',{\r\n            \"class\" : classPrefix + 'resizer-c'\r\n        });\r\n        noder.append(appendTo,container);\r\n\r\n\r\n        // Create handlers\r\n        handlers = {};\r\n        ['tl', 'tc', 'tr', 'cl', 'cr', 'bl', 'bc', 'br'].forEach(function(n) {\r\n            return handlers[n] = noder.createElement(\"i\",{\r\n                    \"class\" : classPrefix + 'resizer-h ' + classPrefix + 'resizer-h-' + n,\r\n                    \"data-resize-handler\" : n\r\n                });\r\n        });\r\n\r\n        for (var n in handlers) {\r\n            var handler = handlers[n];\r\n            noder.append(container,handler);\r\n            mover.movable(handler,{\r\n                auto : false,\r\n                started : started,\r\n                moving : resizing,\r\n                stopped : stopped\r\n            })\r\n        }\r\n    }\r\n\r\n    function started(e) {\r\n        var handler = e.target;\r\n        startSize = geom.size(target);\r\n        if (startedCallback) {\r\n            startedCallback(e);\r\n        }\r\n    }\r\n\r\n    function resizing(e) {\r\n        currentSize = {};\r\n\r\n        if (direction.left || direction.right) {\r\n            currentSize.width = startSize.width + e.deltaX;\r\n        } else {\r\n            currentSize.width = startSize.width;\r\n        }\r\n\r\n        if (direction.top || direction.bottom) {\r\n            currentSize.height = startSize.height + e.deltaY;\r\n        } else {\r\n            currentSize.height = startSize.height;\r\n        }\r\n\r\n        geom.size(target,currentSize);\r\n        geom.pageRect(container,geom.pageRect(target));\r\n\r\n        if (resizingCallback) {\r\n            resizingCallback(e);\r\n        }\r\n\r\n    }\r\n\r\n    function stopped(e) {\r\n        if (stoppedCallback) {\r\n            stoppedCallback(e);\r\n        }\r\n\r\n    }\r\n\r\n    function select(el,options) {\r\n        // Avoid focusing on already focused element\r\n        if (el && el === target) {\r\n          return;\r\n        } \r\n\r\n        target = el; \r\n        startDim = rectDim = startPos = null;\r\n\r\n        geom.pageRect(container,geom.pageRect(target));\r\n        styler.show(container);\r\n\r\n    }\r\n\r\n\r\n    function unselect(e) {\r\n        if (container) {\r\n            styler.hide(container);\r\n        }\r\n        target = null;\r\n    }\r\n\r\n    function isHandler(el) {\r\n        if (handlers) {\r\n            for (var n in handlers) {\r\n              if (handlers[n] === el) return true;\r\n            }                \r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n    function docs(el) {\r\n        return [noder.ownerDoc(el), noder.doc()];\r\n    }\r\n\r\n    function selector(){\r\n      return selector;\r\n    }\r\n\r\n    langx.mixin(selector, {\r\n        init : init,\r\n\r\n        select : select,\r\n\r\n        unselect : unselect\r\n\r\n    });\r\n\r\n    return interact.selector = selector;\r\n});\r\n\ndefine('skylark-utils/dnd',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./noder\",\r\n    \"./datax\",\r\n    \"./finder\",\r\n    \"./geom\",\r\n    \"./eventer\",\r\n    \"./styler\"\r\n],function(skylark, langx,noder,datax,finder,geom,eventer,styler){\r\n    var on = eventer.on,\r\n        off = eventer.off,\r\n        attr = datax.attr,\r\n        removeAttr = datax.removeAttr,\r\n        offset = geom.pagePosition,\r\n        addClass = styler.addClass,\r\n        height = geom.height;\r\n\r\n\r\n    var DndManager = langx.Evented.inherit({\r\n      klassName : \"DndManager\",\r\n\r\n      init : function() {\r\n\r\n      },\r\n\r\n      prepare : function(draggable) {\r\n          var e = eventer.create(\"preparing\",{\r\n             dragSource : draggable.dragSource,\r\n             dragHandle : draggable.dragHandle\r\n          });\r\n          draggable.trigger(e);\r\n          draggable.dragSource = e.dragSource;\r\n      },\r\n\r\n      start : function(draggable,event) {\r\n\r\n        var p = geom.pagePosition(draggable.dragSource);\r\n        this.draggingOffsetX = parseInt(event.pageX - p.left);\r\n        this.draggingOffsetY = parseInt(event.pageY - p.top)\r\n\r\n        var e = eventer.create(\"started\",{\r\n          elm : draggable.elm,\r\n          dragSource : draggable.dragSource,\r\n          dragHandle : draggable.dragHandle,\r\n          ghost : null,\r\n\r\n          transfer : {\r\n          }\r\n        });\r\n\r\n        draggable.trigger(e);\r\n\r\n\r\n        this.dragging = draggable;\r\n\r\n        if (draggable.draggingClass) {\r\n          styler.addClass(draggable.dragSource,draggable.draggingClass);\r\n        }\r\n\r\n        this.draggingGhost = e.ghost;\r\n        if (!this.draggingGhost) {\r\n          this.draggingGhost = draggable.elm;\r\n        }\r\n\r\n        this.draggingTransfer = e.transfer;\r\n        if (this.draggingTransfer) {\r\n\r\n            langx.each(this.draggingTransfer,function(key,value){\r\n                event.dataTransfer.setData(key, value);\r\n            });\r\n        }\r\n        \r\n        event.dataTransfer.setDragImage(this.draggingGhost, this.draggingOffsetX, this.draggingOffsetY);\r\n\r\n        event.dataTransfer.effectAllowed = \"copyMove\";\r\n\r\n        var e1 = eventer.create(\"dndStarted\",{\r\n          elm : e.elm,\r\n          dragSource : e.dragSource,\r\n          dragHandle : e.dragHandle,\r\n          ghost : e.ghost,\r\n          transfer : e.transfer\r\n        });\r\n\r\n        this.trigger(e1);\r\n      },\r\n\r\n      over : function() {\r\n\r\n      },\r\n\r\n      end : function(dropped) {\r\n        var dragging = this.dragging;\r\n        if (dragging) {\r\n          if (dragging.draggingClass) {\r\n            styler.removeClass(dragging.dragSource,dragging.draggingClass);\r\n          }\r\n        }\r\n\r\n        var e = eventer.create(\"dndEnded\",{\r\n        });        \r\n        this.trigger(e);\r\n\r\n\r\n        this.dragging = null;\r\n        this.draggingTransfer = null;\r\n        this.draggingGhost = null;\r\n        this.draggingOffsetX = null;\r\n        this.draggingOffsetY = null;\r\n      }\r\n    });\r\n\r\n    var manager = new DndManager(),\r\n        draggingHeight,\r\n        placeholders = [];\r\n\r\n\r\n\r\n    var Draggable = langx.Evented.inherit({\r\n      klassName : \"Draggable\",\r\n\r\n      init : function (elm,params) {\r\n        var self = this;\r\n\r\n        self.elm = elm;\r\n        self.draggingClass = params.draggingClass || \"dragging\",\r\n        self.params = langx.clone(params);\r\n\r\n        [\"preparing\",\"started\", \"ended\", \"moving\"].forEach(function(eventName) {\r\n            if (langx.isFunction(params[eventName])) {\r\n                self.on(eventName, params[eventName]);\r\n            }\r\n        });\r\n\r\n\r\n        eventer.on(elm,{\r\n          \"mousedown\" : function(e) {\r\n            var params = self.params;\r\n            if (params.handle) {\r\n              self.dragHandle = finder.closest(e.target,params.handle);\r\n              if (!self.dragHandle) {\r\n                return;\r\n              }\r\n            }\r\n            if (params.source) {\r\n                self.dragSource = finder.closest(e.target,params.source);\r\n            } else {\r\n                self.dragSource = self.elm;\r\n            }\r\n            manager.prepare(self);\r\n            if (self.dragSource) {\r\n              datax.attr(self.dragSource, \"draggable\", 'true');\r\n            } \r\n          },\r\n\r\n          \"mouseup\" :   function(e) {\r\n            if (self.dragSource) {\r\n              //datax.attr(self.dragSource, \"draggable\", 'false');\r\n              self.dragSource = null;\r\n              self.dragHandle = null;\r\n            }\r\n          },\r\n\r\n          \"dragstart\":  function(e) {\r\n            datax.attr(self.dragSource, \"draggable\", 'false');\r\n            manager.start(self, e);\r\n          },\r\n\r\n          \"dragend\":   function(e){\r\n            eventer.stop(e);\r\n\r\n            if (!manager.dragging) {\r\n              return;\r\n            }\r\n\r\n            manager.end(false);\r\n          }\r\n        });\r\n\r\n      }\r\n\r\n    });\r\n\r\n\r\n    var Droppable = langx.Evented.inherit({\r\n      klassName : \"Droppable\",\r\n\r\n      init : function(elm,params) {\r\n        var self = this,\r\n            draggingClass = params.draggingClass || \"dragging\",\r\n            hoverClass,\r\n            activeClass,\r\n            acceptable = true;\r\n\r\n        self.elm = elm;\r\n        self._params = params;\r\n\r\n        [\"started\",\"entered\", \"leaved\", \"dropped\",\"overing\"].forEach(function(eventName) {\r\n            if (langx.isFunction(params[eventName])) {\r\n                self.on(eventName, params[eventName]);\r\n            }\r\n        });\r\n\r\n        eventer.on(elm,{\r\n          \"dragover\" : function(e) {\r\n            e.stopPropagation()\r\n\r\n            if (!acceptable) {\r\n              return\r\n            }\r\n\r\n            var e2 = eventer.create(\"overing\",{\r\n                overElm : e.target,\r\n                transfer : manager.draggingTransfer,\r\n                acceptable : true\r\n            });\r\n            self.trigger(e2);\r\n\r\n            if (e2.acceptable) {\r\n              e.preventDefault() // allow drop\r\n\r\n              e.dataTransfer.dropEffect = \"copyMove\";\r\n            }\r\n\r\n          },\r\n\r\n          \"dragenter\" :   function(e) {\r\n            var params = self._params,\r\n                elm = self.elm;\r\n\r\n            var e2 = eventer.create(\"entered\",{\r\n                transfer : manager.draggingTransfer\r\n            });\r\n\r\n            self.trigger(e2);\r\n\r\n            e.stopPropagation()\r\n\r\n            if (hoverClass && acceptable) {\r\n              styler.addClass(elm,hoverClass)\r\n            }\r\n          },\r\n\r\n          \"dragleave\":  function(e) {\r\n            var params = self._params,\r\n                elm = self.elm;\r\n            if (!acceptable) return false\r\n            \r\n            var e2 = eventer.create(\"leaved\",{\r\n                transfer : manager.draggingTransfer\r\n            });\r\n            \r\n            self.trigger(e2);\r\n\r\n            e.stopPropagation()\r\n\r\n            if (hoverClass && acceptable) {\r\n              styler.removeClass(elm,hoverClass);\r\n            }\r\n          },\r\n\r\n          \"drop\":   function(e){\r\n            var params = self._params,\r\n                elm = self.elm;\r\n\r\n            eventer.stop(e); // stops the browser from redirecting.\r\n\r\n            if (!manager.dragging) return\r\n\r\n           // manager.dragging.elm.removeClass('dragging');\r\n\r\n            if (hoverClass && acceptable) {\r\n              styler.addClass(elm,hoverClass)\r\n            }\r\n\r\n            var e2 = eventer.create(\"dropped\",{\r\n                transfer : manager.draggingTransfer\r\n            });\r\n\r\n            self.trigger(e2);\r\n\r\n            manager.end(true)\r\n          }\r\n        });\r\n\r\n        manager.on(\"dndStarted\",function(e){\r\n            var e2 = eventer.create(\"started\",{\r\n                transfer : manager.draggingTransfer,\r\n                acceptable : false\r\n            });\r\n\r\n            self.trigger(e2);\r\n\r\n            acceptable = e2.acceptable;\r\n            hoverClass = e2.hoverClass;\r\n            activeClass = e2.activeClass;\r\n\r\n            if (activeClass && acceptable) {\r\n              styler.addClass(elm,activeClass);\r\n            }\r\n\r\n         }).on(\"dndEnded\" , function(e){\r\n            var e2 = eventer.create(\"ended\",{\r\n                transfer : manager.draggingTransfer,\r\n                acceptable : false\r\n            });\r\n\r\n            self.trigger(e2);\r\n\r\n            if (hoverClass && acceptable) {\r\n              styler.removeClass(elm,hoverClass);\r\n            }\r\n            if (activeClass && acceptable) {\r\n              styler.removeClass(elm,activeClass);\r\n            }\r\n\r\n            acceptable = false;\r\n            activeClass = null;\r\n            hoverClass = null;\r\n        });\r\n\r\n      }\r\n    });\r\n\r\n\r\n    function draggable(elm, params) {\r\n      return new Draggable(elm,params);\r\n    }\r\n\r\n    function droppable(elm, params) {\r\n      return new Droppable(elm,params);\r\n    }\r\n\r\n    function dnd(){\r\n      return dnd;\r\n    }\r\n\r\n    langx.mixin(dnd, {\r\n       //params ： {\r\n        //  target : Element or string or function\r\n        //  handle : Element\r\n        //  copy : boolean\r\n        //  placeHolder : \"div\"\r\n        //  hoverClass : \"hover\"\r\n        //  start : function\r\n        //  enter : function\r\n        //  over : function\r\n        //  leave : function\r\n        //  drop : function\r\n        //  end : function\r\n        //\r\n        //\r\n        //}\r\n        draggable   : draggable,\r\n\r\n        //params ： {\r\n        //  accept : string or function\r\n        //  placeHolder\r\n        //\r\n        //\r\n        //\r\n        //}\r\n        droppable : droppable,\r\n\r\n        manager : manager\r\n\r\n\r\n    });\r\n\r\n    return skylark.dnd = dnd;\r\n});\r\n\ndefine('skylark-utils/filer',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./datax\",\r\n    \"./eventer\",\r\n    \"./styler\"\r\n], function(skylark, langx, datax, eventer,styler) {\r\n    var concat = Array.prototype.concat,\r\n        on = eventer.on,\r\n        attr = eventer.attr,\r\n        Deferred = langx.Deferred,\r\n\r\n        fileInput,\r\n        fileInputForm,\r\n        fileSelected,\r\n        maxFileSize = 1 / 0;\r\n\r\n\r\n    var webentry = (function(){\r\n        function  one(entry, path) {\r\n            var d = new Deferred(),\r\n                onError = function(e) {\r\n                    d.reject(e);\r\n                };\r\n\r\n            path = path || '';\r\n            if (entry.isFile) {\r\n                entry.file(function (file) {\r\n                    file.relativePath = path;\r\n                    d.resolve(file);\r\n                }, onError);\r\n            } else if (entry.isDirectory) {\r\n                var dirReader = entry.createReader();\r\n                dirReader.readEntries(function (entries) {\r\n                    all(\r\n                        entries,\r\n                        path + entry.name + '/'\r\n                    ).then(function (files) {\r\n                        d.resolve(files);\r\n                    }).catch(onError);\r\n                }, onError);\r\n            } else {\r\n                // Return an empy list for file system items\r\n                // other than files or directories:\r\n                d.resolve([]);\r\n            }\r\n            return d.promise;\r\n        }\r\n\r\n        function all(entries, path) {\r\n            return Deferred.all(\r\n                langx.map(entries, function (entry) {\r\n                    return one(entry, path);\r\n                })\r\n            ).then(function(){\r\n                return concat.apply([],arguments);\r\n            });\r\n        }\r\n\r\n        return {\r\n            one : one,\r\n            all : all\r\n        };\r\n    })();\r\n\r\n    function dataURLtoBlob(dataurl) {\r\n        var arr = dataurl.split(','), mime = arr[0].match(/:(.*?);/)[1],\r\n            bstr = atob(arr[1]), n = bstr.length, u8arr = new Uint8Array(n);\r\n        while(n--){\r\n            u8arr[n] = bstr.charCodeAt(n);\r\n        }\r\n        return new Blob([u8arr], {type:mime});\r\n    }\r\n\r\n    function dropzone(elm, params) {\r\n        params = params || {};\r\n        var hoverClass = params.hoverClass || \"dropzone\",\r\n            droppedCallback = params.dropped;\r\n\r\n        var enterdCount = 0;\r\n        on(elm, \"dragenter\", function(e) {\r\n            if (e.dataTransfer && e.dataTransfer.types.indexOf(\"Files\")>-1) {\r\n                eventer.stop(e);\r\n                enterdCount ++;\r\n                styler.addClass(elm,hoverClass)\r\n            }\r\n        });\r\n\r\n        on(elm, \"dragover\", function(e) {\r\n            if (e.dataTransfer && e.dataTransfer.types.indexOf(\"Files\")>-1) {\r\n                eventer.stop(e);\r\n            }\r\n        });\r\n\r\n        on(elm, \"dragleave\", function(e) {\r\n            if (e.dataTransfer && e.dataTransfer.types.indexOf(\"Files\")>-1) {\r\n                enterdCount--\r\n                if (enterdCount==0) {\r\n                    styler.removeClass(elm,hoverClass);\r\n                }\r\n            }\r\n        });\r\n\r\n        on(elm, \"drop\", function(e) {\r\n            if (e.dataTransfer && e.dataTransfer.types.indexOf(\"Files\")>-1) {\r\n                styler.removeClass(elm,hoverClass)\r\n                eventer.stop(e);\r\n                if (droppedCallback) {\r\n                    var items = e.dataTransfer.items;\r\n                    if (items && items.length && (items[0].webkitGetAsEntry ||\r\n                        items[0].getAsEntry)) {\r\n                        webentry.all(\r\n                            langx.map(items, function (item) {\r\n                                if (item.webkitGetAsEntry) {\r\n                                    return item.webkitGetAsEntry();\r\n                                }\r\n                                return item.getAsEntry();\r\n                            })\r\n                        ).then(droppedCallback);\r\n                    } else {\r\n                        droppedCallback(e.dataTransfer.files);\r\n                    }                    \r\n                }\r\n            }\r\n        });\r\n\r\n        return this;\r\n    }\r\n\r\n    function pastezone(elm,params) {\r\n        params = params || {};\r\n        var hoverClass = params.hoverClass || \"pastezone\",\r\n            pastedCallback = params.pasted;\r\n\r\n        on(elm, \"paste\", function(e) {\r\n            var items = e.originalEvent && e.originalEvent.clipboardData &&\r\n                    e.originalEvent.clipboardData.items,\r\n                files = [];\r\n            if (items && items.length) {\r\n                langx.each(items, function (index, item) {\r\n                    var file = item.getAsFile && item.getAsFile();\r\n                    if (file) {\r\n                        files.push(file);\r\n                    }\r\n                });\r\n            }\r\n            if (pastedCallback && files.length) {\r\n                pastedCallback(files);\r\n            }\r\n        });\r\n\r\n        return this;\r\n    }\r\n   \r\n    function picker(elm, params) {\r\n        on(elm, \"click\", function(e) {\r\n            e.preventDefault();\r\n            select(params);\r\n        });\r\n        return this;\r\n    }\r\n\r\n    function select(params) {\r\n        params = params || {};\r\n        var directory = params.directory || false, \r\n            multiple = params.multiple || false,\r\n            fileSelected = params.picked;\r\n        if (!fileInput) {\r\n            var input = fileInput = document.createElement(\"input\");\r\n\r\n            function selectFiles(pickedFiles) {\r\n                for (var i = pickedFiles.length; i--;) {\r\n                    if (pickedFiles[i].size > maxFileSize) {\r\n                        pickedFiles.splice(i, 1);\r\n                    }\r\n                }\r\n                fileSelected(pickedFiles);\r\n            }\r\n\r\n            input.type = \"file\";\r\n            input.style.position = \"fixed\",\r\n                input.style.left = 0,\r\n                input.style.top = 0,\r\n                input.style.opacity = .001,\r\n                document.body.appendChild(input);\r\n\r\n            input.onchange = function(e) {\r\n                var entries = e.target.webkitEntries || e.target.entries;\r\n\r\n                if (entries && entries.length) {\r\n                    webentry.all(entries).then(function(files) {\r\n                        selectFiles(files);\r\n                    });\r\n                } else {\r\n                    selectFiles(Array.prototype.slice.call(e.target.files));\r\n                }\r\n                // reset to \"\", so selecting the same file next time still trigger the change handler\r\n                input.value = \"\";\r\n            };\r\n        }\r\n        fileInput.multiple = multiple;\r\n        fileInput.webkitdirectory = directory;\r\n        fileInput.click();\r\n    }\r\n\r\n    function upload(params) {\r\n        var xoptions = langx.mixin({\r\n            contentRange : null, //\r\n\r\n            // The parameter name for the file form data (the request argument name).\r\n            // If undefined or empty, the name property of the file input field is\r\n            // used, or \"files[]\" if the file input name property is also empty,\r\n            // can be a string or an array of strings:\r\n            paramName: undefined,\r\n            // By default, each file of a selection is uploaded using an individual\r\n            // request for XHR type uploads. Set to false to upload file\r\n            // selections in one request each:\r\n            singleFileUploads: true,\r\n            // To limit the number of files uploaded with one XHR request,\r\n            // set the following option to an integer greater than 0:\r\n            limitMultiFileUploads: undefined,\r\n            // The following option limits the number of files uploaded with one\r\n            // XHR request to keep the request size under or equal to the defined\r\n            // limit in bytes:\r\n            limitMultiFileUploadSize: undefined,\r\n            // Multipart file uploads add a number of bytes to each uploaded file,\r\n            // therefore the following option adds an overhead for each file used\r\n            // in the limitMultiFileUploadSize configuration:\r\n            limitMultiFileUploadSizeOverhead: 512,\r\n            // Set the following option to true to issue all file upload requests\r\n            // in a sequential order:\r\n            sequentialUploads: false,\r\n            // To limit the number of concurrent uploads,\r\n            // set the following option to an integer greater than 0:\r\n            limitConcurrentUploads: undefined,\r\n            // By default, XHR file uploads are sent as multipart/form-data.\r\n            // The iframe transport is always using multipart/form-data.\r\n            // Set to false to enable non-multipart XHR uploads:\r\n            multipart: true,\r\n            // To upload large files in smaller chunks, set the following option\r\n            // to a preferred maximum chunk size. If set to 0, null or undefined,\r\n            // or the browser does not support the required Blob API, files will\r\n            // be uploaded as a whole.\r\n            maxChunkSize: undefined,\r\n            // When a non-multipart upload or a chunked multipart upload has been\r\n            // aborted, this option can be used to resume the upload by setting\r\n            // it to the size of the already uploaded bytes. This option is most\r\n            // useful when modifying the options object inside of the \"add\" or\r\n            // \"send\" callbacks, as the options are cloned for each file upload.\r\n            uploadedBytes: undefined,\r\n            // By default, failed (abort or error) file uploads are removed from the\r\n            // global progress calculation. Set the following option to false to\r\n            // prevent recalculating the global progress data:\r\n            recalculateProgress: true,\r\n            // Interval in milliseconds to calculate and trigger progress events:\r\n            progressInterval: 100,\r\n            // Interval in milliseconds to calculate progress bitrate:\r\n            bitrateInterval: 500,\r\n            // By default, uploads are started automatically when adding files:\r\n            autoUpload: true,\r\n\r\n            // Error and info messages:\r\n            messages: {\r\n                uploadedBytes: 'Uploaded bytes exceed file size'\r\n            },\r\n\r\n            // Translation function, gets the message key to be translated\r\n            // and an object with context specific data as arguments:\r\n            i18n: function (message, context) {\r\n                message = this.messages[message] || message.toString();\r\n                if (context) {\r\n                    langx.each(context, function (key, value) {\r\n                        message = message.replace('{' + key + '}', value);\r\n                    });\r\n                }\r\n                return message;\r\n            },\r\n\r\n            // Additional form data to be sent along with the file uploads can be set\r\n            // using this option, which accepts an array of objects with name and\r\n            // value properties, a function returning such an array, a FormData\r\n            // object (for XHR file uploads), or a simple object.\r\n            // The form of the first fileInput is given as parameter to the function:\r\n            formData: function (form) {\r\n                return form.serializeArray();\r\n            },\r\n\r\n            // The add callback is invoked as soon as files are added to the fileupload\r\n            // widget (via file input selection, drag & drop, paste or add API call).\r\n            // If the singleFileUploads option is enabled, this callback will be\r\n            // called once for each file in the selection for XHR file uploads, else\r\n            // once for each file selection.\r\n            //\r\n            // The upload starts when the submit method is invoked on the data parameter.\r\n            // The data object contains a files property holding the added files\r\n            // and allows you to override plugin options as well as define ajax settings.\r\n            //\r\n            // Listeners for this callback can also be bound the following way:\r\n            // .bind('fileuploadadd', func);\r\n            //\r\n            // data.submit() returns a Promise object and allows to attach additional\r\n            // handlers using jQuery's Deferred callbacks:\r\n            // data.submit().done(func).fail(func).always(func);\r\n            add: function (e, data) {\r\n                if (e.isDefaultPrevented()) {\r\n                    return false;\r\n                }\r\n                if (data.autoUpload || (data.autoUpload !== false &&\r\n                        $(this).fileupload('option', 'autoUpload'))) {\r\n                    data.process().done(function () {\r\n                        data.submit();\r\n                    });\r\n                }\r\n            },\r\n\r\n            // Other callbacks:\r\n\r\n            // Callback for the submit event of each file upload:\r\n            // submit: function (e, data) {}, // .bind('fileuploadsubmit', func);\r\n\r\n            // Callback for the start of each file upload request:\r\n            // send: function (e, data) {}, // .bind('fileuploadsend', func);\r\n\r\n            // Callback for successful uploads:\r\n            // done: function (e, data) {}, // .bind('fileuploaddone', func);\r\n\r\n            // Callback for failed (abort or error) uploads:\r\n            // fail: function (e, data) {}, // .bind('fileuploadfail', func);\r\n\r\n            // Callback for completed (success, abort or error) requests:\r\n            // always: function (e, data) {}, // .bind('fileuploadalways', func);\r\n\r\n            // Callback for upload progress events:\r\n            // progress: function (e, data) {}, // .bind('fileuploadprogress', func);\r\n\r\n            // Callback for global upload progress events:\r\n            // progressall: function (e, data) {}, // .bind('fileuploadprogressall', func);\r\n\r\n            // Callback for uploads start, equivalent to the global ajaxStart event:\r\n            // start: function (e) {}, // .bind('fileuploadstart', func);\r\n\r\n            // Callback for uploads stop, equivalent to the global ajaxStop event:\r\n            // stop: function (e) {}, // .bind('fileuploadstop', func);\r\n\r\n            // Callback for change events of the fileInput(s):\r\n            // change: function (e, data) {}, // .bind('fileuploadchange', func);\r\n\r\n            // Callback for paste events to the pasteZone(s):\r\n            // paste: function (e, data) {}, // .bind('fileuploadpaste', func);\r\n\r\n            // Callback for drop events of the dropZone(s):\r\n            // drop: function (e, data) {}, // .bind('fileuploaddrop', func);\r\n\r\n            // Callback for dragover events of the dropZone(s):\r\n            // dragover: function (e) {}, // .bind('fileuploaddragover', func);\r\n\r\n            // Callback for the start of each chunk upload request:\r\n            // chunksend: function (e, data) {}, // .bind('fileuploadchunksend', func);\r\n\r\n            // Callback for successful chunk uploads:\r\n            // chunkdone: function (e, data) {}, // .bind('fileuploadchunkdone', func);\r\n\r\n            // Callback for failed (abort or error) chunk uploads:\r\n            // chunkfail: function (e, data) {}, // .bind('fileuploadchunkfail', func);\r\n\r\n            // Callback for completed (success, abort or error) chunk upload requests:\r\n            // chunkalways: function (e, data) {}, // .bind('fileuploadchunkalways', func);\r\n\r\n            // The plugin options are used as settings object for the ajax calls.\r\n            // The following are jQuery ajax settings required for the file uploads:\r\n            processData: false,\r\n            contentType: false,\r\n            cache: false\r\n        },params);\r\n\r\n        var blobSlice = function () {\r\n            var slice = Blob.prototype.slice || Blob.prototype.webkitSlice || Blob.prototype.mozSlice;\r\n            return slice.apply(this, arguments);\r\n        },ajax = function(data) {\r\n            return langx.Xhr.request(data.url,data);\r\n        };\r\n\r\n        function initDataSettings(o) {\r\n            o.type = o.type || \"POST\";\r\n\r\n            if (!chunkedUpload(o, true)) {\r\n                if (!o.data) {\r\n                    initXHRData(o);\r\n                }\r\n                //initProgressListener(o);\r\n            }\r\n        }\r\n\r\n        function initXHRData(o) {\r\n            var that = this,\r\n                formData,\r\n                file = o.files[0],\r\n                // Ignore non-multipart setting if not supported:\r\n                multipart = o.multipart,\r\n                paramName = langx.type(o.paramName) === 'array' ?\r\n                    o.paramName[0] : o.paramName;\r\n\r\n            o.headers = langx.mixin({}, o.headers);\r\n            if (o.contentRange) {\r\n                o.headers['Content-Range'] = o.contentRange;\r\n            }\r\n            if (!multipart) {\r\n                o.headers['Content-Disposition'] = 'attachment; filename=\"' +\r\n                    encodeURI(file.name) + '\"';\r\n                o.contentType = file.type || 'application/octet-stream';\r\n                o.data = o.blob || file;\r\n            } else {\r\n                formData = new FormData();\r\n                if (o.blob) {\r\n                    formData.append(paramName, o.blob, file.name);\r\n                } else {\r\n                    langx.each(o.files, function (index, file) {\r\n                        // This check allows the tests to run with\r\n                        // dummy objects:\r\n                        formData.append(\r\n                            (langx.type(o.paramName) === 'array' &&\r\n                                o.paramName[index]) || paramName,\r\n                            file,\r\n                            file.uploadName || file.name\r\n                        );\r\n                    });                    \r\n                }                \r\n                o.data = formData;\r\n            }\r\n            // Blob reference is not needed anymore, free memory:\r\n            o.blob = null;\r\n        }\r\n\r\n        function getTotal(files) {\r\n            var total = 0;\r\n            langx.each(files, function (index, file) {\r\n                total += file.size || 1;\r\n            });\r\n            return total;\r\n        }\r\n\r\n        function getUploadedBytes(jqXHR) {\r\n            var range = jqXHR.getResponseHeader('Range'),\r\n                parts = range && range.split('-'),\r\n                upperBytesPos = parts && parts.length > 1 &&\r\n                    parseInt(parts[1], 10);\r\n            return upperBytesPos && upperBytesPos + 1;\r\n        }\r\n\r\n        function initProgressObject(obj) {\r\n            var progress = {\r\n                loaded: 0,\r\n                total: 0,\r\n                bitrate: 0\r\n            };\r\n            if (obj._progress) {\r\n                langx.mixin(obj._progress, progress);\r\n            } else {\r\n                obj._progress = progress;\r\n            }\r\n        }\r\n\r\n        function BitrateTimer() {\r\n            this.timestamp = ((Date.now) ? Date.now() : (new Date()).getTime());\r\n            this.loaded = 0;\r\n            this.bitrate = 0;\r\n            this.getBitrate = function (now, loaded, interval) {\r\n                var timeDiff = now - this.timestamp;\r\n                if (!this.bitrate || !interval || timeDiff > interval) {\r\n                    this.bitrate = (loaded - this.loaded) * (1000 / timeDiff) * 8;\r\n                    this.loaded = loaded;\r\n                    this.timestamp = now;\r\n                }\r\n                return this.bitrate;\r\n            };\r\n        }\r\n\r\n        function chunkedUpload(options, testOnly) {\r\n            options.uploadedBytes = options.uploadedBytes || 0;\r\n            var that = this,\r\n                file = options.files[0],\r\n                fs = file.size,\r\n                ub = options.uploadedBytes,\r\n                mcs = options.maxChunkSize || fs,\r\n                slice = blobSlice,\r\n                dfd = new Deferred(),\r\n                promise = dfd.promise,\r\n                jqXHR,\r\n                upload;\r\n            if (!(slice && (ub || mcs < fs)) ||\r\n                    options.data) {\r\n                return false;\r\n            }\r\n            if (testOnly) {\r\n                return true;\r\n            }\r\n            if (ub >= fs) {\r\n                file.error = options.i18n('uploadedBytes');\r\n                return this._getXHRPromise(\r\n                    false,\r\n                    options.context,\r\n                    [null, 'error', file.error]\r\n                );\r\n            }\r\n            // The chunk upload method:\r\n            upload = function () {\r\n                // Clone the options object for each chunk upload:\r\n                var o = langx.mixin({}, options),\r\n                    currentLoaded = o._progress.loaded;\r\n                o.blob = slice.call(\r\n                    file,\r\n                    ub,\r\n                    ub + mcs,\r\n                    file.type\r\n                );\r\n                // Store the current chunk size, as the blob itself\r\n                // will be dereferenced after data processing:\r\n                o.chunkSize = o.blob.size;\r\n                // Expose the chunk bytes position range:\r\n                o.contentRange = 'bytes ' + ub + '-' +\r\n                    (ub + o.chunkSize - 1) + '/' + fs;\r\n                // Process the upload data (the blob and potential form data):\r\n                initXHRData(o);\r\n                // Add progress listeners for this chunk upload:\r\n                //initProgressListener(o);\r\n                jqXHR = $.ajax(o).done(function (result, textStatus, jqXHR) {\r\n                        ub = getUploadedBytes(jqXHR) ||\r\n                            (ub + o.chunkSize);\r\n                        // Create a progress event if no final progress event\r\n                        // with loaded equaling total has been triggered\r\n                        // for this chunk:\r\n                        if (currentLoaded + o.chunkSize - o._progress.loaded) {\r\n                            dfd.progress({\r\n                                lengthComputable: true,\r\n                                loaded: ub - o.uploadedBytes,\r\n                                total: ub - o.uploadedBytes\r\n                            });\r\n                        }\r\n                        options.uploadedBytes = o.uploadedBytes = ub;\r\n                        o.result = result;\r\n                        o.textStatus = textStatus;\r\n                        o.jqXHR = jqXHR;\r\n                        //that._trigger('chunkdone', null, o);\r\n                        //that._trigger('chunkalways', null, o);\r\n                        if (ub < fs) {\r\n                            // File upload not yet complete,\r\n                            // continue with the next chunk:\r\n                            upload();\r\n                        } else {\r\n                            dfd.resolveWith(\r\n                                o.context,\r\n                                [result, textStatus, jqXHR]\r\n                            );\r\n                        }\r\n                    })\r\n                    .fail(function (jqXHR, textStatus, errorThrown) {\r\n                        o.jqXHR = jqXHR;\r\n                        o.textStatus = textStatus;\r\n                        o.errorThrown = errorThrown;\r\n                        //that._trigger('chunkfail', null, o);\r\n                        //that._trigger('chunkalways', null, o);\r\n                        dfd.rejectWith(\r\n                            o.context,\r\n                            [jqXHR, textStatus, errorThrown]\r\n                        );\r\n                    });\r\n            };\r\n            //this._enhancePromise(promise);\r\n            promise.abort = function () {\r\n                return jqXHR.abort();\r\n            };\r\n            upload();\r\n            return promise;\r\n        }\r\n        \r\n        initDataSettings(xoptions);\r\n\r\n        xoptions._bitrateTimer = new BitrateTimer();\r\n\r\n        var jqXhr = chunkedUpload(xoptions) || ajax(xoptions);\r\n\r\n        jqXhr.options = xoptions;\r\n\r\n        return jqXhr;\r\n    }\r\n\r\n    var filer = function() {\r\n        return filer;\r\n    };\r\n\r\n    langx.mixin(filer , {\r\n        dropzone: dropzone,\r\n\r\n        pastezone: pastezone,\r\n\r\n        picker: picker,\r\n\r\n        select : select,\r\n\r\n        upload  : upload,\r\n\r\n        readFile : function(file,params) {\r\n            params = params || {};\r\n            var d = new Deferred,\r\n                reader = new FileReader();\r\n            \r\n            reader.onload = function(evt) {\r\n                d.resolve(evt.target.result);\r\n            };\r\n            reader.onerror = function(e) {\r\n                var code = e.target.error.code;\r\n                if (code === 2) {\r\n                    alert('please don\\'t open this page using protocol fill:///');\r\n                } else {\r\n                    alert('error code: ' + code);\r\n                }\r\n            };\r\n            \r\n            if (params.asArrayBuffer){\r\n                reader.readAsArrayBuffer(file);\r\n            } else if (params.asDataUrl) {\r\n                reader.readAsDataURL(file);                \r\n            } else if (params.asText) {\r\n                reader.readAsText(file);\r\n            } else {\r\n                reader.readAsArrayBuffer(file);\r\n            }\r\n\r\n            return d.promise;\r\n        },\r\n         \r\n        writeFile : function(data,name) {\r\n            if (window.navigator.msSaveBlob) { \r\n               if (langx.isString(data)) {\r\n                   data = dataURItoBlob(data);\r\n               }\r\n               window.navigator.msSaveBlob(data, name);\r\n            } else {\r\n                var a = document.createElement('a');\r\n                if (data instanceof Blob) {\r\n                    data = langx.URL.createObjectURL(data);\r\n                }\r\n                a.href = data;\r\n                a.setAttribute('download', name || 'noname');\r\n                a.dispatchEvent(new CustomEvent('click'));\r\n            }              \r\n        }\r\n\r\n    });\r\n\r\n    return skylark.filer = filer;\r\n});\r\n\ndefine('skylark-utils/velm',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./datax\",\r\n    \"./dnd\",\r\n    \"./eventer\",\r\n    \"./filer\",\r\n    \"./finder\",\r\n    \"./fx\",\r\n    \"./geom\",\r\n    \"./noder\",\r\n    \"./styler\"\r\n], function(skylark, langx, datax, dnd, eventer, filer, finder, fx, geom, noder, styler) {\r\n    var map = Array.prototype.map,\r\n        slice = Array.prototype.slice;\r\n\r\n    var VisualElement = langx.klass({\r\n        klassName: \"VisualElement\",\r\n\r\n        \"init\": function(node) {\r\n            if (langx.isString(node)) {\r\n                node = document.getElementById(node);\r\n            }\r\n            this.domNode = node;\r\n        }\r\n    });\r\n\r\n    var root = new VisualElement(document.body),\r\n        velm = function(node) {\r\n            if (node) {\r\n                return new VisualElement(node);\r\n            } else {\r\n                return root;\r\n            }\r\n        };\r\n\r\n    function _delegator(fn, context) {\r\n        return function() {\r\n            var self = this,\r\n                elem = self.domNode,\r\n                ret = fn.apply(context, [elem].concat(slice.call(arguments)));\r\n\r\n            if (ret) {\r\n                if (ret === context) {\r\n                    return self;\r\n                } else {\r\n                    if (ret instanceof HTMLElement) {\r\n                        ret = new VisualElement(ret);\r\n                    } else if (langx.isArrayLike(ret)) {\r\n                        ret = map.call(ret, function(el) {\r\n                            if (el instanceof HTMLElement) {\r\n                                return new VisualElement(ret);\r\n                            } else {\r\n                                return el;\r\n                            }\r\n                        })\r\n                    }\r\n                }\r\n            }\r\n            return ret;\r\n        };\r\n    }\r\n\r\n    langx.mixin(velm, {\r\n        batch: function(nodes, action, args) {\r\n            nodes.forEach(function(node) {\r\n                var elm = (node instanceof VisualElement) ? node : velm(node);\r\n                elm[action].apply(elm, args);\r\n            });\r\n\r\n            return this;\r\n        },\r\n\r\n        root: new VisualElement(document.body),\r\n\r\n        VisualElement: VisualElement,\r\n\r\n        partial : function(name,fn) {\r\n            var props = {};\r\n\r\n            props[name] = fn;\r\n\r\n            VisualElement.partial(props);\r\n        },\r\n\r\n        delegate: function(names, context) {\r\n            var props = {};\r\n\r\n            names.forEach(function(name) {\r\n                props[name] = _delegator(context[name], context);\r\n            });\r\n\r\n            VisualElement.partial(props);\r\n        }\r\n    });\r\n\r\n    // from ./datax\r\n    velm.delegate([\r\n        \"attr\",\r\n        \"data\",\r\n        \"prop\",\r\n        \"removeAttr\",\r\n        \"removeData\",\r\n        \"text\",\r\n        \"val\"\r\n    ], datax);\r\n\r\n    // from ./dnd\r\n    velm.delegate([\r\n        \"draggable\",\r\n        \"droppable\"\r\n    ], dnd);\r\n\r\n\r\n    // from ./eventer\r\n    velm.delegate([\r\n        \"off\",\r\n        \"on\",\r\n        \"one\",\r\n        \"shortcuts\",\r\n        \"trigger\"\r\n    ], eventer);\r\n\r\n    // from ./filer\r\n    velm.delegate([\r\n        \"picker\",\r\n        \"dropzone\"\r\n    ], filer);\r\n\r\n    // from ./finder\r\n    velm.delegate([\r\n        \"ancestor\",\r\n        \"ancestors\",\r\n        \"children\",\r\n        \"descendant\",\r\n        \"find\",\r\n        \"findAll\",\r\n        \"firstChild\",\r\n        \"lastChild\",\r\n        \"matches\",\r\n        \"nextSibling\",\r\n        \"nextSiblings\",\r\n        \"parent\",\r\n        \"previousSibling\",\r\n        \"previousSiblings\",\r\n        \"siblings\"\r\n    ], finder);\r\n\r\n    velm.find = function(selector) {\r\n        if (selector === \"body\") {\r\n            return this.root;\r\n        } else {\r\n            return this.root.descendant(selector);\r\n        }\r\n    };\r\n\r\n    // from ./fx\r\n    velm.delegate([\r\n        \"animate\",\r\n        \"fadeIn\",\r\n        \"fadeOut\",\r\n        \"fadeTo\",\r\n        \"fadeToggle\",\r\n        \"hide\",\r\n        \"scrollToTop\",\r\n        \"show\",\r\n        \"toggle\"\r\n    ], fx);\r\n\r\n\r\n    // from ./geom\r\n    velm.delegate([\r\n        \"borderExtents\",\r\n        \"boundingPosition\",\r\n        \"boundingRect\",\r\n        \"clientHeight\",\r\n        \"clientSize\",\r\n        \"clientWidth\",\r\n        \"contentRect\",\r\n        \"height\",\r\n        \"marginExtents\",\r\n        \"offsetParent\",\r\n        \"paddingExtents\",\r\n        \"pagePosition\",\r\n        \"pageRect\",\r\n        \"relativePosition\",\r\n        \"relativeRect\",\r\n        \"scrollIntoView\",\r\n        \"scrollLeft\",\r\n        \"scrollTop\",\r\n        \"size\",\r\n        \"width\"\r\n    ], geom);\r\n\r\n    // from ./mover\r\n    velm.delegate([\r\n        \"draggable\",\r\n        \"droppable\"\r\n    ], dnd);\r\n\r\n\r\n    // from ./noder\r\n    velm.delegate([\r\n        \"after\",\r\n        \"append\",\r\n        \"before\",\r\n        \"clone\",\r\n        \"contains\",\r\n        \"contents\",\r\n        \"empty\",\r\n        \"html\",\r\n        \"isChildOf\",\r\n        \"ownerDoc\",\r\n        \"prepend\",\r\n        \"remove\",\r\n        \"replace\",\r\n        \"reverse\",\r\n        \"throb\",\r\n        \"traverse\",\r\n        \"wrapper\",\r\n        \"wrapperInner\",\r\n        \"unwrap\"\r\n    ], noder);\r\n\r\n    // from ./styler\r\n    velm.delegate([\r\n        \"addClass\",\r\n        \"className\",\r\n        \"css\",\r\n        \"hasClass\",\r\n        \"hide\",\r\n        \"isInvisible\",\r\n        \"removeClass\",\r\n        \"show\",\r\n        \"toggleClass\"\r\n    ], styler);\r\n    \r\n    return skylark.velm = velm;\r\n});\r\n\ndefine('skylark-utils/widgets',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./noder\",\r\n    \"./datax\",\r\n    \"./styler\",\r\n    \"./geom\",\r\n    \"./eventer\",\r\n    \"./query\",\r\n    \"./velm\"\r\n], function(skylark,langx,noder, datax, styler, geom, eventer,query,velm) {\r\n\t// Cached regex to split keys for `delegate`.\r\n\tvar delegateEventSplitter = /^(\\S+)\\s*(.*)$/,\r\n\t\tslice = Array.prototype.slice;\r\n\r\n\r\n\tfunction bridge( name, object ) {\r\n\t\tvar fullName = object.prototype.widgetFullName || name,\r\n\t\t\tfn = {};\r\n\r\n\t\tfunction _delegate (isQuery) {\r\n\r\n\t\t}\r\n\r\n\t\tfn[name] = function( options ) {\r\n\t\t\tvar isMethodCall = typeof options === \"string\";\r\n\t\t\tvar args = slice.call( arguments, 1 );\r\n\t\t\tvar returnValue = this;\r\n\r\n\t\t\tif ( isMethodCall ) {\r\n\r\n\t\t\t\t// If this is an empty collection, we need to have the instance method\r\n\t\t\t\t// return undefined instead of the jQuery instance\r\n\t\t\t\tif ( !this.length && options === \"instance\" ) {\r\n\t\t\t\t\treturnValue = undefined;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.each( function() {\r\n\t\t\t\t\t\tvar methodValue;\r\n\t\t\t\t\t\tvar instance = datax.data( this, fullName );\r\n\r\n\t\t\t\t\t\tif ( options === \"instance\" ) {\r\n\t\t\t\t\t\t\treturnValue = instance;\r\n\t\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif ( !instance ) {\r\n\t\t\t\t\t\t\treturn $.error( \"cannot call methods on \" + name +\r\n\t\t\t\t\t\t\t\t\" prior to initialization; \" +\r\n\t\t\t\t\t\t\t\t\"attempted to call method '\" + options + \"'\" );\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif ( !$.isFunction( instance[ options ] ) || options.charAt( 0 ) === \"_\" ) {\r\n\t\t\t\t\t\t\treturn $.error( \"no such method '\" + options + \"' for \" + name +\r\n\t\t\t\t\t\t\t\t\" widget instance\" );\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tmethodValue = instance[ options ].apply( instance, args );\r\n\r\n\t\t\t\t\t\tif ( methodValue !== instance && methodValue !== undefined ) {\r\n\t\t\t\t\t\t\treturnValue = methodValue && methodValue.jquery ?\r\n\t\t\t\t\t\t\t\treturnValue.pushStack( methodValue.get() ) :\r\n\t\t\t\t\t\t\t\tmethodValue;\r\n\t\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} );\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// Allow multiple hashes to be passed on init\r\n\t\t\t\tif ( args.length ) {\r\n\t\t\t\t\toptions = $.widget.extend.apply( null, [ options ].concat( args ) );\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.each( function() {\r\n\t\t\t\t\tvar instance = datax.data( this, fullName );\r\n\t\t\t\t\tif ( instance ) {\r\n\t\t\t\t\t\tinstance.option( options || {} );\r\n\t\t\t\t\t\tif ( instance._init ) {\r\n\t\t\t\t\t\t\tinstance._init();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tdatax.data( this, fullName, new object( options, this ) );\r\n\t\t\t\t\t}\r\n\t\t\t\t} );\r\n\t\t\t}\r\n\r\n\t\t\treturn returnValue;\r\n\t\t};\r\n\t};\r\n\r\n\tfunction widgets() {\r\n\t    return widgets;\r\n\t}\r\n\r\n\tvar Widget = langx.Evented.inherit({\r\n\t    init :function(options,el) {\r\n\t    \t//for supporting init(el,options)\r\n\t        if (langx.isHtmlNode(options)) {\r\n\t        \tvar _t = el,\r\n\t        \t\toptions = el;\r\n\t            el = options;\r\n\t        }\r\n\t        if (langx.isHtmlNode(el)) { \r\n\t        \tthis.el = el;\r\n\t    \t} else {\r\n\t    \t\tthis.el = null;\r\n\t    \t}\r\n\t        if (options) {\r\n\t            langx.mixin(this,options);\r\n\t        }\r\n\t        if (!this.cid) {\r\n\t            this.cid = langx.uniqueId('w');\r\n\t        }\r\n\t        this._ensureElement();\r\n\t    },\r\n\r\n\t    // The default `tagName` of a View's element is `\"div\"`.\r\n\t    tagName: 'div',\r\n\r\n\t    // jQuery delegate for element lookup, scoped to DOM elements within the\r\n\t    // current view. This should be preferred to global lookups where possible.\r\n\t    $: function(selector) {\r\n\t      return this.$el.find(selector);\r\n\t    },\r\n\r\n\t    // **render** is the core function that your view should override, in order\r\n\t    // to populate its element (`this.el`), with the appropriate HTML. The\r\n\t    // convention is for **render** to always return `this`.\r\n\t    render: function() {\r\n\t      return this;\r\n\t    },\r\n\r\n\t    // Remove this view by taking the element out of the DOM, and removing any\r\n\t    // applicable Backbone.Events listeners.\r\n\t    remove: function() {\r\n\t      this._removeElement();\r\n\t      this.unlistenTo();\r\n\t      return this;\r\n\t    },\r\n\r\n\t    // Remove this view's element from the document and all event listeners\r\n\t    // attached to it. Exposed for subclasses using an alternative DOM\r\n\t    // manipulation API.\r\n\t    _removeElement: function() {\r\n\t      this.$el.remove();\r\n\t    },\r\n\r\n\t    // Change the view's element (`this.el` property) and re-delegate the\r\n\t    // view's events on the new element.\r\n\t    setElement: function(element) {\r\n\t      this.undelegateEvents();\r\n\t      this._setElement(element);\r\n\t      this.delegateEvents();\r\n\t      return this;\r\n\t    },\r\n\r\n\t    // Creates the `this.el` and `this.$el` references for this view using the\r\n\t    // given `el`. `el` can be a CSS selector or an HTML string, a jQuery\r\n\t    // context or an element. Subclasses can override this to utilize an\r\n\t    // alternative DOM manipulation API and are only required to set the\r\n\t    // `this.el` property.\r\n\t    _setElement: function(el) {\r\n\t      this.$el = widgets.$(el);\r\n\t      this.el = this.$el[0];\r\n\t    },\r\n\r\n\t    // Set callbacks, where `this.events` is a hash of\r\n\t    //\r\n\t    // *{\"event selector\": \"callback\"}*\r\n\t    //\r\n\t    //     {\r\n\t    //       'mousedown .title':  'edit',\r\n\t    //       'click .button':     'save',\r\n\t    //       'click .open':       function(e) { ... }\r\n\t    //     }\r\n\t    //\r\n\t    // pairs. Callbacks will be bound to the view, with `this` set properly.\r\n\t    // Uses event delegation for efficiency.\r\n\t    // Omitting the selector binds the event to `this.el`.\r\n\t    delegateEvents: function(events) {\r\n\t      events || (events = langx.result(this, 'events'));\r\n\t      if (!events) return this;\r\n\t      this.undelegateEvents();\r\n\t      for (var key in events) {\r\n\t        var method = events[key];\r\n\t        if (!langx.isFunction(method)) method = this[method];\r\n\t        if (!method) continue;\r\n\t        var match = key.match(delegateEventSplitter);\r\n\t        this.delegate(match[1], match[2], langx.proxy(method, this));\r\n\t      }\r\n\t      return this;\r\n\t    },\r\n\r\n\t    // Add a single event listener to the view's element (or a child element\r\n\t    // using `selector`). This only works for delegate-able events: not `focus`,\r\n\t    // `blur`, and not `change`, `submit`, and `reset` in Internet Explorer.\r\n\t    delegate: function(eventName, selector, listener) {\r\n\t      this.$el.on(eventName + '.delegateEvents' + this.uid, selector, listener);\r\n\t      return this;\r\n\t    },\r\n\r\n\t    // Clears all callbacks previously bound to the view by `delegateEvents`.\r\n\t    // You usually don't need to use this, but may wish to if you have multiple\r\n\t    // Backbone views attached to the same DOM element.\r\n\t    undelegateEvents: function() {\r\n\t      if (this.$el) this.$el.off('.delegateEvents' + this.uid);\r\n\t      return this;\r\n\t    },\r\n\r\n\t    // A finer-grained `undelegateEvents` for removing a single delegated event.\r\n\t    // `selector` and `listener` are both optional.\r\n\t    undelegate: function(eventName, selector, listener) {\r\n\t      this.$el.off(eventName + '.delegateEvents' + this.uid, selector, listener);\r\n\t      return this;\r\n\t    },\r\n\r\n\t    // Produces a DOM element to be assigned to your view. Exposed for\r\n\t    // subclasses using an alternative DOM manipulation API.\r\n\t    _createElement: function(tagName,attrs) {\r\n\t      return noder.createElement(tagName,attrs);\r\n\t    },\r\n\r\n\t    // Ensure that the View has a DOM element to render into.\r\n\t    // If `this.el` is a string, pass it through `$()`, take the first\r\n\t    // matching element, and re-assign it to `el`. Otherwise, create\r\n\t    // an element from the `id`, `className` and `tagName` properties.\r\n\t    _ensureElement: function() {\r\n\t      if (!this.el) {\r\n\t        var attrs = langx.mixin({}, langx.result(this, 'attributes'));\r\n\t        if (this.id) attrs.id = langx.result(this, 'id');\r\n\t        if (this.className) attrs['class'] = langx.result(this, 'className');\r\n\t        this.setElement(this._createElement(langx.result(this, 'tagName'),attrs));\r\n\t        this._setAttributes(attrs);\r\n\t      } else {\r\n\t        this.setElement(langx.result(this, 'el'));\r\n\t      }\r\n\t    },\r\n\r\n\t    // Set attributes from a hash on this view's element.  Exposed for\r\n\t    // subclasses using an alternative DOM manipulation API.\r\n\t    _setAttributes: function(attributes) {\r\n\t      this.$el.attr(attributes);\r\n\t    },\r\n\r\n\t    // Translation function, gets the message key to be translated\r\n\t    // and an object with context specific data as arguments:\r\n\t    i18n: function (message, context) {\r\n\t        message = (this.messages && this.messages[message]) || message.toString();\r\n\t        if (context) {\r\n\t            langx.each(context, function (key, value) {\r\n\t                message = message.replace('{' + key + '}', value);\r\n\t            });\r\n\t        }\r\n\t        return message;\r\n\t    },\r\n\r\n\t\t});\r\n\r\n\tfunction defineWidgetClass(name,base,prototype) {\r\n\r\n\t};\r\n\r\n\tlangx.mixin(widgets, {\r\n\t\t$ : query,\r\n\r\n\t\tdefine : defineWidgetClass,\r\n\t\tWidget : Widget\r\n\t});\r\n\r\n\r\n\treturn skylark.widgets = widgets;\r\n});\r\n\ndefine('skylark-utils-interact/sorter',[\r\n    \"./interact\",\r\n    \"skylark-langx/langx\",\r\n    \"skylark-utils/noder\",\r\n    \"skylark-utils/datax\",\r\n    \"skylark-utils/geom\",\r\n    \"skylark-utils/eventer\",\r\n    \"skylark-utils/styler\",\r\n    \"skylark-utils/dnd\",\r\n    \"skylark-utils/query\",\r\n    \"skylark-utils/widgets\",\r\n    \"./mover\",\r\n    \"./resizer\"\r\n],function(interact, langx,noder,datax,geom,eventer,styler,dnd,$,widgets,mover,resizer){\r\n    var on = eventer.on,\r\n        off = eventer.off,\r\n        attr = datax.attr,\r\n        removeAttr = datax.removeAttr,\r\n        offset = geom.pagePosition,\r\n        addClass = styler.addClass,\r\n        height = geom.height,\r\n        some = Array.prototype.some,\r\n        map = Array.prototype.map;\r\n\r\n    var Sorter = widgets.Widget.inherit({\r\n        \"klassName\" : \"Sorter\",\r\n\r\n        enable : function() {\r\n\r\n        },\r\n        \r\n        disable : function() {\r\n\r\n        },\r\n\r\n        destory : function() {\r\n\r\n        }\r\n    });\r\n\r\n\r\n    var dragging, placeholders = $();\r\n\r\n\r\n    /*\r\n     * @param {HTMLElement} container  the element to use as a sortable container\r\n     * @param {Object} options  options object\r\n     * @param {String} [options.items = \"\"] \r\n     * @param {Object} [options.connectWith =] the selector to create connected lists\r\n     * @param {Object} [options\r\n     * @param {Object} [options\r\n     */\r\n    function sortable(container,options) {\r\n        options = langx.mixin({\r\n            connectWith: false,\r\n            placeholder: null,\r\n            placeholderClass: 'sortable-placeholder',\r\n            draggingClass: 'sortable-dragging',\r\n            items : null\r\n\r\n        },options);\r\n\r\n        var isHandle, index, \r\n            $container = $(container), \r\n            $items = $container.children(options.items);\r\n        var placeholder = $(options.placeholder || noder.createElement(/^(ul|ol)$/i.test(container.tagName) ? 'li' : 'div',{\r\n            \"class\" : options.placeholderClass\r\n        }));\r\n\r\n        dnd.draggable(container,{\r\n            source : options.items,\r\n            handle : options.handle,\r\n            draggingClass : options.draggingClass,\r\n            preparing : function(e) {\r\n                //e.dragSource = e.handleElm;\r\n            },\r\n            started :function(e) {\r\n                e.ghost = e.dragSource;\r\n                e.transfer = {\r\n                    \"text\": \"dummy\"\r\n                };\r\n                index = (dragging = $(e.dragSource)).index();\r\n            },\r\n            ended : function(e) {\r\n                if (!dragging) {\r\n                    return;\r\n                }\r\n                dragging.show();\r\n                placeholders.detach();\r\n                if (index != dragging.index()) {\r\n                    dragging.parent().trigger('sortupdate', {item: dragging});\r\n                }\r\n                dragging = null;                \r\n            }\r\n\r\n        });\r\n\r\n        \r\n        dnd.droppable(container,{\r\n            started: function(e) {\r\n                e.acceptable = true;\r\n                e.activeClass = \"active\";\r\n                e.hoverClass = \"over\";\r\n            },\r\n            overing : function(e) {\r\n                if ($items.is(e.overElm)) {\r\n                    if (options.forcePlaceholderSize) {\r\n                        placeholder.height(dragging.outerHeight());\r\n                    }\r\n                    dragging.hide();\r\n                    $(e.overElm)[placeholder.index() < $(e.overElm).index() ? 'after' : 'before'](placeholder);\r\n                    placeholders.not(placeholder).detach();\r\n                } else if (!placeholders.is(e.overElm) && !$(e.overElm).children(options.items).length) {\r\n                    placeholders.detach();\r\n                    $(e.overElm).append(placeholder);\r\n                }                \r\n            },\r\n            dropped : function(e) {\r\n                placeholders.filter(':visible').after(dragging);\r\n                dragging.show();\r\n                placeholders.detach();\r\n\r\n                dragging = null;                \r\n              }\r\n        });\r\n\r\n        $container.data('items', options.items)\r\n        placeholders = placeholders.add(placeholder);\r\n        if (options.connectWith) {\r\n            $(options.connectWith).add(this).data('connectWith', options.connectWith);\r\n        }\r\n        \r\n        return {\r\n            remove : function() {\r\n\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    $.fn.sortable = function(options) {\r\n        options = langx.mixin({\r\n            connectWith: false\r\n        }, options);\r\n        return this.each(function() {\r\n            sortable(this,options);\r\n        });\r\n    };\r\n\r\n    function sorter(){\r\n      return sorter;\r\n    }\r\n\r\n    langx.mixin(sorter, {\r\n\r\n        sortable : sortable\r\n\r\n    });\r\n\r\n    return interact.sorter = sorter;\r\n});\r\n\ndefine('skylark-utils-interact/main',[\r\n    \"skylark-utils/skylark\",\r\n    \"./mover\",\r\n    \"./resizer\",\r\n    \"./selector\",\r\n    \"./sorter\"\r\n], function(skylark) {\r\n    return skylark;\r\n})\r\n;\ndefine('skylark-utils-interact', ['skylark-utils-interact/main'], function (main) { return main; });\n\n"]}