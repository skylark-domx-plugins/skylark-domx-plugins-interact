{"version":3,"sources":["selector.js"],"names":["define","skylark","langx","noder","datax","geom","eventer","mover","styler","$","init","options","classPrefix","appendTo","document","body","container","createElement","class","append","handlers","forEach","n","data-resize-handler","handler","movable","auto","started","moving","resizing","stopped","e","target","startSize","size","startedCallback","currentSize","direction","left","right","width","deltaX","top","bottom","height","deltaY","pageRect","resizingCallback","stoppedCallback","select","el","startDim","rectDim","startPos","show","unselect","hide","selector","on","off","attr","removeAttr","pagePosition","addClass","Array","prototype","some","map","mixin"],"mappings":";;;;;;;AAAAA,QACI,wBACA,sBACA,sBACA,sBACA,qBACA,wBACA,UACA,uBACA,uBACF,SAASC,EAASC,EAAMC,EAAMC,EAAMC,EAAKC,EAAQC,EAAMC,EAAOC,GA8F5D,QAASC,GAAMC,GACXA,EAAUA,MACVC,EAAcD,EAAQC,aAAe,EAErC,IAAIC,GAAWF,EAAQE,UAAYC,SAASC,IAC5CC,GAAYb,EAAMc,cAAc,OAC5BC,QAAUN,EAAc,cAE5BT,EAAMgB,OAAON,EAASG,GAItBI,MACC,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MAAMC,QAAQ,SAASC,GAC9D,MAAOF,GAASE,GAAKnB,EAAMc,cAAc,KACjCC,QAAUN,EAAc,aAAeA,EAAc,aAAeU,EACpEC,sBAAwBD,KAIpC,KAAK,GAAIA,KAAKF,GAAU,CACpB,GAAII,GAAUJ,EAASE,EACvBnB,GAAMgB,OAAOH,EAAUQ,GACvBjB,EAAMkB,QAAQD,GACVE,MAAO,EACPC,QAAUA,EACVC,OAASC,EACTC,QAAUA,KAKtB,QAASH,GAAQI,GACCA,EAAEC,MAChBC,GAAY5B,EAAK6B,KAAKF,GAClBG,GACAA,EAAgBJ,GAIxB,QAASF,GAASE,GACdK,KAEIC,EAAUC,MAAQD,EAAUE,MAC5BH,EAAYI,MAAQP,EAAUO,MAAQT,EAAEU,OAExCL,EAAYI,MAAQP,EAAUO,MAG9BH,EAAUK,KAAOL,EAAUM,OAC3BP,EAAYQ,OAASX,EAAUW,OAASb,EAAEc,OAE1CT,EAAYQ,OAASX,EAAUW,OAGnCvC,EAAK6B,KAAKF,EAAOI,GACjB/B,EAAKyC,SAAS9B,EAAUX,EAAKyC,SAASd,IAElCe,GACAA,EAAiBhB,GAKzB,QAASD,GAAQC,GACTiB,GACAA,EAAgBjB,GAKxB,QAASkB,GAAOC,EAAGvC,GAEXuC,GAAMA,IAAOlB,IAIjBA,EAASkB,EACTC,SAAWC,QAAUC,SAAW,KAEhChD,EAAKyC,SAAS9B,EAAUX,EAAKyC,SAASd,IACtCxB,EAAO8C,KAAKtC,IAKhB,QAASuC,GAASxB,GACVf,GACAR,EAAOgD,KAAKxC,GAEhBgB,EAAS,KAiBb,QAASyB,KACP,MAAOA,GAzMT,GA2EIzC,GACAI,EACAY,EAOAC,EACAG,EAEAD,EACAY,EACAC,EAfApC,GA1EKN,EAAQoD,GACPpD,EAAQqD,IACPvD,EAAMwD,KACAxD,EAAMyD,WACVxD,EAAKyD,aACHtD,EAAOuD,SACT1D,EAAKuC,OACPoB,MAAMC,UAAUC,KACjBF,MAAMC,UAAUE,IAkER,IAId9B,GACIC,MAAO,EACPC,OAAQ,EACRG,KAAM,EACNC,QAAS,EAmIjB,OATAzC,GAAMkE,MAAMX,GACR/C,KAAOA,EAEPuC,OAASA,EAETM,SAAWA,IAIRtD,EAAQwD,SAAWA","file":"../selector.js","sourcesContent":["define([\n    \"skylark-utils/skylark\",\n    \"skylark-utils/langx\",\n    \"skylark-utils/noder\",\n    \"skylark-utils/datax\",\n    \"skylark-utils/geom\",\n    \"skylark-utils/eventer\",\n    \"./mover\",\n    \"skylark-utils/styler\",\n    \"skylark-utils/query\"\n],function(skylark, langx,noder,datax,geom,eventer,mover,styler,$){\n    var on = eventer.on,\n        off = eventer.off,\n        attr = datax.attr,\n        removeAttr = datax.removeAttr,\n        offset = geom.pagePosition,\n        addClass = styler.addClass,\n        height = geom.height,\n        some = Array.prototype.some,\n        map = Array.prototype.map;\n\n\n\n    var options = {\n        // Function which returns custom X and Y coordinates of the mouse\n            mousePosFetcher: null,\n            // Indicates custom target updating strategy\n            updateTarget: null,\n            // Function which gets HTMLElement as an arg and returns it relative position\n            ratioDefault: 0,\n            posFetcher: null,\n\n            started: null,\n            moving: null,\n            ended: null,\n\n            // Resize unit step\n            step: 1,\n\n            // Minimum dimension\n            minDim: 32,\n\n            // Maximum dimension\n            maxDim: '',\n\n            // Unit used for height resizing\n            unitHeight: 'px',\n\n            // Unit used for width resizing\n            unitWidth: 'px',\n\n            // The key used for height resizing\n            keyHeight: 'height',\n\n            // The key used for width resizing\n            keyWidth: 'width',\n\n            // If true, will override unitHeight and unitWidth, on start, with units\n            // from the current focused element (currently used only in SelectComponent)\n            currentUnit: 1,\n\n            // Handlers\n            direction : {\n                tl: 1, // Top left\n                tc: 1, // Top center\n                tr: 1, // Top right\n                cl: 1, // Center left\n                cr: 1, // Center right\n                bl: 1, // Bottom left\n                bc: 1, // Bottom center\n                br: 1 // Bottom right,\n            },\n            handler : {\n                border : true,\n                grabber: \"\",\n                selector: true\n            }\n        } ,\n\n\n        currentPos,\n        startRect,\n        currentRect,\n        delta;\n\n    var classPrefix = \"\",\n        container,\n        handlers,\n        target,\n        direction ={\n            left : true,\n            right : true,\n            top : true,\n            bottom : true\n        },\n        startSize,\n        currentSize,\n\n        startedCallback,\n        resizingCallback,\n        stoppedCallback;\n\n\n\n    function init (options) {\n        options = options || {};\n        classPrefix = options.classPrefix || \"\";\n\n        var appendTo = options.appendTo || document.body;\n        container = noder.createElement('div',{\n            \"class\" : classPrefix + 'resizer-c'\n        });\n        noder.append(appendTo,container);\n\n\n        // Create handlers\n        handlers = {};\n        ['tl', 'tc', 'tr', 'cl', 'cr', 'bl', 'bc', 'br'].forEach(function(n) {\n            return handlers[n] = noder.createElement(\"i\",{\n                    \"class\" : classPrefix + 'resizer-h ' + classPrefix + 'resizer-h-' + n,\n                    \"data-resize-handler\" : n\n                });\n        });\n\n        for (var n in handlers) {\n            var handler = handlers[n];\n            noder.append(container,handler);\n            mover.movable(handler,{\n                auto : false,\n                started : started,\n                moving : resizing,\n                stopped : stopped\n            })\n        }\n    }\n\n    function started(e) {\n        var handler = e.target;\n        startSize = geom.size(target);\n        if (startedCallback) {\n            startedCallback(e);\n        }\n    }\n\n    function resizing(e) {\n        currentSize = {};\n\n        if (direction.left || direction.right) {\n            currentSize.width = startSize.width + e.deltaX;\n        } else {\n            currentSize.width = startSize.width;\n        }\n\n        if (direction.top || direction.bottom) {\n            currentSize.height = startSize.height + e.deltaY;\n        } else {\n            currentSize.height = startSize.height;\n        }\n\n        geom.size(target,currentSize);\n        geom.pageRect(container,geom.pageRect(target));\n\n        if (resizingCallback) {\n            resizingCallback(e);\n        }\n\n    }\n\n    function stopped(e) {\n        if (stoppedCallback) {\n            stoppedCallback(e);\n        }\n\n    }\n\n    function select(el,options) {\n        // Avoid focusing on already focused element\n        if (el && el === target) {\n          return;\n        } \n\n        target = el; \n        startDim = rectDim = startPos = null;\n\n        geom.pageRect(container,geom.pageRect(target));\n        styler.show(container);\n\n    }\n\n\n    function unselect(e) {\n        if (container) {\n            styler.hide(container);\n        }\n        target = null;\n    }\n\n    function isHandler(el) {\n        if (handlers) {\n            for (var n in handlers) {\n              if (handlers[n] === el) return true;\n            }                \n        }\n        return false;\n    }\n\n\n    function docs(el) {\n        return [noder.ownerDoc(el), noder.doc()];\n    }\n\n    function selector(){\n      return selector;\n    }\n\n    langx.mixin(selector, {\n        init : init,\n\n        select : select,\n\n        unselect : unselect\n\n    });\n\n    return skylark.selector = selector;\n});\n"]}