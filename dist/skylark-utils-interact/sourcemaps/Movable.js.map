{"version":3,"sources":["Movable.js"],"names":["define","langx","noder","datax","geom","eventer","styler","plugins","interact","Movable","on","off","attr","removeAttr","pagePosition","addClass","height","Array","prototype","some","map","Plugin","inherit","klassName","pluginName","_construct","elm","options","updateWithTouchData","e","keys","i","changedTouches","split","length","this","overrided","overlayDiv","downButton","start","stop","startX","startY","originalPos","size","handleEl","handle","auto","constraints","doc","document","startedCallback","started","movingCallback","moving","stoppedCallback","stopped","cursor","docSize","getDocumentSize","preventDefault","button","screenX","screenY","relativePosition","css","createElement","position","top","left","width","zIndex","opacity","append","body","move","deltaX","deltaY","l","t","minX","maxX","minY","maxY","remove","_handleEl","register"],"mappings":"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","file":"../Movable.js","sourcesContent":["define([\r\n    \"skylark-langx/langx\",\r\n    \"skylark-utils-dom/noder\",\r\n    \"skylark-utils-dom/datax\",\r\n    \"skylark-utils-dom/geom\",\r\n    \"skylark-utils-dom/eventer\",\r\n    \"skylark-utils-dom/styler\",\r\n    \"skylark-utils-dom/plugins\",\r\n    \"./interact\"\r\n],function(langx,noder,datax,geom,eventer,styler,plugins,interact){\r\n    var on = eventer.on,\r\n        off = eventer.off,\r\n        attr = datax.attr,\r\n        removeAttr = datax.removeAttr,\r\n        offset = geom.pagePosition,\r\n        addClass = styler.addClass,\r\n        height = geom.height,\r\n        some = Array.prototype.some,\r\n        map = Array.prototype.map;\r\n\r\n    var Movable = plugins.Plugin.inherit({\r\n        klassName: \"Movable\",\r\n\r\n        pluginName : \"lark.movable\",\r\n\r\n\r\n        _construct : function (elm, options) {\r\n            this.overrided(elm,options);\r\n\r\n\r\n\r\n            function updateWithTouchData(e) {\r\n                var keys, i;\r\n\r\n                if (e.changedTouches) {\r\n                    keys = \"screenX screenY pageX pageY clientX clientY\".split(' ');\r\n                    for (i = 0; i < keys.length; i++) {\r\n                        e[keys[i]] = e.changedTouches[0][keys[i]];\r\n                    }\r\n                }\r\n            }\r\n\r\n            options = this.options;\r\n            var handleEl = options.handle || elm,\r\n                auto = options.auto === false ? false : true,\r\n                constraints = options.constraints,\r\n                overlayDiv,\r\n                doc = options.document || document,\r\n                downButton,\r\n                start,\r\n                stop,\r\n                drag,\r\n                startX,\r\n                startY,\r\n                originalPos,\r\n                size,\r\n                startedCallback = options.started,\r\n                movingCallback = options.moving,\r\n                stoppedCallback = options.stopped,\r\n\r\n                start = function(e) {\r\n                    var docSize = geom.getDocumentSize(doc),\r\n                        cursor;\r\n\r\n                    updateWithTouchData(e);\r\n\r\n                    e.preventDefault();\r\n                    downButton = e.button;\r\n                    //handleEl = getHandleEl();\r\n                    startX = e.screenX;\r\n                    startY = e.screenY;\r\n\r\n                    originalPos = geom.relativePosition(elm);\r\n                    size = geom.size(elm);\r\n\r\n                    // Grab cursor from handle so we can place it on overlay\r\n                    cursor = styler.css(handleEl, \"curosr\");\r\n\r\n                    overlayDiv = noder.createElement(\"div\");\r\n                    styler.css(overlayDiv, {\r\n                        position: \"absolute\",\r\n                        top: 0,\r\n                        left: 0,\r\n                        width: docSize.width,\r\n                        height: docSize.height,\r\n                        zIndex: 0x7FFFFFFF,\r\n                        opacity: 0.0001,\r\n                        cursor: cursor\r\n                    });\r\n                    noder.append(doc.body, overlayDiv);\r\n\r\n                    eventer.on(doc, \"mousemove touchmove\", move).on(doc, \"mouseup touchend\", stop);\r\n\r\n                    if (startedCallback) {\r\n                        startedCallback(e);\r\n                    }\r\n                },\r\n\r\n                move = function(e) {\r\n                    updateWithTouchData(e);\r\n\r\n                    if (e.button !== 0) {\r\n                        return stop(e);\r\n                    }\r\n\r\n                    e.deltaX = e.screenX - startX;\r\n                    e.deltaY = e.screenY - startY;\r\n\r\n                    if (auto) {\r\n                        var l = originalPos.left + e.deltaX,\r\n                            t = originalPos.top + e.deltaY;\r\n                        if (constraints) {\r\n\r\n                            if (l < constraints.minX) {\r\n                                l = constraints.minX;\r\n                            }\r\n\r\n                            if (l > constraints.maxX) {\r\n                                l = constraints.maxX;\r\n                            }\r\n\r\n                            if (t < constraints.minY) {\r\n                                t = constraints.minY;\r\n                            }\r\n\r\n                            if (t > constraints.maxY) {\r\n                                t = constraints.maxY;\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    geom.relativePosition(elm, {\r\n                        left: l,\r\n                        top: t\r\n                    })\r\n\r\n                    e.preventDefault();\r\n                    if (movingCallback) {\r\n                        movingCallback(e);\r\n                    }\r\n                },\r\n\r\n                stop = function(e) {\r\n                    updateWithTouchData(e);\r\n\r\n                    eventer.off(doc, \"mousemove touchmove\", move).off(doc, \"mouseup touchend\", stop);\r\n\r\n                    noder.remove(overlayDiv);\r\n\r\n                    if (stoppedCallback) {\r\n                        stoppedCallback(e);\r\n                    }\r\n                };\r\n\r\n            eventer.on(handleEl, \"mousedown touchstart\", start);\r\n\r\n            this._handleEl = handleEl;\r\n\r\n        },\r\n\r\n        remove : function() {\r\n            eventer.off(this._handleEl);\r\n        }\r\n    });\r\n\r\n    plugins.register(Movable,\"movable\");\r\n\r\n    return interact.Movable = Movable;\r\n});\r\n"]}