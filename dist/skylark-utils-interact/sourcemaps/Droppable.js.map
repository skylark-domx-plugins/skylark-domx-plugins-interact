{"version":3,"sources":["Droppable.js"],"names":["define","langx","noder","datax","finder","geom","eventer","styler","plugins","interact","manager","Droppable","on","off","attr","removeAttr","pagePosition","addClass","height","Plugin","inherit","klassName","pluginName","options","draggingClass","_construct","elm","this","overrided","hoverClass","activeClass","self","acceptable","forEach","eventName","isFunction","dragover","e","stopPropagation","e2","create","overElm","target","transfer","draggingTransfer","trigger","preventDefault","dataTransfer","dropEffect","dragenter","_elm","dragleave","removeClass","drop","stop","dragging","end","register"],"mappings":";;;;;;;AAAAA,QACI,sBACA,0BACA,0BACA,2BACA,yBACA,4BACA,2BACA,4BACA,aACA,eACD,SAASC,EAAOC,EAAOC,EAAOC,EAAQC,EAAMC,EAASC,EAAQC,EAASC,EAASC,GAC9E,GASIC,IATKL,EAAQM,GACPN,EAAQO,IACPV,EAAMW,KACAX,EAAMY,WACVV,EAAKW,aACHT,EAAOU,SACTZ,EAAKa,OAGFV,EAAQW,OAAOC,SAC3BC,UAAW,YAEXC,WAAa,iBAEbC,SACIC,cAAgB,YAGpBC,WAAY,SAASC,EAAKH,GACtBI,KAAKC,UAAUF,EAAIH,EAEnB,IAGIM,GACAC,EAJAC,EAAOJ,KACPJ,EAAUQ,EAAKR,QAIfS,GAHgBT,EAAQC,eAGX,IAEhB,UAAW,UAAW,SAAU,UAAW,WAAWS,QAAQ,SAASC,GAChEjC,EAAMkC,WAAWZ,EAAQW,KACzBH,EAAKnB,GAAGsB,EAAWX,EAAQW,MAInC5B,EAAQM,GAAGc,GACPU,SAAY,SAASC,GAGjB,GAFAA,EAAEC,kBAEGN,EAAL,CAIA,GAAIO,GAAKjC,EAAQkC,OAAO,WACpBC,QAASJ,EAAEK,OACXC,SAAUjC,EAAQkC,iBAClBZ,YAAY,GAEhBD,GAAKc,QAAQN,GAETA,EAAGP,aACHK,EAAES,iBAEFT,EAAEU,aAAaC,WAAa,cAKpCC,UAAa,SAASZ,GAClB,GACIX,IADUK,EAAKR,QACTQ,EAAKmB,MAEXX,EAAKjC,EAAQkC,OAAO,WACpBG,SAAUjC,EAAQkC,kBAGtBb,GAAKc,QAAQN,GAEbF,EAAEC,kBAEET,GAAcG,GACdzB,EAAOU,SAASS,EAAKG,IAI7BsB,UAAa,SAASd,GAClB,GACIX,IADUK,EAAKR,QACTQ,EAAKmB,KACf,KAAKlB,EAAY,OAAO,CAExB,IAAIO,GAAKjC,EAAQkC,OAAO,UACpBG,SAAUjC,EAAQkC,kBAGtBb,GAAKc,QAAQN,GAEbF,EAAEC,kBAEET,GAAcG,GACdzB,EAAO6C,YAAY1B,EAAKG,IAIhCwB,KAAQ,SAAShB,GACb,GACIX,IADUK,EAAKR,QACTQ,EAAKmB,KAIf,IAFA5C,EAAQgD,KAAKjB,GAER3B,EAAQ6C,SAAb,CAII1B,GAAcG,GACdzB,EAAOU,SAASS,EAAKG,EAGzB,IAAIU,GAAKjC,EAAQkC,OAAO,WACpBG,SAAUjC,EAAQkC,kBAGtBb,GAAKc,QAAQN,GAEb7B,EAAQ8C,KAAI,OAIpB9C,EAAQE,GAAG,aAAc,SAASyB,GAC9B,GAAIE,GAAKjC,EAAQkC,OAAO,WACpBG,SAAUjC,EAAQkC,iBAClBZ,YAAY,GAGhBD,GAAKc,QAAQN,GAEbP,EAAaO,EAAGP,WAChBH,EAAaU,EAAGV,WAChBC,EAAcS,EAAGT,YAEbA,GAAeE,GACfzB,EAAOU,SAASS,EAAKI,KAG1BlB,GAAG,WAAY,SAASyB,GACvB,GAAIE,GAAKjC,EAAQkC,OAAO,SACpBG,SAAUjC,EAAQkC,iBAClBZ,YAAY,GAGhBD,GAAKc,QAAQN,GAETV,GAAcG,GACdzB,EAAO6C,YAAY1B,EAAKG,GAExBC,GAAeE,GACfzB,EAAO6C,YAAY1B,EAAKI,GAG5BE,GAAa,EACbF,EAAc,KACdD,EAAa,UAQzB,OAFArB,GAAQiD,SAAS9C,EAAU,aAEpBF,EAASE,UAAYA","file":"../Droppable.js","sourcesContent":["define([\r\n    \"skylark-langx/langx\",\r\n    \"skylark-utils-dom/noder\",\r\n    \"skylark-utils-dom/datax\",\r\n    \"skylark-utils-dom/finder\",\r\n    \"skylark-utils-dom/geom\",\r\n    \"skylark-utils-dom/eventer\",\r\n    \"skylark-utils-dom/styler\",\r\n    \"skylark-utils-dom/plugins\",\r\n    \"./interact\",\r\n    \"./ddmanager\"\r\n], function(langx, noder, datax, finder, geom, eventer, styler, plugins, interact,manager) {\r\n    var on = eventer.on,\r\n        off = eventer.off,\r\n        attr = datax.attr,\r\n        removeAttr = datax.removeAttr,\r\n        offset = geom.pagePosition,\r\n        addClass = styler.addClass,\r\n        height = geom.height;\r\n\r\n\r\n    var Droppable = plugins.Plugin.inherit({\r\n        klassName: \"Droppable\",\r\n\r\n        pluginName : \"lark.droppable\",\r\n\r\n        options : {\r\n            draggingClass : \"dragging\"\r\n        },\r\n\r\n        _construct: function(elm, options) {\r\n            this.overrided(elm,options);\r\n\r\n            var self = this,\r\n                options = self.options,\r\n                draggingClass = options.draggingClass,\r\n                hoverClass,\r\n                activeClass,\r\n                acceptable = true;\r\n\r\n            [\"started\", \"entered\", \"leaved\", \"dropped\", \"overing\"].forEach(function(eventName) {\r\n                if (langx.isFunction(options[eventName])) {\r\n                    self.on(eventName, options[eventName]);\r\n                }\r\n            });\r\n\r\n            eventer.on(elm, {\r\n                \"dragover\": function(e) {\r\n                    e.stopPropagation()\r\n\r\n                    if (!acceptable) {\r\n                        return\r\n                    }\r\n\r\n                    var e2 = eventer.create(\"overing\", {\r\n                        overElm: e.target,\r\n                        transfer: manager.draggingTransfer,\r\n                        acceptable: true\r\n                    });\r\n                    self.trigger(e2);\r\n\r\n                    if (e2.acceptable) {\r\n                        e.preventDefault() // allow drop\r\n\r\n                        e.dataTransfer.dropEffect = \"copyMove\";\r\n                    }\r\n\r\n                },\r\n\r\n                \"dragenter\": function(e) {\r\n                    var options = self.options,\r\n                        elm = self._elm;\r\n\r\n                    var e2 = eventer.create(\"entered\", {\r\n                        transfer: manager.draggingTransfer\r\n                    });\r\n\r\n                    self.trigger(e2);\r\n\r\n                    e.stopPropagation()\r\n\r\n                    if (hoverClass && acceptable) {\r\n                        styler.addClass(elm, hoverClass)\r\n                    }\r\n                },\r\n\r\n                \"dragleave\": function(e) {\r\n                    var options = self.options,\r\n                        elm = self._elm;\r\n                    if (!acceptable) return false\r\n\r\n                    var e2 = eventer.create(\"leaved\", {\r\n                        transfer: manager.draggingTransfer\r\n                    });\r\n\r\n                    self.trigger(e2);\r\n\r\n                    e.stopPropagation()\r\n\r\n                    if (hoverClass && acceptable) {\r\n                        styler.removeClass(elm, hoverClass);\r\n                    }\r\n                },\r\n\r\n                \"drop\": function(e) {\r\n                    var options = self.options,\r\n                        elm = self._elm;\r\n\r\n                    eventer.stop(e); // stops the browser from redirecting.\r\n\r\n                    if (!manager.dragging) return\r\n\r\n                    // manager.dragging.elm.removeClass('dragging');\r\n\r\n                    if (hoverClass && acceptable) {\r\n                        styler.addClass(elm, hoverClass)\r\n                    }\r\n\r\n                    var e2 = eventer.create(\"dropped\", {\r\n                        transfer: manager.draggingTransfer\r\n                    });\r\n\r\n                    self.trigger(e2);\r\n\r\n                    manager.end(true)\r\n                }\r\n            });\r\n\r\n            manager.on(\"dndStarted\", function(e) {\r\n                var e2 = eventer.create(\"started\", {\r\n                    transfer: manager.draggingTransfer,\r\n                    acceptable: false\r\n                });\r\n\r\n                self.trigger(e2);\r\n\r\n                acceptable = e2.acceptable;\r\n                hoverClass = e2.hoverClass;\r\n                activeClass = e2.activeClass;\r\n\r\n                if (activeClass && acceptable) {\r\n                    styler.addClass(elm, activeClass);\r\n                }\r\n\r\n            }).on(\"dndEnded\", function(e) {\r\n                var e2 = eventer.create(\"ended\", {\r\n                    transfer: manager.draggingTransfer,\r\n                    acceptable: false\r\n                });\r\n\r\n                self.trigger(e2);\r\n\r\n                if (hoverClass && acceptable) {\r\n                    styler.removeClass(elm, hoverClass);\r\n                }\r\n                if (activeClass && acceptable) {\r\n                    styler.removeClass(elm, activeClass);\r\n                }\r\n\r\n                acceptable = false;\r\n                activeClass = null;\r\n                hoverClass = null;\r\n            });\r\n\r\n        }\r\n    });\r\n\r\n    plugins.register(Droppable,\"droppable\");\r\n\r\n    return interact.Droppable = Droppable;\r\n});"]}