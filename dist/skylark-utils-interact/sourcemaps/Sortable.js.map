{"version":3,"sources":["Sortable.js"],"names":["define","interact","langx","noder","datax","geom","eventer","styler","$","plugins","Draggable","Droppable","Movable","Resizable","dragging","placeholders","on","off","attr","removeAttr","pagePosition","addClass","height","Array","prototype","some","map","Plugin","inherit","klassName","enable","disable","destory","Sortable","pluginName","options","connectWith","placeholder","placeholderClass","draggingClass","items","_construct","container","this","overrided","index","$container","$items","children","createElement","test","tagName","class","source","handle","preparing","e","started","ghost","dragSource","transfer","text","ended","show","detach","parent","trigger","item","acceptable","activeClass","hoverClass","overing","is","overElm","forcePlaceholderSize","outerHeight","hide","not","length","append","dropped","filter","after","data","add","register"],"mappings":";;;;;;;AAAAA,QACI,aACA,sBACA,0BACA,0BACA,yBACA,4BACA,2BACA,0BACA,4BACA,cACA,cACA,YACA,eACF,SAASC,EAAUC,EAAMC,EAAMC,EAAMC,EAAKC,EAAQC,EAAOC,EAAEC,EAAQC,EAAUC,EAAWC,EAAQC,GAC9F,GA2BIC,GAAUC,GA3BLT,EAAQU,GACPV,EAAQW,IACPb,EAAMc,KACAd,EAAMe,WACVd,EAAKe,aACHb,EAAOc,SACThB,EAAKiB,OACPC,MAAMC,UAAUC,KACjBF,MAAMC,UAAUE,IAEbjB,EAAQkB,OAAOC,SACxBC,UAAc,SAEdC,OAAS,aAITC,QAAU,aAIVC,QAAU,eAMexB,KAGzByB,EAAWxB,EAAQkB,OAAOC,SAC1BC,UAAW,WAEXK,WAAa,gBAEbC,SACIC,aAAa,EACbC,YAAa,KACbC,iBAAkB,uBAClBC,cAAe,oBACfC,MAAQ,MAWZC,WAAa,SAAUC,EAAUP,GAC7BQ,KAAKC,UAAUF,EAAUP,GAEzBA,EAAUQ,KAAKR,OAEf,IAAcU,GACVC,EAAatC,EAAEkC,GACfK,EAASD,EAAWE,SAASb,EAAQK,OACrCH,EAAc7B,EAAE2B,EAAQE,aAAelC,EAAM8C,cAAc,aAAaC,KAAKR,EAAUS,SAAW,KAAO,OACzGC,QAAUjB,EAAQG,mBAGtB5B,GAAUgC,GACNW,OAASlB,EAAQK,MACjBc,OAASnB,EAAQmB,OACjBf,cAAgBJ,EAAQI,cACxBgB,UAAY,SAASC,KAGrBC,QAAS,SAASD,GACdA,EAAEE,MAAQF,EAAEG,WACZH,EAAEI,UACEC,KAAQ,SAEZhB,GAAS/B,EAAWN,EAAEgD,EAAEG,aAAad,SAEzCiB,MAAQ,SAASN,GACR1C,IAGLA,EAASiD,OACThD,EAAaiD,SACTnB,GAAS/B,EAAS+B,SAClB/B,EAASmD,SAASC,QAAQ,cAAeC,KAAMrD,IAEnDA,EAAW,SAMnBH,EAAU+B,GACNe,QAAS,SAASD,GACdA,EAAEY,YAAa,EACfZ,EAAEa,YAAc,SAChBb,EAAEc,WAAa,QAEnBC,QAAU,SAASf,GACXT,EAAOyB,GAAGhB,EAAEiB,UACRtC,EAAQuC,sBACRrC,EAAYf,OAAOR,EAAS6D,eAEhC7D,EAAS8D,OACTpE,EAAEgD,EAAEiB,SAASpC,EAAYQ,QAAUrC,EAAEgD,EAAEiB,SAAS5B,QAAU,QAAU,UAAUR,GAC9EtB,EAAa8D,IAAIxC,GAAa2B,UACtBjD,EAAayD,GAAGhB,EAAEiB,UAAajE,EAAEgD,EAAEiB,SAASzB,SAASb,EAAQK,OAAOsC,SAC5E/D,EAAaiD,SACbxD,EAAEgD,EAAEiB,SAASM,OAAO1C,KAG5B2C,QAAU,SAASxB,GACfzC,EAAakE,OAAO,YAAYC,MAAMpE,GACtCA,EAASiD,OACThD,EAAaiD,SAEblD,EAAW,QAInBgC,EAAWqC,KAAK,QAAShD,EAAQK,OACjCzB,EAAeA,EAAaqE,IAAI/C,GAC5BF,EAAQC,aACR5B,EAAE2B,EAAQC,aAAagD,IAAIzC,MAAMwC,KAAK,cAAehD,EAAQC,eAQzE,OAFA3B,GAAQ4E,SAASpD,EAAS,YAEnBhC,EAASgC,SAAWA","file":"../Sortable.js","sourcesContent":["define([\r\n    \"./interact\",\r\n    \"skylark-langx/langx\",\r\n    \"skylark-utils-dom/noder\",\r\n    \"skylark-utils-dom/datax\",\r\n    \"skylark-utils-dom/geom\",\r\n    \"skylark-utils-dom/eventer\",\r\n    \"skylark-utils-dom/styler\",\r\n    \"skylark-utils-dom/query\",\r\n    \"skylark-utils-dom/plugins\",\r\n    \"./Draggable\",\r\n    \"./Droppable\",\r\n    \"./Movable\",\r\n    \"./Resizable\"\r\n],function(interact, langx,noder,datax,geom,eventer,styler,$,plugins,Draggable,Droppable, Movable,Resizable){\r\n    var on = eventer.on,\r\n        off = eventer.off,\r\n        attr = datax.attr,\r\n        removeAttr = datax.removeAttr,\r\n        offset = geom.pagePosition,\r\n        addClass = styler.addClass,\r\n        height = geom.height,\r\n        some = Array.prototype.some,\r\n        map = Array.prototype.map;\r\n\r\n    var Sorter = plugins.Plugin.inherit({\r\n        \"klassName\" : \"Sorter\",\r\n\r\n        enable : function() {\r\n\r\n        },\r\n        \r\n        disable : function() {\r\n\r\n        },\r\n\r\n        destory : function() {\r\n\r\n        }\r\n    });\r\n\r\n\r\n    var dragging, placeholders = $();\r\n\r\n\r\n    var Sortable = plugins.Plugin.inherit({\r\n        klassName: \"Sortable\",\r\n\r\n        pluginName : \"lark.sortable\",\r\n        \r\n        options : {\r\n            connectWith: false,\r\n            placeholder: null,\r\n            placeholderClass: 'sortable-placeholder',\r\n            draggingClass: 'sortable-dragging',\r\n            items : null\r\n        },\r\n\r\n        /*\r\n         * @param {HTMLElement} container  the element to use as a sortable container\r\n         * @param {Object} options  options object\r\n         * @param {String} [options.items = \"\"] \r\n         * @param {Object} [options.connectWith =] the selector to create connected lists\r\n         * @param {Object} [options\r\n         * @param {Object} [options\r\n         */\r\n        _construct : function (container,options) {\r\n            this.overrided(container,options);\r\n\r\n            options = this.options;\r\n\r\n            var isHandle, index, \r\n                $container = $(container), \r\n                $items = $container.children(options.items);\r\n            var placeholder = $(options.placeholder || noder.createElement(/^(ul|ol)$/i.test(container.tagName) ? 'li' : 'div',{\r\n                \"class\" : options.placeholderClass\r\n            }));\r\n\r\n            Draggable(container,{\r\n                source : options.items,\r\n                handle : options.handle,\r\n                draggingClass : options.draggingClass,\r\n                preparing : function(e) {\r\n                    //e.dragSource = e.handleElm;\r\n                },\r\n                started :function(e) {\r\n                    e.ghost = e.dragSource;\r\n                    e.transfer = {\r\n                        \"text\": \"dummy\"\r\n                    };\r\n                    index = (dragging = $(e.dragSource)).index();\r\n                },\r\n                ended : function(e) {\r\n                    if (!dragging) {\r\n                        return;\r\n                    }\r\n                    dragging.show();\r\n                    placeholders.detach();\r\n                    if (index != dragging.index()) {\r\n                        dragging.parent().trigger('sortupdate', {item: dragging});\r\n                    }\r\n                    dragging = null;                \r\n                }\r\n\r\n            });\r\n\r\n            \r\n            Droppable(container,{\r\n                started: function(e) {\r\n                    e.acceptable = true;\r\n                    e.activeClass = \"active\";\r\n                    e.hoverClass = \"over\";\r\n                },\r\n                overing : function(e) {\r\n                    if ($items.is(e.overElm)) {\r\n                        if (options.forcePlaceholderSize) {\r\n                            placeholder.height(dragging.outerHeight());\r\n                        }\r\n                        dragging.hide();\r\n                        $(e.overElm)[placeholder.index() < $(e.overElm).index() ? 'after' : 'before'](placeholder);\r\n                        placeholders.not(placeholder).detach();\r\n                    } else if (!placeholders.is(e.overElm) && !$(e.overElm).children(options.items).length) {\r\n                        placeholders.detach();\r\n                        $(e.overElm).append(placeholder);\r\n                    }                \r\n                },\r\n                dropped : function(e) {\r\n                    placeholders.filter(':visible').after(dragging);\r\n                    dragging.show();\r\n                    placeholders.detach();\r\n\r\n                    dragging = null;                \r\n                  }\r\n            });\r\n\r\n            $container.data('items', options.items)\r\n            placeholders = placeholders.add(placeholder);\r\n            if (options.connectWith) {\r\n                $(options.connectWith).add(this).data('connectWith', options.connectWith);\r\n            }\r\n            \r\n        }\r\n    });\r\n\r\n    plugins.register(Sortable,\"sortable\");\r\n\r\n    return interact.Sortable = Sortable;\r\n});\r\n"]}